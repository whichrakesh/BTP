^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLibAddin/Clients/CppInstrumentIn/instrument_in.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loop info: int i = 4  i < argc  i += 1
{
-----------------------------------------------
array table
argv -> ['[i]']
-----------------------------------------------
}

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLibAddin/qlo/basketlossmodels.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLibAddin/qlo/swaptionvolstructure.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loop info: QuantLib::Size i=0  i<sabrParameters.rows()  ++i
{
	loop info: QuantLib::Size j=0  j<sabrParameters.columns()-1  ++j
	{
	-----------------------------------------------
	array table
	par -> ['[j]']
	sabrParameters -> ['[i][j]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
sabrParameters -> ['[i]']
-----------------------------------------------
}

loop info: QuantLib::Size i=0  i<volCube.rows()  ++i
{
	loop info: QuantLib::Size j=0  j<volCube.columns()  ++j
	{
	-----------------------------------------------
	array table
	vol -> ['[j]']
	volCube -> ['[i][j]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLibAddin/qlo/bonds.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loop info: Size i=0  i<n  ++i
{
-----------------------------------------------
array table
bonds -> ['[i]', '[i]']
-----------------------------------------------
}

loop info: Size i=0  i<bonds.size()  ++i
{
-----------------------------------------------
array table
bonds -> ['[i]', '[i]']
-----------------------------------------------
}

loop info: Size i=0  i<n  ++i
{
-----------------------------------------------
array table
bondItems -> ['[i]']
bonds -> ['[i]', '[i]']
-----------------------------------------------
}

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLibAddin/qlo/smilesection.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLibAddin/qlo/couponvectors.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLibAddin/qlo/defaultbasket.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLibAddin/qlo/timeseries.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loop info: Size i=0  i<values.size()  ++i
{
-----------------------------------------------
array table
dates -> ['[i]']
values -> ['[i]', '[i]']
-----------------------------------------------
}

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLibAddin/qlo/leg.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loop info: QuantLib::Size i=0  i<amounts.size()  ++i
{
-----------------------------------------------
array table
amounts -> ['[i]', '[i]', '[i]', '[i]']
dates -> ['[i]', '[i]']
-----------------------------------------------
}

loop info: QuantLib::Size i=0  i<legs.size()  ++i
{
-----------------------------------------------
array table
legs -> ['[i]']
-----------------------------------------------
}

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLibAddin/qlo/date.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLibAddin/qlo/sequencestatistics.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLibAddin/qlo/piecewiseyieldcurve.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLibAddin/qlo/quotes.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loop info: QuantLib::Size i=0  i<q.size()  ++i
{
	loop info: QuantLib::Size j=0  j<q[i].size()  ++j
	{
	-----------------------------------------------
	array table
	sq -> ['[i][j]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
sq -> ['[i]']
-----------------------------------------------
}

loop info: QuantLib::Size i=0  i<n   ++i
{
-----------------------------------------------
array table
quotes -> ['[i]']
simpleQuotes -> ['[i]']
-----------------------------------------------
}

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLibAddin/qlo/ratehelpers.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loop info: QuantLib::Size i=0  i<nInstruments  ++i
{
-----------------------------------------------
array table
priority -> ['[i]']
qlarhs -> ['[i]']
minDist -> ['[0]', '[i]']
-----------------------------------------------
}

loop info: QuantLib::Size i=0  i<nInstruments  ++i
{
-----------------------------------------------
array table
rhsAll -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
-----------------------------------------------
}

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLibAddin/qlo/randomsequencegenerator.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLibAddin/qlo/interpolation.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLibAddin/qlo/cmsmarket.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLibAddin/qlo/flowanalysis.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loop info: QuantLib::Size i=0  i<leg.size()  ++i
{
-----------------------------------------------
array table
leg -> ['[i]', '[i]']
-----------------------------------------------
}

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLibAddin/qlo/swap.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loop info: QuantLib::Size i=0  i<legPtrs.size()  ++i
{
-----------------------------------------------
array table
legPtrs -> ['[i]']
legs -> ['[i]']
-----------------------------------------------
}

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLibAddin/qlo/index.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loop info: QuantLib::Size i=0  i<values.size()  ++i
{
-----------------------------------------------
array table
dates -> ['[i]']
values -> ['[i]', '[i]']
-----------------------------------------------
}

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLibAddin/qlo/serialization/processor.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLibAddin/qlo/conversions/conversions.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLibAddin/Addins/Guile/guileutils.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loop info: std::size_t i = properties.size()   --i != std::size_t(-1)   
{
-----------------------------------------------
array table
properties -> ['[i]']
-----------------------------------------------
}

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLibAddin/Addins/Calc_old/conversions.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loop info: int i=0  i<in.getLength()  ++i
{
	loop info: int j=0  j<in[i].getLength()  ++j
	{
	-----------------------------------------------
	array table
	in -> ['[i][j]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: int i=0  i<rows  ++i
{
	loop info: int j=0  j<cols  ++j
	{
	-----------------------------------------------
	array table
	row -> ['[j]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
in -> ['[i]']
-----------------------------------------------
}

loop info: unsigned int i=0  i<v.size()  ++i
{
-----------------------------------------------
array table
ret -> ['[i]']
-----------------------------------------------
}

loop info: unsigned int i=0  i<in.size()  ++i
{
-----------------------------------------------
array table
ret -> ['[i]']
in -> ['[i]']
-----------------------------------------------
}

loop info: unsigned int i=0  i<in.rows()  ++i
{
	loop info: unsigned int j=0  j<in.columns()  ++j
	{
	-----------------------------------------------
	array table
	in -> ['[i][j]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
ret -> ['[i]']
-----------------------------------------------
}

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLibAddin/Addins/Calc_old/calcutils.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loop info: unsigned int i=0  i<v.size()  ++i
{
-----------------------------------------------
array table
ss -> ['[i]']
-----------------------------------------------
}

loop info: unsigned int i=0  i<v.size()  ++i
{
-----------------------------------------------
array table
ss -> ['[i]']
-----------------------------------------------
}

loop info: unsigned int i=0  i<v.size()  ++i
{
-----------------------------------------------
array table
ss -> ['[i]']
-----------------------------------------------
}

loop info: unsigned int i=0  i<v.size()  ++i
{
-----------------------------------------------
array table
ss -> ['[i]']
-----------------------------------------------
}

loop info: unsigned int i=0  i<v.size()  ++i
{
-----------------------------------------------
array table
ss -> ['[i]']
-----------------------------------------------
}

loop info: unsigned int i=0  i<vv.size()  ++i
{
	loop info: unsigned int j=0  j<v.size()  ++j
	{
	-----------------------------------------------
	array table
	-----------------------------------------------
	}
 -----------------------------------------------
array table
ss -> ['[i]']
vv -> ['[i]']
-----------------------------------------------
}

loop info: unsigned int i=0  i<vv.size()  ++i
{
	loop info: unsigned int j=0  j<v.size()  ++j
	{
	-----------------------------------------------
	array table
	-----------------------------------------------
	}
 -----------------------------------------------
array table
ss -> ['[i]']
vv -> ['[i]']
-----------------------------------------------
}

loop info: unsigned int i=0  i<vv.size()  ++i
{
	loop info: unsigned int j=0  j<v.size()  ++j
	{
	-----------------------------------------------
	array table
	-----------------------------------------------
	}
 -----------------------------------------------
array table
ss -> ['[i]']
vv -> ['[i]']
-----------------------------------------------
}

loop info: unsigned int i=0  i<vv.size()  ++i
{
	loop info: unsigned int j=0  j<v.size()  ++j
	{
	-----------------------------------------------
	array table
	-----------------------------------------------
	}
 -----------------------------------------------
array table
ss -> ['[i]']
vv -> ['[i]']
-----------------------------------------------
}

loop info: unsigned int i=0  i<vv.size()  ++i
{
	loop info: unsigned int j=0  j<v.size()  ++j
	{
	-----------------------------------------------
	array table
	-----------------------------------------------
	}
 -----------------------------------------------
array table
ss -> ['[i]']
vv -> ['[i]']
-----------------------------------------------
}

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLibAddin/Addins/Calc/conversions.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loop info: unsigned int i=0  i<v.size()  ++i
{
-----------------------------------------------
array table
ss -> ['[i]']
-----------------------------------------------
}

loop info: unsigned int i=0  i<v.size()  ++i
{
-----------------------------------------------
array table
ss -> ['[i]']
-----------------------------------------------
}

loop info: unsigned int i=0  i<v.size()  ++i
{
-----------------------------------------------
array table
ss -> ['[i]']
-----------------------------------------------
}

loop info: unsigned int i=0  i<v.size()  ++i
{
-----------------------------------------------
array table
ss -> ['[i]']
-----------------------------------------------
}

loop info: unsigned int i=0  i<v.size()  ++i
{
-----------------------------------------------
array table
ss -> ['[i]']
-----------------------------------------------
}

loop info: unsigned int i=0  i<vv.size()  ++i
{
	loop info: unsigned int j=0  j<v.size()  ++j
	{
	-----------------------------------------------
	array table
	-----------------------------------------------
	}
 -----------------------------------------------
array table
ss -> ['[i]']
vv -> ['[i]']
-----------------------------------------------
}

loop info: unsigned int i=0  i<vv.size()  ++i
{
	loop info: unsigned int j=0  j<v.size()  ++j
	{
	-----------------------------------------------
	array table
	-----------------------------------------------
	}
 -----------------------------------------------
array table
ss -> ['[i]']
vv -> ['[i]']
-----------------------------------------------
}

loop info: unsigned int i=0  i<vv.size()  ++i
{
	loop info: unsigned int j=0  j<v.size()  ++j
	{
	-----------------------------------------------
	array table
	-----------------------------------------------
	}
 -----------------------------------------------
array table
ss -> ['[i]']
vv -> ['[i]']
-----------------------------------------------
}

loop info: unsigned int i=0  i<vv.size()  ++i
{
	loop info: unsigned int j=0  j<v.size()  ++j
	{
	-----------------------------------------------
	array table
	-----------------------------------------------
	}
 -----------------------------------------------
array table
ss -> ['[i]']
vv -> ['[i]']
-----------------------------------------------
}

loop info: unsigned int i=0  i<vv.size()  ++i
{
	loop info: unsigned int j=0  j<v.size()  ++j
	{
	-----------------------------------------------
	array table
	-----------------------------------------------
	}
 -----------------------------------------------
array table
ss -> ['[i]']
vv -> ['[i]']
-----------------------------------------------
}

loop info: int i=0  i<ss.getLength()  ++i
{
	loop info: int j=0  j<ss[i].getLength()  ++j
	{
	-----------------------------------------------
	array table
	ss -> ['[i][j]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: int i=0  i<ss.getLength()  ++i
{
	loop info: int j=0  j<ss[i].getLength()  ++j
	{
	-----------------------------------------------
	array table
	ss -> ['[i][j]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: int i=0  i<ss.getLength()  ++i
{
	loop info: int j=0  j<ss[i].getLength()  ++j
	{
	-----------------------------------------------
	array table
	ss -> ['[i][j]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: int i=0  i<ss.getLength()  ++i
{
	loop info: int j=0  j<ss[i].getLength()  ++j
	{
	-----------------------------------------------
	array table
	ss -> ['[i][j]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: int i=0  i<ss.getLength()  ++i
{
	loop info: int j=0  j<ss[i].getLength()  ++j
	{
	-----------------------------------------------
	array table
	ss -> ['[i][j]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: unsigned int i=0  i<v.size()  ++i
{
-----------------------------------------------
array table
ret -> ['[i]']
-----------------------------------------------
}

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLibAddin/Addins/Calc/calcutils.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loop info: unsigned int i=0  i<v.size()  ++i
{
-----------------------------------------------
array table
ss -> ['[i]']
-----------------------------------------------
}

loop info: unsigned int i=0  i<v.size()  ++i
{
-----------------------------------------------
array table
ss -> ['[i]']
-----------------------------------------------
}

loop info: unsigned int i=0  i<v.size()  ++i
{
-----------------------------------------------
array table
ss -> ['[i]']
-----------------------------------------------
}

loop info: unsigned int i=0  i<v.size()  ++i
{
-----------------------------------------------
array table
ss -> ['[i]']
-----------------------------------------------
}

loop info: unsigned int i=0  i<v.size()  ++i
{
-----------------------------------------------
array table
ss -> ['[i]']
-----------------------------------------------
}

loop info: unsigned int i=0  i<vv.size()  ++i
{
	loop info: unsigned int j=0  j<v.size()  ++j
	{
	-----------------------------------------------
	array table
	-----------------------------------------------
	}
 -----------------------------------------------
array table
ss -> ['[i]']
vv -> ['[i]']
-----------------------------------------------
}

loop info: unsigned int i=0  i<vv.size()  ++i
{
	loop info: unsigned int j=0  j<v.size()  ++j
	{
	-----------------------------------------------
	array table
	-----------------------------------------------
	}
 -----------------------------------------------
array table
ss -> ['[i]']
vv -> ['[i]']
-----------------------------------------------
}

loop info: unsigned int i=0  i<vv.size()  ++i
{
	loop info: unsigned int j=0  j<v.size()  ++j
	{
	-----------------------------------------------
	array table
	-----------------------------------------------
	}
 -----------------------------------------------
array table
ss -> ['[i]']
vv -> ['[i]']
-----------------------------------------------
}

loop info: unsigned int i=0  i<vv.size()  ++i
{
	loop info: unsigned int j=0  j<v.size()  ++j
	{
	-----------------------------------------------
	array table
	-----------------------------------------------
	}
 -----------------------------------------------
array table
ss -> ['[i]']
vv -> ['[i]']
-----------------------------------------------
}

loop info: unsigned int i=0  i<vv.size()  ++i
{
	loop info: unsigned int j=0  j<v.size()  ++j
	{
	-----------------------------------------------
	array table
	-----------------------------------------------
	}
 -----------------------------------------------
array table
ss -> ['[i]']
vv -> ['[i]']
-----------------------------------------------
}

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLibAddin/Addins/Calc/qladdin.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLibAddin/Addins/Calc/calcaddins.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLib/Docs/Examples/history_iterators.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLib/test-suite/inflationcapfloor.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loop info: Size i=0  i<N  i++
{
-----------------------------------------------
array table
iiData -> ['[i]', '[i]']
-----------------------------------------------
}

loop info: Size i=0  i<rpiSchedule.size() i++
{
-----------------------------------------------
array table
rpiSchedule -> ['[i]']
fixData -> ['[i]']
-----------------------------------------------
}

loop info: Size whichPricer = 0  whichPricer < 3  whichPricer++
{
	loop info: Size i=0  i<LENGTH(lengths)  i++
	{
		loop info: Size j=0  j<LENGTH(cap_rates)  j++
		{
			loop info: Size k=0  k<LENGTH(floor_rates)  k++
			{
				loop info: Size l=0  l<LENGTH(vols)  l++
				{
					loop info: Integer m=0  m<lengths[i]*1  m++
						{
						-----------------------------------------------
						array table
						caplets -> ['[m]', '[m]']
						vols -> ['[l]']
						-----------------------------------------------
						}
					loop info: Integer m=0  m<lengths[i]*1  m++
						{
						-----------------------------------------------
						array table
						floorlets -> ['[m]', '[m]']
						vols -> ['[l]']
						-----------------------------------------------
						}
					loop info: Integer m=0  m<lengths[i]*1  m++
						{
						-----------------------------------------------
						array table
						vols -> ['[l]']
						collarlets -> ['[m]', '[m]']
						-----------------------------------------------
						}
 				-----------------------------------------------
				array table
				lengths -> ['[i]', '[i]', '[i]', '[i]', '[i]']
				floor_rates -> ['[k]', '[k]', '[k]', '[j]', '[j]']
				cap_rates -> ['[j]', '[j]', '[j]', '[j]', '[j]']
				floorlets -> ['[0]']
				vols -> ['[l]', '[l]', '[l]', '[l]', '[l]', '[l]', '[l]']
				caplets -> ['[0]']
				collarlets -> ['[0]', '[0]']
				-----------------------------------------------
				}
 			-----------------------------------------------
			array table
			-----------------------------------------------
			}
 		-----------------------------------------------
		array table
		-----------------------------------------------
		}
 	-----------------------------------------------
	array table
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: Size whichPricer = 0  whichPricer < 3  whichPricer++
{
	loop info: Size i=0  i<LENGTH(lengths)  i++
	{
		loop info: Size j=0  j<LENGTH(strikes)  j++
		{
			loop info: Size k=0  k<LENGTH(vols)  k++
			{
			-----------------------------------------------
			array table
			lengths -> ['[i]', '[i]', '[i]']
			vols -> ['[k]', '[k]', '[k]']
			strikes -> ['[j]', '[j]', '[j]', '[j]']
			-----------------------------------------------
			}
 		-----------------------------------------------
		array table
		-----------------------------------------------
		}
 	-----------------------------------------------
	array table
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLib/test-suite/marketmodel_smmcapletcalibration.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loop info: Size i=0  i<todaysForwards_.size()  ++i
{
-----------------------------------------------
array table
todaysForwards_ -> ['[i]', '[i]']
-----------------------------------------------
}

loop info: Size i=0  i<todaysSwaps_.size()  i++
{
-----------------------------------------------
array table
todaysForwards -> ['[i]', '[i]']
todaysSwaps -> ['[i]', '[i]']
capletDisplacedVols -> ['[i]']
swaptionDisplacedVols -> ['[i]']
swaptionVols -> ['[i]']
capletVols_ -> ['[i]']
mktCapletVols -> ['[i]', '[i]']
mktSwaptionVols -> ['[i]', '[i]']
-----------------------------------------------
}

loop info: Size i=0  i<numberOfRates  ++i
{
-----------------------------------------------
array table
swapVariances -> ['[i]']
-----------------------------------------------
}

loop info: Size i=0  i<numberOfRates  ++i
{
-----------------------------------------------
array table
capletVols -> ['[i]']
capletTotCovariance -> ['[i][i]']
rateTimes_ -> ['[i]']
-----------------------------------------------
}

loop info: Size i=0  i<numberOfRates  ++i
{
-----------------------------------------------
array table
swapTerminalCovariance -> ['[i][i]']
swapPseudoRoots -> ['[i]', '[i]']
swapVariances -> ['[i]']
rateTimes_ -> ['[i]']
-----------------------------------------------
}

loop info: Size i=0  i<numberOfRates  ++i
{
-----------------------------------------------
array table
capletVols -> ['[i]', '[i]']
capletVols_ -> ['[i]', '[i]', '[i]']
-----------------------------------------------
}

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLib/test-suite/inflationcapflooredcoupon.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loop info: Size i=0  i<N  i++
{
-----------------------------------------------
array table
iiData -> ['[i]', '[i]']
-----------------------------------------------
}

loop info: Size i=0  i<rpiSchedule.size() i++
{
-----------------------------------------------
array table
rpiSchedule -> ['[i]']
fixData -> ['[i]']
-----------------------------------------------
}

loop info: Size i=0  i<yoyLeg.size()  i++
{
-----------------------------------------------
array table
yoyLeg -> ['[i]']
-----------------------------------------------
}

loop info: Size whichPricer = 0  whichPricer < 3  whichPricer++
{
	loop info: Size i=0  i<LENGTH(lengths)  i++
	{
		loop info: Size j=0  j<LENGTH(strikes)  j++
		{
			loop info: Size k=0  k<LENGTH(vols)  k++
			{
			-----------------------------------------------
			array table
			lengths -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
			vols -> ['[k]', '[k]', '[k]', '[k]', '[k]', '[k]']
			strikes -> ['[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]']
			-----------------------------------------------
			}
 		-----------------------------------------------
		array table
		-----------------------------------------------
		}
 	-----------------------------------------------
	array table
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLib/test-suite/libormarketmodel.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loop info: Size i=0  i < 9  ++i
{
-----------------------------------------------
array table
vols -> ['[i]']
-----------------------------------------------
}

loop info: i=0  i<size  ++i
{
	loop info: Size j=0  j<size  ++j
	{
	-----------------------------------------------
	array table
	recon -> ['[i][j]', '[i][j]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: i=0  i<size  ++i
{
-----------------------------------------------
array table
fixingTimes -> ['[i]']
-----------------------------------------------
}

loop info: Real t=0  t<4.6  t+=0.31
{
	loop info: Size i=0  i<size  ++i
	{
		loop info: Size j=0  j<size  ++j
		{
		-----------------------------------------------
		array table
		recon -> ['[i][j]', '[i][j]']
		-----------------------------------------------
		}
 	-----------------------------------------------
	array table
	-----------------------------------------------
	}
	loop info: Size k=0  k<size  ++k
	{
	-----------------------------------------------
	array table
	fixingTimes -> ['[k]']
	volatility -> ['[k]', '[k]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: i=0  i<calibrationHelper.size()  ++i
{
-----------------------------------------------
array table
calibrationHelper -> ['[i]']
-----------------------------------------------
}

loop info: i=0  i < tmp.size()  ++i
{
-----------------------------------------------
array table
tmp -> ['[i]']
-----------------------------------------------
}

loop info: i=1  i < size  ++i
{
	loop info: Size j=1  j <= size-i  ++j
	{
		loop info: Size n=0  n<nrTrails  ++n
			{
				loop info: Size k=0  k<process->size()  ++k
				{
				-----------------------------------------------
				array table
				path.value -> ['[k]']
				rates -> ['[k]']
				location -> ['[i]']
				-----------------------------------------------
				}
				loop info: Size m=i  m < i+j  ++m
				{
				-----------------------------------------------
				array table
				rates -> ['[m]']
				dis -> ['[m]']
				-----------------------------------------------
				}
 			-----------------------------------------------
			array table
			-----------------------------------------------
			}
 	-----------------------------------------------
	array table
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLib/test-suite/vpp.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loop info: Size n=0  n < nrTrails  ++n
{
	loop info: Size i=1  i <= steps  ++i
	{
	-----------------------------------------------
	array table
	path.value -> ['[1][i]', '[0][i]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: Size i=0  i < nTrails  ++i
{
-----------------------------------------------
array table
path.value -> ['[0]', '[1]', '[2]']
-----------------------------------------------
}

loop info: Size i=0  i < LENGTH(efficiency)  ++i
{
-----------------------------------------------
array table
expected -> ['[i]', '[i]']
efficiency -> ['[i]']
-----------------------------------------------
}

loop info: Size i=0  i < nHours  ++i
{
-----------------------------------------------
array table
fuelPrices -> ['[i]']
powerPrices -> ['[i]']
-----------------------------------------------
}

loop info: Size i=exercise->dates().size()  i > 0u  --i
{
	loop info: Size j=0  j < nCalibrationTrails  ++j
	{
	-----------------------------------------------
	array table
	sparkSpreads -> ['[j]']
	-----------------------------------------------
	}
	loop info: Size k=0  k < nStates  ++k
	{
		loop info: Size j=0  j < nCalibrationTrails  ++j
		{
		-----------------------------------------------
		array table
		prices -> ['[j][k]']
		-----------------------------------------------
		}
		loop info: Size j=0  j < nCalibrationTrails  ++j
		{
			loop info: Size l=0  l < v.size()  ++l
			{
			-----------------------------------------------
			array table
			prices -> ['[j][k]']
			coeff -> ['[k]']
			-----------------------------------------------
			}
 		-----------------------------------------------
		array table
		prices -> ['[j][k]']
		-----------------------------------------------
		}
 	-----------------------------------------------
	array table
	coeff -> ['[k]']
	-----------------------------------------------
	}
	loop info: Size j=0  j < nCalibrationTrails  ++j
	{
	-----------------------------------------------
	array table
	prices -> ['[j]']
	stepConditions -> ['[j]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: Size i=0  i < nTrails  ++i
{
	loop info: Size j=exercise->dates().size()  j > 0u  --j
	{
		loop info: Size k=0  k < nStates  ++k
		{
			loop info: Size l=0  l < v.size()  ++l
			{
			-----------------------------------------------
			array table
			coeff -> ['[k]']
			contState -> ['[k]']
			-----------------------------------------------
			}
 		-----------------------------------------------
		array table
		contState -> ['[k]']
		-----------------------------------------------
		}
		loop info: Size i=0  i < 2*tMinUp  ++i
		{
		-----------------------------------------------
		array table
		state -> ['[i]', '[i]']
		contState -> ['[i]', '[i]']
		-----------------------------------------------
		}
		loop info: Size i=0  i < tMinUp-1  ++i
		{
		-----------------------------------------------
		array table
		retVal -> ['[i]']
		-----------------------------------------------
		}
		loop info: Size i=0  i < tMinDown-1  ++i
		{
		-----------------------------------------------
		array table
		-----------------------------------------------
		}
 	-----------------------------------------------
	array table
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: Size i=0  i < x.size()  ++i
{
-----------------------------------------------
array table
applyExpected -> ['[i]', '[i]', '[i]', '[i]']
applyCalculated -> ['[i]', '[i]']
applyExpectedMixed -> ['[i]', '[i]']
applyCalculatedMixed -> ['[i]', '[i]']
-----------------------------------------------
}

loop info: Size i=0  i < 3  ++i
{
	loop info: Size j=0  j < x.size()  ++j
	{
	-----------------------------------------------
	array table
	applyExpectedDir -> ['[j]', '[j]', '[i]']
	applyCalculatedDir -> ['[j]', '[i]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
matrixDecomp -> ['[i]']
-----------------------------------------------
}

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLib/test-suite/linearleastsquaresregression.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

	loop info: i=0  i<v.size()  ++i
	{
	-----------------------------------------------
	array table
	ma -> ['[i]', '[i]']
	err -> ['[i]', '[i]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: Size i=0  i < v.size()  ++i
{
-----------------------------------------------
array table
coeff -> ['[i]']
-----------------------------------------------
}

	loop info: Size j=0  j < v.size()  ++j
	{
	-----------------------------------------------
	array table
	coeff -> ['[j]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: Size i=0  i < v.size()  ++i
{
-----------------------------------------------
array table
coeff -> ['[i]', '[i]']
-----------------------------------------------
}

loop info: Size i=0  i < m1.dim()  ++i
{
-----------------------------------------------
array table
coeff -> ['[i]', '[i]']
-----------------------------------------------
}

loop info: Size i=0  i < 2  ++i
{
-----------------------------------------------
array table
errorsExpected -> ['[i]', '[i]']
coeffExpected -> ['[i]', '[i]']
-----------------------------------------------
}

loop info: Size i=0  i < 2  ++i
{
-----------------------------------------------
array table
errorsExpected -> ['[i]', '[i]']
coeffExpected -> ['[i]', '[i]']
-----------------------------------------------
}

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLib/test-suite/covariance.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loop info: Size i=0  i<n  i++
{
	loop info: Size j=0  j<n  j++
	{
	-----------------------------------------------
	array table
	goodCorr -> ['[i][j]']
	calcCorr -> ['[i][j]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: Size i=0  i<n  i++
{
	loop info: Size j=0  j<n  j++
	{
	-----------------------------------------------
	array table
	goodCorr -> ['[i][j]']
	calcCorr -> ['[i][j]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: i = 0  i<LENGTH(data)  i++
{
	loop info: j=0  j<n  j++
	{
	-----------------------------------------------
	array table
	data -> ['[i][j]']
	temp -> ['[j]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
weights -> ['[i]']
-----------------------------------------------
}

loop info: i=0  i<n  i++
{
	loop info: j=0  j<i  j++
	{
	-----------------------------------------------
	array table
	std -> ['[i]', '[j]']
	expCov -> ['[i][j]', '[j][i]']
	expCor -> ['[i][j]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
std -> ['[i]', '[i]']
expCov -> ['[i][i]']
-----------------------------------------------
}

loop info: i=0  i<n  i++
{
	loop info: j=0  j<n  j++
	{
	-----------------------------------------------
	array table
	expCov -> ['[i][j]']
	calcCor -> ['[i][j]']
	expCor -> ['[i][j]']
	calcCov -> ['[i][j]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: i=0  i<n  i++
{
	loop info: j=0  j<n  j++
	{
	-----------------------------------------------
	array table
	expCov -> ['[i][j]']
	calcCov -> ['[i][j]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: i=0  i<n  i++
{
	loop info: j=0  j<n  j++
	{
	-----------------------------------------------
	array table
	calcCor -> ['[i][j]']
	expCor -> ['[i][j]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
std -> ['[i]']
calcStd -> ['[i]']
-----------------------------------------------
}

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLib/test-suite/mclongstaffschwartzengine.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loop info: Size i=0  i<path.assetNumber()  ++i
{
-----------------------------------------------
array table
tmp -> ['[i]']
path -> ['[i][t]']
-----------------------------------------------
}

loop info: Integer i=0  i<2  ++i
{
	loop info: Integer j=0  j<3  ++j
	{
	-----------------------------------------------
	array table
	expectedExProb -> ['[i][j]', '[i][j]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: Size i=0  i<numberAssets  ++i
{
-----------------------------------------------
array table
corr -> ['[i][i]']
-----------------------------------------------
}

loop info: Size i = 0  i < 3  ++i
{
-----------------------------------------------
array table
expected -> ['[i]', '[i]']
-----------------------------------------------
}

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLib/test-suite/bermudanswaption.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loop info: Size i=0  i<leg.size()  i++
{
-----------------------------------------------
array table
leg -> ['[i]']
-----------------------------------------------
}

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLib/test-suite/termstructures.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loop info: Size i=0  i<deposits  i++
{
-----------------------------------------------
array table
instruments -> ['[i]']
depositData -> ['[i]', '[i]', '[i]']
-----------------------------------------------
}

loop info: Size i=0  i<swaps  ++i
{
-----------------------------------------------
array table
swapData -> ['[i]', '[i]', '[i]']
-----------------------------------------------
}

loop info: i=0  i<LENGTH(days)  i++
{
-----------------------------------------------
array table
expected -> ['[i]', '[i]']
calculated -> ['[i]', '[i]']
days -> ['[i]']
-----------------------------------------------
}

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLib/test-suite/capfloor.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loop info: Size i=0  i<LENGTH(lengths)  i++
{
	loop info: Size j=0  j<LENGTH(vols)  j++
	{
		loop info: Size k=0  k<LENGTH(strikes)  k++
		{
			loop info: Size h=0  h<LENGTH(types)  h++
			{
			-----------------------------------------------
			array table
			lengths -> ['[i]', '[j]']
			vols -> ['[j]', '[j]', '[j]']
			strikes -> ['[k]', '[k]', '[k]', '[k]']
			types -> ['[h]', '[h]', '[h]', '[h]']
			-----------------------------------------------
			}
 		-----------------------------------------------
		array table
		-----------------------------------------------
		}
 	-----------------------------------------------
	array table
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: Size i=0  i<LENGTH(lengths)  i++
{
	loop info: Size j=0  j<LENGTH(vols)  j++
	{
		loop info: Size k=0  k<LENGTH(strikes)  k++
		{
		-----------------------------------------------
		array table
		lengths -> ['[i]']
		vols -> ['[j]', '[j]']
		strikes -> ['[k]', '[k]']
		-----------------------------------------------
		}
 	-----------------------------------------------
	array table
	lengths -> ['[i]', '[i]']
	cap_values -> ['[n]']
	strikes -> ['[n]', '[n]']
	vols -> ['[j]', '[j]']
	floor_values -> ['[n]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: Size i=0  i<LENGTH(lengths)  i++
{
	loop info: Size j=0  j<LENGTH(cap_rates)  j++
	{
		loop info: Size k=0  k<LENGTH(floor_rates)  k++
		{
			loop info: Size l=0  l<LENGTH(vols)  l++
			{
				loop info: Integer m=0  m<lengths[i]*2  m++
					{
					-----------------------------------------------
					array table
					caplets -> ['[m]', '[m]']
					vols -> ['[l]']
					-----------------------------------------------
					}
				loop info: Integer m=0  m<lengths[i]*2  m++
					{
					-----------------------------------------------
					array table
					floorlets -> ['[m]', '[m]']
					vols -> ['[l]']
					-----------------------------------------------
					}
				loop info: Integer m=0  m<lengths[i]*2  m++
					{
					-----------------------------------------------
					array table
					vols -> ['[l]']
					collarlets -> ['[m]', '[m]']
					-----------------------------------------------
					}
 			-----------------------------------------------
			array table
			lengths -> ['[i]', '[i]', '[i]', '[i]', '[i]']
			floor_rates -> ['[k]', '[k]', '[k]', '[j]', '[j]']
			cap_rates -> ['[j]', '[j]', '[j]', '[j]', '[j]']
			floorlets -> ['[0]']
			vols -> ['[l]', '[l]', '[l]', '[l]', '[l]', '[l]', '[l]']
			caplets -> ['[0]']
			collarlets -> ['[0]', '[0]']
			-----------------------------------------------
			}
 		-----------------------------------------------
		array table
		-----------------------------------------------
		}
 	-----------------------------------------------
	array table
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: Size i=0  i<LENGTH(lengths)  i++
{
	loop info: Size j=0  j<LENGTH(strikes)  j++
	{
		loop info: Size k=0  k<LENGTH(vols)  k++
		{
		-----------------------------------------------
		array table
		lengths -> ['[i]', '[i]', '[i]']
		vars.nominals -> ['[0]']
		vols -> ['[k]', '[k]', '[k]']
		strikes -> ['[j]', '[j]', '[j]', '[j]']
		-----------------------------------------------
		}
 	-----------------------------------------------
	array table
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: Size i=0  i<LENGTH(lengths)  i++
{
	loop info: Size j=0  j<LENGTH(strikes)  j++
	{
		loop info: Size k=0  k<LENGTH(vols)  k++
		{
		-----------------------------------------------
		array table
		lengths -> ['[i]', '[i]']
		vars.nominals -> ['[0]']
		vols -> ['[k]', '[k]', '[k]', '[k]']
		strikes -> ['[j]', '[j]', '[j]']
		-----------------------------------------------
		}
 	-----------------------------------------------
	array table
	-----------------------------------------------
	}
 -----------------------------------------------
array table
lengths -> ['[i]', '[i]']
-----------------------------------------------
}

loop info: Size k=0  k<LENGTH(lengths)  k++
{
	loop info: Size i=0  i<LENGTH(types)  i++
	{
		loop info: Size j=0  j<LENGTH(strikes)  j++
		{
			loop info: Size n=0  n<LENGTH(rRates)  n++
			{
				loop info: Size m=0  m<LENGTH(vols)  m++
				{
				-----------------------------------------------
				array table
				lengths -> ['[k]', '[k]']
				rRates -> ['[n]']
				strikes -> ['[j]', '[j]']
				types -> ['[i]', '[i]']
				vols -> ['[m]']
				-----------------------------------------------
				}
 			-----------------------------------------------
			array table
			-----------------------------------------------
			}
 		-----------------------------------------------
		array table
		strikes -> ['[j]']
		types -> ['[i]']
		-----------------------------------------------
		}
 	-----------------------------------------------
	array table
	-----------------------------------------------
	}
 -----------------------------------------------
array table
lengths -> ['[k]']
-----------------------------------------------
}

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLib/test-suite/rangeaccrual.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loop info: i=0  i<nRowsAtmVols  i++
{
	loop info: Size j=0  j<nColsAtmVols  j++
	{
	-----------------------------------------------
	array table
	atmVolMatrix -> ['[i][j]']
	atmVolsHandle -> ['[i][j]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
atmVolsHandle -> ['[i]']
-----------------------------------------------
}

loop info: i=0  i<optionTenors.size()*swapTenors.size()  i++
{
-----------------------------------------------
array table
parametersGuess -> ['[i]', '[i][0]', '[i][1]', '[i][2]', '[i][3]']
-----------------------------------------------
}

loop info: i=0  i<optionTenors.size()*swapTenors.size()  i++
{
	loop info: Size j=0  j<strikeSpreads.size()  j++
	{
	-----------------------------------------------
	array table
	nullVolSpreads -> ['[i][j]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
nullVolSpreads -> ['[i]']
-----------------------------------------------
}

loop info: i=0  i<optionTenors.size()*swapTenors.size()  i++
{
	loop info: Size j=0  j<strikeSpreads.size()  j++
	{
	-----------------------------------------------
	array table
	volSpreadsMatrix -> ['[i][j]']
	volSpreads -> ['[i][j]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
volSpreads -> ['[i]']
-----------------------------------------------
}

loop info: Size z = 0  z < vars.smilesOnPayment.size()  z++
{
	loop info: Size i = 0  i < vars.byCallSpread.size()  i++
	{
	-----------------------------------------------
	array table
	vars.smilesOnExpiry -> ['[z]']
	vars.smilesOnPayment -> ['[z]']
	vars.byCallSpread -> ['[i]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: Size z = 0  z < vars.smilesOnPayment.size()  z++
{
	loop info: Size i = 0  i < vars.byCallSpread.size()  i++
	{
		loop info: Size k = 1  k < 100  k++
		{
		-----------------------------------------------
		array table
		-----------------------------------------------
		}
 	-----------------------------------------------
	array table
	vars.smilesOnExpiry -> ['[z]']
	vars.smilesOnPayment -> ['[z]']
	vars.byCallSpread -> ['[i]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: Size z = 0  z < vars.smilesOnPayment.size()  z++
{
	loop info: Size i = 0  i < vars.byCallSpread.size()  i++
	{
		loop info: Size k = 1  k < 95  k++
		{
		-----------------------------------------------
		array table
		-----------------------------------------------
		}
 	-----------------------------------------------
	array table
	vars.smilesOnExpiry -> ['[z]']
	vars.smilesOnPayment -> ['[z]']
	vars.byCallSpread -> ['[i]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLib/test-suite/marketmodel_cms.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loop info: Size i=0  i<todaysCMSwapRates.size()  i++
{
-----------------------------------------------
array table
volatilities -> ['[i]']
mktVols -> ['[i]', '[i]']
blackVols -> ['[i]']
todaysCMSwapRates -> ['[i]', '[i]']
-----------------------------------------------
}

loop info: Size i=0  i<N  ++i
{
-----------------------------------------------
array table
todaysCMSwapRates -> ['[i]']
errors -> ['[i]']
expectedNPVs -> ['[i]', '[i]']
results -> ['[i]']
todaysDiscounts -> ['[i]']
discrepancies -> ['[i]', '[i]']
-----------------------------------------------
}

loop info: Size i=0  i<N  ++i
{
-----------------------------------------------
array table
errors -> ['[i]']
results -> ['[i]']
expectedNPVs -> ['[i]']
-----------------------------------------------
}

loop info: Size i=0  i<N  ++i
{
-----------------------------------------------
array table
volatilities -> ['[i]']
todaysCMSwapRates -> ['[i]']
displacedPayoff -> ['[i]']
todaysDiscounts -> ['[i]']
expectedSwaptions -> ['[i]', '[i]']
discrepancies -> ['[i]', '[i]']
rateTimes -> ['[i]']
-----------------------------------------------
}

loop info: Size i=0  i<undisplacedPayoff.size()  ++i
{
-----------------------------------------------
array table
undisplacedPayoff -> ['[i]']
displacedPayoff -> ['[i]']
-----------------------------------------------
}

loop info: Size j=0  j<LENGTH(marketModels)  j++
{
	loop info: Size m=0  m<LENGTH(testedFactors)  ++m
	{
		loop info: Size k=0  k<LENGTH(measures)  k++
		{
			loop info: Size i=0  i<LENGTH(evolvers)-stop  i++
			{
				loop info: Size n=0  n<1  n++
				{
				-----------------------------------------------
				array table
				marketModels -> ['[j]']
				measures -> ['[k]']
				evolvers -> ['[i]', '[i]']
				-----------------------------------------------
				}
 			-----------------------------------------------
			array table
			-----------------------------------------------
			}
 		-----------------------------------------------
		array table
		marketModels -> ['[j]']
		measures -> ['[k]']
		-----------------------------------------------
		}
 	-----------------------------------------------
	array table
	testedFactors -> ['[m]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLib/test-suite/inflationvolatility.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loop info: Size i = 0  i < nTimesEUR  i++
{
-----------------------------------------------
array table
timesEUR -> ['[i]', '[i]']
ratesEUR -> ['[i]']
-----------------------------------------------
}

loop info: Size i = 0  i < nTimesGBP  i++
{
-----------------------------------------------
array table
ratesGBP -> ['[i]']
timesGBP -> ['[i]', '[i]']
-----------------------------------------------
}

loop info: Size i = 0  i < LENGTH(yoyEUrates)  i++
{
-----------------------------------------------
array table
yoyEUrates -> ['[i]']
-----------------------------------------------
}

loop info: Size i = 0  i < ncStrikesEU  i++
{
	loop info: Size j = 0  j < ncfMaturitiesEU  j++
	{
	-----------------------------------------------
	array table
	capPricesEU -> ['[i][j]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: Size i = 0  i < nfStrikesEU  i++
{
	loop info: Size j = 0  j < ncfMaturitiesEU  j++
	{
	-----------------------------------------------
	array table
	floorPricesEU -> ['[i][j]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: Size i = 0  i < n  i++
{
-----------------------------------------------
array table
someSlice.second -> ['[i]', '[i]']
volATyear1 -> ['[i]', '[i]']
-----------------------------------------------
}

loop info: Size i = 0  i < n  i++
{
-----------------------------------------------
array table
volATyear3 -> ['[i]', '[i]']
someOtherSlice.second -> ['[i]', '[i]']
-----------------------------------------------
}

loop info: Size i = 0  i < yyATMt.first.size()  i++
{
-----------------------------------------------
array table
crv -> ['[i]', '[i]']
yyATMt.second -> ['[i]', '[i]']
-----------------------------------------------
}

loop info: Size i = 0  i < yyATMd.first.size()  i++
{
-----------------------------------------------
array table
yyATMd.first -> ['[i]', '[i]']
swaps -> ['[i]', '[i]']
-----------------------------------------------
}

loop info: Size i = 0  i < yyATMd.first.size()  i++
{
-----------------------------------------------
array table
yyATMd.first -> ['[i]', '[i]', '[i]']
ayoy -> ['[i]', '[i]']
-----------------------------------------------
}

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLib/test-suite/varianceswaps.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loop info: Size i=0  i<LENGTH(values)  i++
{
	loop info: j=0  j<options  j++
	{
	-----------------------------------------------
	array table
	replicatingOptionData -> ['[j]', '[j]', '[j]', '[j]', '[j]', '[j]']
	-----------------------------------------------
	}
	loop info: j=0  j<putVols.size()  j++
	{
	-----------------------------------------------
	array table
	putVols -> ['[j]']
	putStrikes -> ['[j]']
	vols -> ['[j][0]']
	-----------------------------------------------
	}
	loop info: Size k=1  k<callVols.size()  k++
	{
	-----------------------------------------------
	array table
	callVols -> ['[k]']
	callStrikes -> ['[k]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
dates -> ['[0]']
values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
-----------------------------------------------
}

loop info: Size i=0  i<LENGTH(values)  i++
{
-----------------------------------------------
array table
dates -> ['[0]', '[1]']
values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
vols -> ['[0]', '[1]']
-----------------------------------------------
}

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLib/test-suite/blackdeltacalculator.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loop info: Size i=0  i<LENGTH(values)  i++
{
-----------------------------------------------
array table
values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
-----------------------------------------------
}

loop info: Size i=0  i<LENGTH(values) ++i
{
-----------------------------------------------
array table
values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
-----------------------------------------------
}

loop info: Size i=0  i<LENGTH(values) ++i
{
-----------------------------------------------
array table
values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
-----------------------------------------------
}

loop info: Size i=0  i<LENGTH(values)  i++
{
-----------------------------------------------
array table
values -> ['[i]', '[i]', '[i]', '[i]', '[i]']
-----------------------------------------------
}

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLib/test-suite/distributions.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loop info: Size i=0  i<LENGTH(values)  i++
{
-----------------------------------------------
array table
values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
-----------------------------------------------
}

loop info: Size i=0 i<LENGTH(rho) i++
{
	loop info: Integer sgn=-1  sgn < 2  sgn+=2
	{
	-----------------------------------------------
	array table
	rho -> ['[i]', '[i]', '[i]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: Size i=0  i<LENGTH(data)  i++
{
-----------------------------------------------
array table
data -> ['[i]', '[i]', '[i]']
-----------------------------------------------
}

loop info: Size i=0  i < LENGTH(ns)  ++i
{
	loop info: Size j=0  j < LENGTH(xs)  ++j
	{
	-----------------------------------------------
	array table
	xs -> ['[j]', '[j]', '[j]', '[j]', '[j]', '[j]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
ns -> ['[i]', '[i]']
-----------------------------------------------
}

loop info: Size i=0  i < LENGTH(cases)  ++i
{
-----------------------------------------------
array table
cases -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
-----------------------------------------------
}

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLib/test-suite/tqreigendecomposition.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loop info: Size i=0  i < diag.size()  ++i
{
-----------------------------------------------
array table
ev -> ['[i]']
-----------------------------------------------
}

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /home/rakesh/Downloads/quantlib-master/QuantLib/test-suite/marketmodel.cpp ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loop info: Size i=0  i<todaysForwards.size()  ++i
{
-----------------------------------------------
array table
todaysForwards -> ['[i]', '[i]']
-----------------------------------------------
}

loop info: Size i=1  i<=N  ++i
{
-----------------------------------------------
array table
todaysDiscounts -> ['[N]', '[N]']
-----------------------------------------------
}

loop info: Size i=0  i<std::min(LENGTH(mktVols),todaysForwards.size())  i++
{
-----------------------------------------------
array table
blackVols -> ['[i]']
volatilities -> ['[i]']
mktVols -> ['[i]', '[i]', '[i]']
todaysForwards -> ['[i]', '[i]', '[i]']
normalVols -> ['[i]']
-----------------------------------------------
}

loop info: Size j=0  j<subProductExpectedValue->values.size()  ++j
{
-----------------------------------------------
array table
values -> ['[j]']
-----------------------------------------------
}

loop info: Size j=0  j<subProductExpectedValue->values.size()  ++j
{
-----------------------------------------------
array table
values -> ['[j]']
-----------------------------------------------
}

loop info: Size i=0  i<N  ++i
{
-----------------------------------------------
array table
volatilities -> ['[i]']
errors -> ['[i]']
todaysForwards -> ['[i]', '[i]']
displacedPayoffs -> ['[i]']
capletStdDev -> ['[i]', '[i]', '[i]', '[i]', '[i]']
results -> ['[i]']
expectedForwards -> ['[i]', '[i]']
expectedCaplets -> ['[i]', '[i]']
rateTimes -> ['[i]']
accruals -> ['[i]', '[i]']
forwardStdDevs -> ['[i]', '[i]', '[i]', '[i]', '[i]']
forwardStrikes -> ['[i]']
-----------------------------------------------
}

loop info: i=0  i<N  ++i
{
-----------------------------------------------
array table
errors -> ['[i]']
forwardStdDevs -> ['[i]']
results -> ['[i]']
expectedForwards -> ['[i]']
-----------------------------------------------
}

loop info: i=0  i<N  ++i
{
-----------------------------------------------
array table
expectedCaplets -> ['[i]', '[i]']
-----------------------------------------------
}

loop info: Size i=0  i<N  ++i
{
-----------------------------------------------
array table
errors -> ['[i]']
todaysForwards -> ['[i]', '[i]']
displacedPayoffs -> ['[i]']
capletStdDev -> ['[i]', '[i]', '[i]', '[i]', '[i]']
results -> ['[i]']
expectedForwards -> ['[i]', '[i]']
normalVols -> ['[i]']
expectedCaplets -> ['[i]', '[i]']
rateTimes -> ['[i]']
accruals -> ['[i]', '[i]']
forwardStdDevs -> ['[i]', '[i]', '[i]', '[i]', '[i]']
forwardStrikes -> ['[i]']
-----------------------------------------------
}

loop info: i=0  i<N  ++i
{
-----------------------------------------------
array table
errors -> ['[i]']
forwardStdDevs -> ['[i]']
results -> ['[i]']
expectedForwards -> ['[i]']
-----------------------------------------------
}

loop info: i=0  i<N  ++i
{
-----------------------------------------------
array table
expectedCaplets -> ['[i]', '[i]']
-----------------------------------------------
}

loop info: Size i=0  i<todaysForwards.size()  ++i
{
-----------------------------------------------
array table
displacedPayoffs -> ['[i]']
forwardStrikes -> ['[i]']
optionletPayoffs -> ['[i]']
todaysForwards -> ['[i]', '[i]', '[i]']
-----------------------------------------------
}

loop info: Size j=0  j<LENGTH(marketModels)  j++
{
	loop info: Size m=0  m<LENGTH(testedFactors)  ++m
	{
		loop info: Size k=0  k<LENGTH(measures)  k++
		{
			loop info: Size i=0  i<LENGTH(evolvers)-stop  i++
			{
				loop info: Size n=0  n<1  n++
				{
				-----------------------------------------------
				array table
				marketModels -> ['[j]']
				measures -> ['[k]']
				evolvers -> ['[i]', '[i]']
				-----------------------------------------------
				}
 			-----------------------------------------------
			array table
			-----------------------------------------------
			}
 		-----------------------------------------------
		array table
		marketModels -> ['[j]']
		measures -> ['[k]']
		-----------------------------------------------
		}
 	-----------------------------------------------
	array table
	testedFactors -> ['[m]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: Size i=0  i<todaysForwards.size()  ++i
{
-----------------------------------------------
array table
displacedPayoffs -> ['[i]']
forwardStrikes -> ['[i]']
optionletPayoffs -> ['[i]']
todaysForwards -> ['[i]', '[i]', '[i]']
-----------------------------------------------
}

loop info: Size j=0  j<LENGTH(marketModels)  j++
{
	loop info: Size m=0  m<LENGTH(testedFactors)  ++m
	{
		loop info: Size k=0  k<LENGTH(measures)  k++
		{
			loop info: Size i=0  i<LENGTH(evolvers)-stop  i++
			{
				loop info: Size n=0  n<1  n++
				{
				-----------------------------------------------
				array table
				marketModels -> ['[j]']
				measures -> ['[k]']
				evolvers -> ['[i]', '[i]']
				-----------------------------------------------
				}
 			-----------------------------------------------
			array table
			-----------------------------------------------
			}
 		-----------------------------------------------
		array table
		marketModels -> ['[j]']
		measures -> ['[k]']
		-----------------------------------------------
		}
 	-----------------------------------------------
	array table
	testedFactors -> ['[m]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: Size j=0  j<LENGTH(marketModels)  j++
{
	loop info: Size m=0  m<LENGTH(testedFactors)  ++m
	{
		loop info: Size k=0  k<LENGTH(measures)  k++
		{
			loop info: Size i=0  i<LENGTH(evolvers)  i++
			{
				loop info: Size i=0  i <  accruals.size()  ++i
				{
				-----------------------------------------------
				array table
				-----------------------------------------------
				}
				loop info: Size i=0  i < accruals.size()  ++i
				{
				-----------------------------------------------
				array table
				fixedAccruals -> ['[i]']
				todaysForwards -> ['[i]', '[i]']
				modelVolatilities -> ['[i]']
				floatingAccruals -> ['[i]']
				floatingSpreads -> ['[i]']
				fixedStrikes -> ['[i]']
				-----------------------------------------------
				}
 			-----------------------------------------------
			array table
			marketModels -> ['[j]']
			measures -> ['[k]']
			evolvers -> ['[i]', '[i]']
			-----------------------------------------------
			}
 		-----------------------------------------------
		array table
		marketModels -> ['[j]']
		measures -> ['[k]']
		-----------------------------------------------
		}
 	-----------------------------------------------
	array table
	testedFactors -> ['[m]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: Size j=0  j<LENGTH(marketModels)  j++
{
	loop info: Size m=0  m<LENGTH(testedFactors)  ++m
	{
		loop info: Size k=0  k<LENGTH(measures)  k++
		{
			loop info: Size i=0  i<LENGTH(evolvers)-stop  i++
			{
				loop info: Size n=0  n<1  n++
				{
				-----------------------------------------------
				array table
				marketModels -> ['[j]']
				measures -> ['[k]']
				evolvers -> ['[i]', '[i]']
				-----------------------------------------------
				}
 			-----------------------------------------------
			array table
			-----------------------------------------------
			}
 		-----------------------------------------------
		array table
		marketModels -> ['[j]']
		measures -> ['[k]']
		-----------------------------------------------
		}
 	-----------------------------------------------
	array table
	testedFactors -> ['[m]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: Size i=0  i<todaysForwards.size()  ++i
{
-----------------------------------------------
array table
forwardStrikes -> ['[i]']
accruals -> ['[i]']
todaysForwards -> ['[i]']
-----------------------------------------------
}

loop info: Size i=0  i<todaysForwards.size()  ++i
{
-----------------------------------------------
array table
displacedPayoffs -> ['[i]']
todaysForwards -> ['[i]', '[i]', '[i]', '[i]']
optionletPayoffs -> ['[i]']
-----------------------------------------------
}

loop info: Size i=0  i<todaysForwards.size()  ++i
{
-----------------------------------------------
array table
displacedPayoffs -> ['[i]']
accruals -> ['[i]']
rateTimes -> ['[i]']
todaysForwards -> ['[i]']
volatilities -> ['[i]']
-----------------------------------------------
}

loop info: Size i=0  i<todaysForwards.size()  ++i
{
-----------------------------------------------
array table
accruals -> ['[i]']
todaysForwards -> ['[i]']
-----------------------------------------------
}

loop info: Size i=0  i<todaysForwards.size()  ++i
{
-----------------------------------------------
array table
atmRates -> ['[i]']
-----------------------------------------------
}

loop info: Size i=0  i<todaysForwards.size()  ++i
{
-----------------------------------------------
array table
todaysCoterminalSwapRates -> ['[i]']
todaysDiscounts -> ['[0]']
todaysForwards -> ['[i]']
cotSwapsCovariance -> ['[i][i]']
-----------------------------------------------
}

loop info: Size i=0  i<numberBigRates  ++i
{
-----------------------------------------------
array table
displacedSwaptionPayoffs -> ['[i]']
swaptionPayoffs -> ['[i]']
displacedOptionletPayoffs -> ['[i]']
optionletPayoffs -> ['[i]']
-----------------------------------------------
}

loop info: Size j=0  j < adaptedSwapModel->numberOfRates()  ++j
{
-----------------------------------------------
array table
displacedOptionletPayoffs -> ['[j]']
adaptedSwapSds -> ['[j]', '[j]']
approxSwaptionPrices -> ['[j]']
adaptedForwardSds -> ['[j]', '[j]']
finalForwardCovariances -> ['[j][j]']
todaysDiscounts -> ['[0]', '[0]']
displacedSwaptionPayoffs -> ['[j]']
approxCapletPrices -> ['[j]']
finalSwapCovariances -> ['[j][j]']
-----------------------------------------------
}

loop info: Size i=0  i < numberBigRates  ++i
{
-----------------------------------------------
array table
errors -> ['[i]']
capletErrorsInSds -> ['[i]']
swaptionErrorsInSds -> ['[i]']
approxSwaptionPrices -> ['[i]']
results -> ['[i]']
approxCapletPrices -> ['[i]']
-----------------------------------------------
}

loop info: Size i=0  i < numberBigRates  ++i
{
-----------------------------------------------
array table
capletErrorsInSds -> ['[i]', '[i]']
results -> ['[i]']
approxCapletPrices -> ['[i]']
-----------------------------------------------
}

loop info: Size i=0  i < numberBigRates  ++i
{
-----------------------------------------------
array table
approxSwaptionPrices -> ['[i]']
swaptionErrorsInSds -> ['[i]', '[i]']
-----------------------------------------------
}

loop info: Size j=0  j<LENGTH(marketModels)  j++
{
	loop info: Size m=0  m<LENGTH(testedFactors)  ++m
	{
		loop info: Size k=0  k<LENGTH(measures)  k++
		{
			loop info: Size i=0  i<LENGTH(evolvers)-stop  i++
			{
				loop info: Size n=0  n<1  n++
				{
					loop info: Size s=0  s < isExerciseTime.size()  ++s
					{
					-----------------------------------------------
					array table
					evolvers -> ['[i]']
					isExerciseTime -> ['[s]']
					-----------------------------------------------
					}
 				-----------------------------------------------
				array table
				marketModels -> ['[j]']
				measures -> ['[k]']
				evolvers -> ['[i]', '[i]', '[i]']
				-----------------------------------------------
				}
 			-----------------------------------------------
			array table
			-----------------------------------------------
			}
 		-----------------------------------------------
		array table
		marketModels -> ['[j]']
		measures -> ['[k]']
		-----------------------------------------------
		}
 	-----------------------------------------------
	array table
	testedFactors -> ['[m]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: Size j=0  j<LENGTH(marketModels)  j++
{
	loop info: Size m=0  m<LENGTH(testedFactors)  ++m
	{
		loop info: Size k=0  k<LENGTH(measures)  k++
		{
			loop info: Size i=0  i<LENGTH(evolvers)-stop  i++
			{
				loop info: Size n=0  n<1  n++
				{
					loop info: Size s=0  s < isExerciseTime.size()  ++s
					{
					-----------------------------------------------
					array table
					evolvers -> ['[i]']
					isExerciseTime -> ['[s]']
					-----------------------------------------------
					}
 				-----------------------------------------------
				array table
				marketModels -> ['[j]']
				measures -> ['[k]']
				evolvers -> ['[i]', '[i]', '[i]']
				-----------------------------------------------
				}
 			-----------------------------------------------
			array table
			-----------------------------------------------
			}
 		-----------------------------------------------
		array table
		marketModels -> ['[j]']
		measures -> ['[k]']
		-----------------------------------------------
		}
 	-----------------------------------------------
	array table
	testedFactors -> ['[m]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: Size j=0  j<LENGTH(marketModels)  j++
{
	loop info: Size m=0  m<LENGTH(testedFactors)  ++m
	{
		loop info: Size k=0  k<LENGTH(measures)  k++
		{
			loop info: Size i=0  i<LENGTH(evolvers)-stop  i++
			{
				loop info: Size n=0  n<1  n++
				{
					loop info: Size s=0  s < isExerciseTime.size()  ++s
					{
					-----------------------------------------------
					array table
					evolvers -> ['[i]']
					isExerciseTime -> ['[s]']
					-----------------------------------------------
					}
 				-----------------------------------------------
				array table
				marketModels -> ['[j]']
				measures -> ['[k]']
				evolvers -> ['[i]', '[i]', '[i]']
				-----------------------------------------------
				}
 			-----------------------------------------------
			array table
			-----------------------------------------------
			}
 		-----------------------------------------------
		array table
		marketModels -> ['[j]']
		measures -> ['[k]']
		-----------------------------------------------
		}
 	-----------------------------------------------
	array table
	testedFactors -> ['[m]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: Size i=0  i<todaysForwards.size()  ++i
{
-----------------------------------------------
array table
displacedPayoffs -> ['[i]']
todaysForwards -> ['[i]', '[i]', '[i]', '[i]']
payoffs -> ['[i]']
-----------------------------------------------
}

loop info: Size j=0  j<LENGTH(marketModels)  j++
{
	loop info: Size m=0  m<LENGTH(testedFactors)  ++m
	{
		loop info: Size k=0  k<LENGTH(measures)  k++
		{
			loop info: Size n=0  n<1  n++
			{
				loop info: Size i=0  i<evolution.evolutionTimes().size()  ++i
				{
				-----------------------------------------------
				array table
				-----------------------------------------------
				}
				loop info: Size i=0  i<todaysForwards.size()  ++i
				{
				-----------------------------------------------
				array table
				volatilities -> ['[i]', '[i]', '[i]']
				todaysForwards -> ['[i]', '[i]', '[i]']
				displacedPayoffs -> ['[i]', '[i]', '[i]']
				priceMinus -> ['[i]']
				fwdPlus -> ['[i]', '[i]', '[i]']
				fwdMinus -> ['[i]', '[i]', '[i]']
				pricePlus -> ['[i]']
				rateTimes -> ['[i]', '[i]', '[i]', '[i]']
				price0 -> ['[i]']
				discMinus -> ['[i]']
				discPlus -> ['[i]']
				-----------------------------------------------
				}
				loop info: Size i=0  i<product.numberOfProducts()  ++i
				{
				-----------------------------------------------
				array table
				vegas -> ['[i]']
				deltas -> ['[i]', '[i]']
				gammas -> ['[i]', '[i]']
				priceMinus -> ['[i]', '[i]']
				deltaErrors -> ['[i]', '[i]']
				gammaErrors -> ['[i]', '[i]']
				vegaErrors -> ['[i]']
				errors -> ['[i]', '[i]']
				values -> ['[i]', '[i]']
				pricePlus -> ['[i]', '[i]']
				price0 -> ['[i]', '[i]', '[i]']
				-----------------------------------------------
				}
 			-----------------------------------------------
			array table
			vegaWeights -> ['[0][0]', '[0][1]', '[0][2]']
			greekStats -> ['[0][0]', '[0][0]', '[0][1]', '[0][1]', '[1][0]', '[1][0]']
			measures -> ['[k]']
			todaysDiscounts -> ['[0]', '[0]']
			deltaGammaWeights -> ['[0][0]', '[0][1]', '[0][2]', '[1][0]', '[1][1]', '[1][2]']
			marketModels -> ['[j]', '[j]', '[j]', '[j]', '[j]', '[j]']
			-----------------------------------------------
			}
 		-----------------------------------------------
		array table
		measures -> ['[k]']
		-----------------------------------------------
		}
 	-----------------------------------------------
	array table
	testedFactors -> ['[m]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: Size i=0  i<todaysForwards.size()  ++i
{
-----------------------------------------------
array table
displacedPayoffs -> ['[i]']
todaysForwards -> ['[i]', '[i]', '[i]', '[i]']
payoffs -> ['[i]']
-----------------------------------------------
}

loop info: Size whichProduct=0  whichProduct<2  ++whichProduct
{
	loop info: Size j=0  j<LENGTH(marketModels)  j++
	{
		loop info: Size m=0  m<LENGTH(testedFactors)  ++m
		{
			loop info: Size k=0  k<LENGTH(measures)  k++
			{
				loop info: Size n=0  n<1  n++
				{
					loop info: Size i=0  i < product->numberOfProducts()  ++i
					{
						loop info: Size j=0  j <  todaysForwards.size()  ++j
						{
						-----------------------------------------------
						array table
						deltasErrors -> ['[i][j]']
						deltas -> ['[i][j]']
						-----------------------------------------------
						}
 					-----------------------------------------------
					array table
					priceErrors -> ['[i]']
					errors -> ['[i]']
					todaysForwards -> ['[i]']
					volatilities -> ['[i]']
					modelPrices -> ['[i]']
					valuesAndDeltas -> ['[i]']
					displacedPayoffs -> ['[i]']
					prices -> ['[i]']
					rateTimes -> ['[i]', '[i]']
					-----------------------------------------------
					}
					loop info: Size i=0  i < todaysForwards.size()  ++i
					{
						loop info: Size j=0  j < todaysForwards.size()  ++j
						{
						-----------------------------------------------
						array table
						todaysForwards -> ['[j]', '[j]', '[j]', '[j]']
						fwdPlus -> ['[j]', '[j]', '[j]']
						fwdMinus -> ['[j]', '[j]', '[j]']
						rateTimes -> ['[j]']
						discMinus -> ['[j]']
						discPlus -> ['[j]']
						-----------------------------------------------
						}
						loop info: Size k=0  k  < product->numberOfProducts()  ++k
						{
						-----------------------------------------------
						array table
						volatilities -> ['[k]', '[k]']
						displacedPayoffs -> ['[k]', '[k]']
						modelDeltas -> ['[k][i]']
						fwdPlus -> ['[k]']
						fwdMinus -> ['[k]']
						rateTimes -> ['[k]', '[k]', '[k]']
						-----------------------------------------------
						}
 					-----------------------------------------------
					array table
					-----------------------------------------------
					}
					loop info: Size i=0  i<product->numberOfProducts()  ++i
					{
						loop info: Size j =0  j < todaysForwards.size()  ++j
						{
						-----------------------------------------------
						array table
						deltasErrors -> ['[i][j]', '[i][j]', '[i][j]']
						modelDeltas -> ['[i][j]', '[i][j]']
						deltas -> ['[i][j]', '[i][j]']
						-----------------------------------------------
						}
 					-----------------------------------------------
					array table
					prices -> ['[i]', '[i]']
					priceErrors -> ['[i]', '[i]']
					modelPrices -> ['[i]', '[i]']
					-----------------------------------------------
					}
 				-----------------------------------------------
				array table
				marketModels -> ['[j]', '[j]']
				measures -> ['[k]']
				todaysDiscounts -> ['[0]', '[0]']
				-----------------------------------------------
				}
 			-----------------------------------------------
			array table
			measures -> ['[k]']
			-----------------------------------------------
			}
 		-----------------------------------------------
		array table
		testedFactors -> ['[m]']
		-----------------------------------------------
		}
 	-----------------------------------------------
	array table
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: Size i=0  i<todaysForwards.size()  ++i
{
-----------------------------------------------
array table
displacedPayoffs -> ['[i]']
todaysForwards -> ['[i]', '[i]', '[i]', '[i]']
payoffs -> ['[i]']
-----------------------------------------------
}

loop info: Size j=0  j<LENGTH(marketModels)  j++
{
	loop info: Size m=0  m<LENGTH(testedFactors)  ++m
	{
		loop info: Size k=0  k < marketModel->numberOfSteps()  ++k
		{
		-----------------------------------------------
		array table
		-----------------------------------------------
		}
		loop info: Size step=0  step < evolution.numberOfSteps()  ++ step
		{
			loop info: Size l=0  l < evolution.numberOfRates()  ++l
			{
			-----------------------------------------------
			array table
			-----------------------------------------------
			}
 		-----------------------------------------------
		array table
		-----------------------------------------------
		}
 	-----------------------------------------------
	array table
	testedFactors -> ['[m]']
	marketModels -> ['[j]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: Size j=0  j<LENGTH(marketModels)  j++
{
	loop info: Size m=0  m<LENGTH(testedFactors)  ++m
	{
		loop info: Size startIndex = 1  startIndex < evolution.numberOfRates()-1  ++startIndex
		{
			loop info: Size k=0  k < marketModel->numberOfSteps()  ++k
			{
			-----------------------------------------------
			array table
			-----------------------------------------------
			}
			loop info: Size step=0  step < evolution.numberOfSteps()  ++ step
			{
				loop info: Size l=0  l < evolution.numberOfRates()  ++l
				{
					loop info: Size k=startIndex  k < endIndex  ++k
					{
					-----------------------------------------------
					array table
					totalCovUp -> ['[k][k]']
					todaysForwards -> ['[k]']
					totalCovDown -> ['[k][k]']
					-----------------------------------------------
					}
 				-----------------------------------------------
				array table
				-----------------------------------------------
				}
 			-----------------------------------------------
			array table
			-----------------------------------------------
			}
			loop info: Size m= startIndex  m < endIndex  ++m
			{
			-----------------------------------------------
			array table
			rateTimes -> ['[m]']
			totalCov -> ['[m][m]']
			todaysForwards -> ['[m]']
			-----------------------------------------------
			}
 		-----------------------------------------------
		array table
		-----------------------------------------------
		}
 	-----------------------------------------------
	array table
	testedFactors -> ['[m]']
	marketModels -> ['[j]']
	-----------------------------------------------
	}
	loop info: Size m=0  m<LENGTH(testedFactors)  ++m
	{
		loop info: Size startIndex = 1  startIndex < evolution.numberOfRates()-1  ++startIndex
		{
			loop info: Size k=0  k < marketModel->numberOfSteps()  ++k
			{
			-----------------------------------------------
			array table
			-----------------------------------------------
			}
			loop info: Size step=0  step < evolution.numberOfSteps()  ++ step
			{
				loop info: Size l=0  l < evolution.numberOfRates()  ++l
				{
				-----------------------------------------------
				array table
				-----------------------------------------------
				}
 			-----------------------------------------------
			array table
			-----------------------------------------------
			}
 		-----------------------------------------------
		array table
		-----------------------------------------------
		}
 	-----------------------------------------------
	array table
	testedFactors -> ['[m]']
	marketModels -> ['[j]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: Size j=0  j<LENGTH(marketModels)  j++
{
	loop info: Size m=0  m<LENGTH(testedFactors)  ++m
	{
		loop info: Size k=0  k < evolution.numberOfRates()  ++k
		{
			loop info: Size f=0  f < factors  ++f
			{
			-----------------------------------------------
			array table
			modelBump -> ['[k][f]', '[k][f]']
			-----------------------------------------------
			}
 		-----------------------------------------------
		array table
		-----------------------------------------------
		}
		loop info: Size l = 0  l < evolution.numberOfSteps()  ++l
		{
			loop info: Size k=0  k < evolution.numberOfRates()  k=k+bumpIncrement
			{
				loop info: Size f=0  f < factorsToTest  ++f
				{
					loop info: Size m=0  m < evolution.numberOfSteps()  ++m
					{
					-----------------------------------------------
					array table
					modelBump -> ['[k][f]', '[k][f]']
					vegaBumps -> ['[l]']
					-----------------------------------------------
					}
 				-----------------------------------------------
				array table
				-----------------------------------------------
				}
 			-----------------------------------------------
			array table
			-----------------------------------------------
			}
 		-----------------------------------------------
		array table
		-----------------------------------------------
		}
		loop info: Size k=0  k<LENGTH(measures)  k++
		{
			loop info: Size l=0  l < evolution.numberOfSteps()  ++l
			{
			-----------------------------------------------
			array table
			numeraires -> ['[l]', '[l]', '[l]', '[l]']
			-----------------------------------------------
			}
			loop info: Size i=0  i < product.numberOfProducts()  ++i
			{
			-----------------------------------------------
			array table
			-----------------------------------------------
			}
			loop info: Size i=0  i < steps  ++i
				{
				-----------------------------------------------
				array table
				-----------------------------------------------
				}
			loop info: Size l=0  l < pathsToDo  ++l
			{
				loop info: Size i=1  i <= evolution.numberOfRates()  ++i
					{
					-----------------------------------------------
					array table
					-----------------------------------------------
					}
				loop info: Size i1 =0  i1 < pseudoBumps.size()  ++i1
					{
						loop info:   j1 < evolution.firstAliveRate()[i1]  ++j1
						{
						-----------------------------------------------
						array table
						-----------------------------------------------
						}
						loop info: Size k1=evolution.firstAliveRate()[i1]  k1 < numberRates  ++k1
							{
							-----------------------------------------------
							array table
							-----------------------------------------------
							}
 					-----------------------------------------------
					array table
					-----------------------------------------------
					}
				loop info: Size j=0  j < B.rows()  ++j
					{
					-----------------------------------------------
					array table
					B4 -> ['[j][k]', '[j][k]']
					B2 -> ['[j][k]', '[j][k]', '[j][k]']
					B3 -> ['[j][k]']
					-----------------------------------------------
					}
 			-----------------------------------------------
			array table
			-----------------------------------------------
			}
 		-----------------------------------------------
		array table
		oneStepDFs -> ['[0]']
		marketModels -> ['[j]']
		measures -> ['[k]']
		-----------------------------------------------
		}
		loop info: Size deflate =0  deflate <2  ++deflate
		{
			loop info: Size k=0  k<LENGTH(measures)  k++
			{
				loop info: Size i=0  i < caplets.numberOfProducts()  ++i
				{
					loop info: Size j=0  j < vegaBumps[0].size()  ++j
					{
					-----------------------------------------------
					array table
					standardErrors -> ['[i][j]']
					vegasMatrix -> ['[i][j]']
					-----------------------------------------------
					}
 				-----------------------------------------------
				array table
				prices -> ['[i]']
				priceErrors -> ['[i]']
				deltasMatrix -> ['[i][j]']
				deltasErrors -> ['[i][j]']
				-----------------------------------------------
				}
				loop info: Size r =0  r < truePrices.size()  ++r
				{
				-----------------------------------------------
				array table
				displacedPayoffs -> ['[r]']
				totalCovariance -> ['[r][r]']
				truePrices -> ['[r]']
				todaysForwards -> ['[r]']
				rateTimes -> ['[r]']
				-----------------------------------------------
				}
				loop info: Size b =0  b < vegaBumps[0].size()  ++b
				{
					loop info: Size step = 0  step < marketModel->numberOfSteps()  ++step
					{
						loop info: Size rate=step  rate<marketModel->numberOfRates()  ++rate
						{
							loop info: Size f=0  f < marketModel->numberOfFactors()  ++f
							{
							-----------------------------------------------
							array table
							-----------------------------------------------
							}
 						-----------------------------------------------
						array table
						-----------------------------------------------
						}
 					-----------------------------------------------
					array table
					-----------------------------------------------
					}
					loop info: Size r =0  r < truePrices.size()  ++r
					{
					-----------------------------------------------
					array table
					todaysForwards -> ['[r]']
					variances -> ['[r]']
					truePrices -> ['[r]']
					displacedPayoffs -> ['[r]']
					vegas -> ['[r]']
					bumpedPrices -> ['[r]', '[r]']
					rateTimes -> ['[r]']
					-----------------------------------------------
					}
					loop info: Size s=0  s  < truePrices.size()  ++s
					{
					-----------------------------------------------
					array table
					vegas -> ['[s]']
					standardErrors -> ['[s][b]']
					vegasMatrix -> ['[s][b]']
					-----------------------------------------------
					}
 				-----------------------------------------------
				array table
				-----------------------------------------------
				}
				loop info: Size i=0  i < productToUse2->numberOfProducts()  ++i
				{
					loop info: Size j=0  j <  todaysForwards.size()  ++j
					{
					-----------------------------------------------
					array table
					deltas2 -> ['[i][j]']
					deltasErrors2 -> ['[i][j]']
					-----------------------------------------------
					}
 				-----------------------------------------------
				array table
				priceErrors2 -> ['[i]']
				errors2 -> ['[i]']
				valuesAndDeltas2 -> ['[i]']
				prices2 -> ['[i]']
				-----------------------------------------------
				}
				loop info: Size i=0  i < productToUse2->numberOfProducts()  ++i
				{
					loop info: Size j=0  j <  todaysForwards.size()  ++j
					{
					-----------------------------------------------
					array table
					deltas2 -> ['[i][j]', '[i][j]']
					deltasErrors2 -> ['[i][j]']
					deltasMatrix -> ['[i][j]', '[i][j]']
					-----------------------------------------------
					}
 				-----------------------------------------------
				array table
				prices -> ['[i]', '[j]']
				priceErrors2 -> ['[i]']
				prices2 -> ['[i]', '[j]']
				-----------------------------------------------
				}
 			-----------------------------------------------
			array table
			marketModels -> ['[j]', '[j]']
			measures -> ['[k]', '[k]']
			vegaBumps -> ['[0]', '[0]', '[0]']
			-----------------------------------------------
			}
 		-----------------------------------------------
		array table
		-----------------------------------------------
		}
		loop info: Size i=0  i +2 < numberRates  i=i+3
			{
			-----------------------------------------------
			array table
			-----------------------------------------------
			}
		loop info: Size r=0  r < caps.size()  ++r
			{
			-----------------------------------------------
			array table
			startsAndEnds -> ['[r]', '[r]']
			caps -> ['[r]', '[r]']
			-----------------------------------------------
			}
		loop info: Size k=0  k<LENGTH(measures)  k++
			{
				loop info: Size i=0  i <values.size()  ++i
					{
					-----------------------------------------------
					array table
					-----------------------------------------------
					}
				loop info: Size i=0  i < capsDeflated.numberOfProducts()  ++i
				{
				-----------------------------------------------
				array table
				standardErrors -> ['[i][j]']
				vegasMatrix -> ['[i][j]']
				-----------------------------------------------
				}
				loop info: Size r =0  r < trueCapletPrices.size()  ++r
				{
				-----------------------------------------------
				array table
				-----------------------------------------------
				}
				loop info: Size s=0  s < capsDeflated.numberOfProducts()  ++s
				{
					loop info: Size t= caps[s].startIndex_  t <  caps[s].endIndex_  ++t
					{
					-----------------------------------------------
					array table
					-----------------------------------------------
					}
 				-----------------------------------------------
				array table
				trueCapPrices -> ['[s]']
				-----------------------------------------------
				}
				loop info: Size b =0  b < vegaBumps[0].size()  ++b
				{
					loop info: Size step = 0  step < marketModel->numberOfSteps()  ++step
					{
						loop info: Size rate=step  rate<marketModel->numberOfRates()  ++rate
						{
							loop info: Size f=0  f < marketModel->numberOfFactors()  ++f
							{
							-----------------------------------------------
							array table
							-----------------------------------------------
							}
 						-----------------------------------------------
						array table
						-----------------------------------------------
						}
 					-----------------------------------------------
					array table
					-----------------------------------------------
					}
					loop info: Size r =0  r < trueCapletPrices.size()  ++r
					{
					-----------------------------------------------
					array table
					todaysForwards -> ['[r]']
					variances -> ['[r]']
					vegasCaplets -> ['[r]']
					trueCapletPrices -> ['[r]']
					bumpedCapletPrices -> ['[r]', '[r]']
					rateTimes -> ['[r]']
					-----------------------------------------------
					}
					loop info: Size s=0  s < capsDeflated.numberOfProducts()  ++s
					{
						loop info: Size t= caps[s].startIndex_  t <  caps[s].endIndex_  ++t
						{
						-----------------------------------------------
						array table
						-----------------------------------------------
						}
 					-----------------------------------------------
					array table
					vegaCaps -> ['[s]']
					-----------------------------------------------
					}
					loop info: Size s=0  s  < capsDeflated.numberOfProducts()  ++s
					{
					-----------------------------------------------
					array table
					vegaCaps -> ['[s]']
					standardErrors -> ['[s][b]']
					vegasMatrix -> ['[s][b]']
					-----------------------------------------------
					}
 				-----------------------------------------------
				array table
				-----------------------------------------------
				}
 			-----------------------------------------------
			array table
			marketModels -> ['[j]', '[j]']
			measures -> ['[k]', '[k]']
			vegaBumps -> ['[0]', '[0]', '[0]']
			-----------------------------------------------
			}
 	-----------------------------------------------
	array table
	testedFactors -> ['[m]']
	todaysForwards -> ['[0]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

loop info: Size i=0  i<todaysForwards.size()  ++i
{
-----------------------------------------------
array table
displacedPayoffs -> ['[i]']
payoffs -> ['[i]']
-----------------------------------------------
}

loop info: Size j=0  j < caps.size()  ++j
{
-----------------------------------------------
array table
startsAndEnds -> ['[j]', '[j]']
caps -> ['[j]', '[j]']
-----------------------------------------------
}

loop info: Size i=0  i < numberRates  ++i
{
-----------------------------------------------
array table
swaptions -> ['[i]', '[i]']
-----------------------------------------------
}

loop info: Size j=0  j<LENGTH(marketModels)  j++
{
	loop info: Size m=0  m<LENGTH(testedFactors)  ++m
	{
		loop info: Size i=0  i < swaptionsDeflated.numberOfProducts()  ++i
			{
				loop info: Size j=0  j <  theBumps[0].size()  ++j
				{
					loop info: Size k=0  k < steps  ++k
					{
					-----------------------------------------------
					array table
					-----------------------------------------------
					}
 				-----------------------------------------------
				array table
				swaptionVegasMatrix -> ['[i][j]']
				-----------------------------------------------
				}
 			-----------------------------------------------
			array table
			swaptions -> ['[i]', '[i]']
			-----------------------------------------------
			}
		loop info: Size i=0  i < swaptions.size()  ++i
			{
				loop info: Size j=0  j <  theBumps[0].size()  ++j
				{
				-----------------------------------------------
				array table
				swaptionVegasMatrix -> ['[i][i]', '[i][j]']
				-----------------------------------------------
				}
 			-----------------------------------------------
			array table
			-----------------------------------------------
			}
		loop info: Size i=0  i < caps.size()  ++i
		{
			loop info: Size j=0  j <  theBumps[0].size()  ++j
			{
				loop info: Size k=0  k < steps  ++k
				{
				-----------------------------------------------
				array table
				-----------------------------------------------
				}
 			-----------------------------------------------
			array table
			capsVegasMatrix -> ['[i][j]']
			-----------------------------------------------
			}
 		-----------------------------------------------
		array table
		caps -> ['[i]', '[i]', '[i]']
		-----------------------------------------------
		}
		loop info: Size i=0  i < caps.size()  ++i
		{
			loop info: Size j=0  j <  theBumps[0].size()  ++j
			{
			-----------------------------------------------
			array table
			capsVegasMatrix -> ['[i][j]', '[i][j]']
			-----------------------------------------------
			}
 		-----------------------------------------------
		array table
		-----------------------------------------------
		}
		loop info: Size m=0  m<LENGTH(testedFactors)  ++m
		{
			loop info: Size j=0  j < swaptionsDeflated.maxNumberOfCashFlowsPerProductPerStep()  ++j
			{
			-----------------------------------------------
			array table
			-----------------------------------------------
			}
 		-----------------------------------------------
		array table
		cashFlowsGenerated1 -> ['[i]']
		-----------------------------------------------
		}
		loop info: Size j=0  j<LENGTH(marketModels)  j++
		{
			loop info: Size m=0  m<LENGTH(testedFactors)  ++m
			{
				loop info: Size p=0  p < pathsToDo  ++p
				{
					loop info: Size prod = 0  prod <  swaptionsDeflated.numberOfProducts()  ++prod
						{
							loop info: Size cf =0  cf < numberCashFlowsThisStep1[prod]  ++cf
							{
							-----------------------------------------------
							array table
							-----------------------------------------------
							}
 						-----------------------------------------------
						array table
						-----------------------------------------------
						}
 				-----------------------------------------------
				array table
				-----------------------------------------------
				}
				loop info: Size m=0  m<LENGTH(testedFactors)  ++m
				{
					loop info: Size m=0  m<LENGTH(testedFactors)  ++m
					{
						loop info: Size i=0  i < swaptionsDeflated.numberOfProducts()  ++i
						{
						-----------------------------------------------
						array table
						standardErrors -> ['[i][j]']
						vegasMatrix -> ['[i][j]']
						-----------------------------------------------
						}
						loop info: Size i=0  i < swaptions.size()  ++i
						{
						-----------------------------------------------
						array table
						-----------------------------------------------
						}
						loop info: Size i=0  i < swaptions.size()  ++i
						{
						-----------------------------------------------
						array table
						analyticVegas -> ['[i]']
						rateTimes -> ['[i]']
						impliedVols_ -> ['[i]']
						-----------------------------------------------
						}
						loop info: Size i=0  i < swaptions.size()  ++i
						{
						-----------------------------------------------
						array table
						analyticVegas -> ['[i]']
						standardErrors -> ['[i][i]']
						vegasMatrix -> ['[i][i]']
						-----------------------------------------------
						}
						loop info: Size i=0  i < swaptions.size()  ++i
						{
						-----------------------------------------------
						array table
						standardErrors -> ['[i][j]']
						vegasMatrix -> ['[i][j]']
						-----------------------------------------------
						}
						loop info: Size m=0  m<LENGTH(testedFactors)  ++m
						{
							loop info: Size m=0  m<LENGTH(testedFactors)  ++m
							{
								loop info: Size i=0  i < capsDeflated.numberOfProducts()  ++i
								{
								-----------------------------------------------
								array table
								standardErrors -> ['[i][j]']
								vegasMatrix -> ['[i][j]']
								-----------------------------------------------
								}
								loop info: Size i=0  i < caps.size()  ++i
								{
									loop info: Size j= caps[i].startIndex_  j< caps[i].endIndex_  ++j
									{
									-----------------------------------------------
									array table
									rateTimes -> ['[j]']
									accruals -> ['[j]']
									caps -> ['[i]']
									impliedVols_ -> ['[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								analyticVegas -> ['[i]']
								impliedVols_ -> ['[i]']
								caps -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i < caps.size()  ++i
								{
								-----------------------------------------------
								array table
								analyticVegas -> ['[i]', '[i]']
								standardErrors -> ['[i]']
								vegasMatrix -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i < caps.size()  ++i
								{
								-----------------------------------------------
								array table
								standardErrors -> ['[i][j]']
								vegasMatrix -> ['[i][j]']
								-----------------------------------------------
								}
								loop info: Size m=0  m<LENGTH(testedFactors)  ++m
								{
									loop info: Size k=0  k<N-i  k++
									{
										loop info: Size j=0  j<N  j++
										{
											loop info: Size l=0  l<N-j  l++
											{
											-----------------------------------------------
											array table
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: i1=0  i1<rateTimes.size()  i1++ 
								{
									loop info: i2=0  i2<rateTimes.size()  i2++ 
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<blackVols.size()  i++
								{
								-----------------------------------------------
								array table
								rateTimes -> ['[i]', '[i]', '[i]']
								blackVols -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<todaysForwards.size()  ++i
								{
								-----------------------------------------------
								array table
								displacedPayoffs -> ['[i]']
								forwardStrikes -> ['[i]']
								optionletPayoffs -> ['[i]']
								todaysForwards -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size j=0  j<LENGTH(marketModels)  j++
								{
									loop info: Size m=0  m<LENGTH(testedFactors)  ++m
									{
										loop info: Size k=0  k<LENGTH(measures)  k++
										{
											loop info: Size n=0  n<1  n++
											{
												loop info: Size i=0  i < accruals.size()  ++i
												{
												-----------------------------------------------
												array table
												accruals -> ['[i]']
												forwardStrikes -> ['[i]']
												errors -> ['[i]', '[i]']
												todaysDiscounts -> ['[i]']
												results -> ['[i]', '[i]']
												-----------------------------------------------
												}
												loop info: Size i=0  i < accruals.size()  ++i
												{
												-----------------------------------------------
												array table
												volatilities -> ['[i]', '[i]']
												errors -> ['[i]', '[i]']
												todaysForwards -> ['[i]', '[i]', '[i]']
												displacedPayoffs -> ['[i]']
												rateTimes -> ['[i]', '[i]']
												forwardStrikes -> ['[i]']
												accruals -> ['[i]', '[i]']
												-----------------------------------------------
												}
 											-----------------------------------------------
											array table
											marketModels -> ['[j]']
											measures -> ['[k]']
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										marketModels -> ['[j]']
										measures -> ['[k]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									testedFactors -> ['[m]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size k=0  k<LENGTH(marketModels)  ++k
								{
									loop info: Size j=0  j<numberOfSteps  ++j
									{
										loop info: Size h=inf  h<numeraires.size()  ++h
										{
											loop info: Size i=0  i<drifts.size()  ++i
											{
											-----------------------------------------------
											array table
											marketModels -> ['[k]']
											drifts -> ['[i]', '[i]']
											driftsReduced -> ['[i]', '[i]']
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										numeraires -> ['[h]']
										alive -> ['[j]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									alive -> ['[j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								marketModels -> ['[k]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<dim  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<dim  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<dim  i++
								{
								-----------------------------------------------
								array table
								subset -> ['[i]']
								set -> ['[i]']
								result -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=1 i<=n i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=1 i<=n-1 i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=1 i<=2*n-2 i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size k=0 k<modelNames.size() k++
								{
									loop info: Size l=0 l<evolNames.size() l++
									{
										loop info: Size i=0 i<evolTimes[l].size() i++
											{
												loop info: Size x=0 x<n-1 x++
												{
													loop info: Size y=0 y<n-1 y++
													{
													-----------------------------------------------
													array table
													modelNames -> ['[k]']
													rateTimes -> ['[x]', '[y]']
													evolTimes -> ['[l][i]']
													evolNames -> ['[l]']
													cov -> ['[x][y]', '[x][y]']
													-----------------------------------------------
													}
 												-----------------------------------------------
												array table
												-----------------------------------------------
												}
 											-----------------------------------------------
											array table
											evolTimes -> ['[l][i]', '[l]']
											-----------------------------------------------
											}
 									-----------------------------------------------
									array table
									evolTimes -> ['[l]']
									modelNames -> ['[k]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=1  i<dates.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=1  i<rateTimes_.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<todaysForwards_.size()  ++i
								{
								-----------------------------------------------
								array table
								todaysForwards_ -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=1  i<rateTimes_.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<todaysSwaps_.size()  i++
								{
								-----------------------------------------------
								array table
								todaysForwards -> ['[i]', '[i]']
								todaysSwaps -> ['[i]', '[i]']
								capletDisplacedVols -> ['[i]']
								swaptionDisplacedVols -> ['[i]']
								swaptionVols -> ['[i]']
								capletVols_ -> ['[i]']
								mktCapletVols -> ['[i]', '[i]']
								mktSwaptionVols -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<numberOfRates  ++i
								{
								-----------------------------------------------
								array table
								swapVariances -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<numberOfRates  ++i
								{
								-----------------------------------------------
								array table
								capletVols -> ['[i]']
								capletTotCovariance -> ['[i][i]']
								rateTimes_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<numberOfRates  ++i
								{
								-----------------------------------------------
								array table
								swapTerminalCovariance -> ['[i][i]']
								swapPseudoRoots -> ['[i]', '[i]']
								swapVariances -> ['[i]']
								rateTimes_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<numberOfRates  ++i
								{
								-----------------------------------------------
								array table
								capletVols -> ['[i]', '[i]']
								capletVols_ -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0 i<LENGTH(d) ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i1 = 0  i1 < LENGTH(types)  ++i1
								{
									loop info: Size i2 = 0  i2 < LENGTH(displacements)  ++i2
									{
										loop info: Size i3 = 0  i3 < LENGTH(forwards)  ++i3
										{
											loop info: Size i4 = 0  i4 < LENGTH(strikes)  ++i4
											{
												loop info: Size i5 = 0  i5 < LENGTH(stdDevs)  ++i5
												{
													loop info: Size i6 = 0  i6 < LENGTH(discounts)  ++i6
													{
													-----------------------------------------------
													array table
													-----------------------------------------------
													}
 												-----------------------------------------------
												array table
												-----------------------------------------------
												}
 											-----------------------------------------------
											array table
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Natural i=1  i<171  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=2  i<9000  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < LENGTH(tasks)  ++i
								{
								-----------------------------------------------
								array table
								tasks -> ['[i][0]', '[i][1]', '[i][2]']
								-----------------------------------------------
								}
								loop info: Size i=0  i < LENGTH(r)  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < LENGTH(c)  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(types)  i++
								{
									loop info: Size j=0  j<LENGTH(moneyness)  j++
									{
										loop info: Size k=0  k<LENGTH(lengths)  k++
										{
											loop info: Size h=0  h<LENGTH(startMonths)  h++
											{
												loop info: Size l=0  l<LENGTH(underlyings)  l++
												{
													loop info: Size m=0  m<LENGTH(qRates)  m++
													{
														loop info: Size n=0  n<LENGTH(rRates)  n++
														{
															loop info: Size p=0  p<LENGTH(vols)  p++
															{
															-----------------------------------------------
															array table
															rRates -> ['[n]']
															underlyings -> ['[l]']
															qRates -> ['[m]']
															moneyness -> ['[j]']
															vols -> ['[p]']
															-----------------------------------------------
															}
 														-----------------------------------------------
														array table
														-----------------------------------------------
														}
 													-----------------------------------------------
													array table
													-----------------------------------------------
													}
 												-----------------------------------------------
												array table
												-----------------------------------------------
												}
 											-----------------------------------------------
											array table
											lengths -> ['[k]']
											startMonths -> ['[h]']
											moneyness -> ['[j]']
											types -> ['[i]']
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<fixingDates.size()  i++
								{
								-----------------------------------------------
								array table
								fixingDates -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(types)  i++
								{
									loop info: Size j=0  j<LENGTH(strikes)  j++
									{
										loop info: Size k=0  k<LENGTH(lengths)  k++
										{
											loop info: Size l=0  l<LENGTH(underlyings)  l++
											{
												loop info: Size m=0  m<LENGTH(qRates)  m++
												{
													loop info: Size n=0  n<LENGTH(rRates)  n++
													{
														loop info: Size p=0  p<LENGTH(vols)  p++
														{
														-----------------------------------------------
														array table
														rRates -> ['[n]']
														underlyings -> ['[l]']
														qRates -> ['[m]']
														vols -> ['[p]']
														-----------------------------------------------
														}
 													-----------------------------------------------
													array table
													-----------------------------------------------
													}
 												-----------------------------------------------
												array table
												-----------------------------------------------
												}
 											-----------------------------------------------
											array table
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										lengths -> ['[k]']
										strikes -> ['[j]']
										types -> ['[i]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size j=1  j<futureFixings  j++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size j=1  j<futureFixings  j++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size j=1  j<futureFixings  j++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size l=0  l<LENGTH(cases4)  l++
								{
									loop info: Size i=1  i<cases4[l].fixings  i++
									{
									-----------------------------------------------
									array table
									fixingDates -> ['[i]']
									cases4 -> ['[l]']
									timeIncrements -> ['[i]', '[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								fixingDates -> ['[0]']
								timeIncrements -> ['[0]', '[0]']
								cases4 -> ['[l]', '[l]', '[l]', '[l]', '[l]', '[l]', '[l]', '[l]', '[l]', '[l]', '[l]', '[l]', '[l]', '[l]']
								-----------------------------------------------
								}
								loop info: Size l=0  l<LENGTH(cases5)  l++
								{
									loop info: Size i=1  i<cases5[l].fixings  i++
									{
									-----------------------------------------------
									array table
									fixingDates -> ['[i]']
									cases5 -> ['[l]']
									timeIncrements -> ['[i]', '[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								fixingDates -> ['[0]']
								cases5 -> ['[l]', '[l]', '[l]', '[l]', '[l]', '[l]', '[l]', '[l]', '[l]', '[l]', '[l]', '[l]', '[l]']
								timeIncrements -> ['[0]', '[0]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(types)  i++
								{
									loop info: Size j=0  j<LENGTH(strikes)  j++
									{
										loop info: Size k=0  k<LENGTH(lengths)  k++
										{
											loop info: Size l=0  l<LENGTH(underlyings)  l++
											{
												loop info: Size m=0  m<LENGTH(qRates)  m++
												{
													loop info: Size n=0  n<LENGTH(rRates)  n++
													{
														loop info: Size p=0  p<LENGTH(vols)  p++
														{
														-----------------------------------------------
														array table
														rRates -> ['[n]']
														underlyings -> ['[l]']
														qRates -> ['[m]']
														vols -> ['[p]']
														-----------------------------------------------
														}
 													-----------------------------------------------
													array table
													-----------------------------------------------
													}
 												-----------------------------------------------
												array table
												-----------------------------------------------
												}
 											-----------------------------------------------
											array table
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										lengths -> ['[k]']
										strikes -> ['[j]']
										types -> ['[i]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Integer i=0  i<=12  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Integer i=-2  i<=12  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size l=0  l<LENGTH(cases)  l++
								{
								-----------------------------------------------
								array table
								cases -> ['[l]', '[l]', '[l]', '[l]', '[l]', '[l]', '[l]', '[l]', '[l]', '[l]', '[l]', '[l]', '[l]', '[l]', '[l]', '[l]', '[l]', '[l]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(cases)  ++i
								{
								-----------------------------------------------
								array table
								cases -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<n  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<n  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<n.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<n.size()  i++
								{
								-----------------------------------------------
								array table
								quote -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<n.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<n.size()  i++
								{
								-----------------------------------------------
								array table
								quote -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<expected.size()  ++i
								{
								-----------------------------------------------
								array table
								expected -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < dates.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 1  i < dates.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(testData)  i++
								{
								-----------------------------------------------
								array table
								testData -> ['[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(testData)  i++
								{
								-----------------------------------------------
								array table
								testData -> ['[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(testData)  i++
								{
								-----------------------------------------------
								array table
								testData -> ['[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(testData)  i++
								{
								-----------------------------------------------
								array table
								testData -> ['[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(testData)  i++
								{
								-----------------------------------------------
								array table
								testData -> ['[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(issueMonths)  i++
								{
									loop info: Size j=0  j<LENGTH(lengths)  j++
									{
										loop info: Size k=0  k<LENGTH(coupons)  k++
										{
											loop info: Size l=0  l<LENGTH(frequencies)  l++
											{
												loop info: Size n=0  n<LENGTH(compounding)  n++
												{
													loop info: Size m=0  m<LENGTH(yields)  m++
													{
													-----------------------------------------------
													array table
													frequencies -> ['[l]', '[l]', '[l]', '[l]']
													compounding -> ['[n]', '[n]', '[n]', '[n]']
													yields -> ['[m]', '[m]', '[m]']
													coupons -> ['[k]']
													-----------------------------------------------
													}
 												-----------------------------------------------
												array table
												lengths -> ['[j]']
												frequencies -> ['[l]']
												coupons -> ['[k]']
												issueMonths -> ['[i]']
												-----------------------------------------------
												}
 											-----------------------------------------------
											array table
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(issueMonths)  i++
								{
									loop info: Size j=0  j<LENGTH(lengths)  j++
									{
										loop info: Size k=0  k<LENGTH(coupons)  k++
										{
											loop info: Size l=0  l<LENGTH(frequencies)  l++
											{
											-----------------------------------------------
											array table
											lengths -> ['[j]']
											frequencies -> ['[l]', '[l]']
											coupons -> ['[k]', '[k]', '[k]']
											issueMonths -> ['[i]']
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(issueMonths)  i++
								{
									loop info: Size j=0  j<LENGTH(lengths)  j++
									{
										loop info: Size k=0  k<LENGTH(coupons)  k++
										{
											loop info: Size l=0  l<LENGTH(frequencies)  l++
											{
												loop info: Size n=0  n<LENGTH(compounding)  n++
												{
													loop info: Size m=0  m<LENGTH(spreads)  m++
													{
													-----------------------------------------------
													array table
													frequencies -> ['[l]', '[l]', '[l]', '[l]']
													compounding -> ['[n]', '[n]', '[n]', '[n]']
													spreads -> ['[m]', '[m]', '[m]']
													coupons -> ['[k]']
													-----------------------------------------------
													}
 												-----------------------------------------------
												array table
												lengths -> ['[j]']
												frequencies -> ['[l]']
												coupons -> ['[k]']
												issueMonths -> ['[i]']
												-----------------------------------------------
												}
 											-----------------------------------------------
											array table
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size j=0  j<LENGTH(lengths)  j++
								{
									loop info: Size k=0  k<LENGTH(coupons)  k++
									{
										loop info: Size l=0  l<LENGTH(frequencies)  l++
										{
											loop info: Size m=0  m<LENGTH(yields)  m++
											{
											-----------------------------------------------
											array table
											frequencies -> ['[l]', '[l]', '[l]', '[l]']
											yields -> ['[m]', '[m]', '[m]', '[m]', '[m]']
											coupons -> ['[k]', '[k]']
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										lengths -> ['[j]']
										frequencies -> ['[l]']
										coupons -> ['[k]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size bondIndex = 0  bondIndex < maturityDates.size()  bondIndex++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(cases)  ++i
								{
								-----------------------------------------------
								array table
								cases -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(cases)  ++i
								{
								-----------------------------------------------
								array table
								cases -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < schedule.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size k = 0  k < 3  ++k
								{
									loop info: Size i = 0  i < 2  ++i
									{
										loop info: Size j = 0  j < 6  ++j
										{
										-----------------------------------------------
										array table
										strike -> ['[j]']
										maturity -> ['[i]']
										mcValues -> ['[k][i][j]', '[k][i][j]']
										analytic -> ['[k][i][j]', '[k][i][j]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								Lambda -> ['[k]']
								-----------------------------------------------
								}
								loop info: i = 0  i < 8  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size s = 3  s < 10  ++s
								{
									loop info: Size m = 0  m < 3  ++m
									{
									-----------------------------------------------
									array table
									strike -> ['[s]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: i = 0  i < options.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: i = 0  i < options.size()  ++i
								{
								-----------------------------------------------
								array table
								options -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<values.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<values.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<values.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<N  i++
								{
								-----------------------------------------------
								array table
								iiData -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<rpiSchedule.size() i++
								{
								-----------------------------------------------
								array table
								rpiSchedule -> ['[i]']
								fixData -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < nominalDataLength  i++
								{
								-----------------------------------------------
								array table
								nominalData -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < zciisDataLength  i++
								{
								-----------------------------------------------
								array table
								zciisData -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0 i<floatSchedule.size()  i++
								{
								-----------------------------------------------
								array table
								floatSchedule -> ['[i]', '[i]']
								cpiFix -> ['[i]']
								floatFix -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0 i<zisV.leg(0).size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<2  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0 i<floatSchedule.size()  i++
								{
								-----------------------------------------------
								array table
								floatSchedule -> ['[i]', '[i]']
								cpiFix -> ['[i]']
								floatFix -> ['[i]']
								-----------------------------------------------
								}
								loop info: i=0  i<1000  i++
								{
								-----------------------------------------------
								array table
								referenceLongValues -> ['[i]']
								-----------------------------------------------
								}
								loop info: i=0  i<1000  i++
								{
								-----------------------------------------------
								array table
								referenceValues -> ['[i]']
								-----------------------------------------------
								}
								loop info: i=0  i<1000  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: i=0  i<999  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: i=0  i<999  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<N  i++
								{
								-----------------------------------------------
								array table
								iiData -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(fixData)  ++i
								{
								-----------------------------------------------
								array table
								rpiSchedule -> ['[i]']
								fixData -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(types)  i++
								{
									loop info: Size j=0  j<LENGTH(strikes)  j++
									{
										loop info: Size k=0  k<LENGTH(lengths)  k++
										{
											loop info: Size l=0  l<LENGTH(underlyings)  l++
											{
												loop info: Size m=0  m<LENGTH(qRates)  m++
												{
													loop info: Size n=0  n<LENGTH(rRates)  n++
													{
														loop info: Size p=0  p<LENGTH(vols)  p++
														{
														-----------------------------------------------
														array table
														rRates -> ['[n]']
														underlyings -> ['[l]']
														qRates -> ['[m]']
														vols -> ['[p]']
														-----------------------------------------------
														}
 													-----------------------------------------------
													array table
													-----------------------------------------------
													}
 												-----------------------------------------------
												array table
												-----------------------------------------------
												}
 											-----------------------------------------------
											array table
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										lengths -> ['[k]']
										strikes -> ['[j]']
										types -> ['[i]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: int i = 0  d < d1  ++i, d = calendar.advance(d, 1, Days
								{
								-----------------------------------------------
								array table
								ts1 -> ['[d]']
								-----------------------------------------------
								}
								loop info: int i = 0  d < d1  ++i, d = calendar.advance(d, 1, Days
								{
								-----------------------------------------------
								array table
								ts1 -> ['[d]']
								-----------------------------------------------
								}
								loop info: i=0  i<LENGTH(averages)  i++
								{
									loop info: j=0  j<LENGTH(sigmas)  j++
									{
										loop info: k=0  k<N  k++
										{
										-----------------------------------------------
										array table
										weights -> ['[k]']
										data -> ['[k]', '[k]', '[k]']
										value -> ['[0]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									averages -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
									sigmas -> ['[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<N  i++
								{
								-----------------------------------------------
								array table
								iiData -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<rpiSchedule.size() i++
								{
								-----------------------------------------------
								array table
								rpiSchedule -> ['[i]']
								fixData -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < nominalDataLength  i++
								{
								-----------------------------------------------
								array table
								nominalData -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < zciisDataLength  i++
								{
								-----------------------------------------------
								array table
								zciisData -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < ncStrikes  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < nfStrikes  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < ncfMaturities  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < ncStrikes  i++
								{
									loop info: Size j = 0  j < ncfMaturities  j++
									{
									-----------------------------------------------
									array table
									cPrice -> ['[j][i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < nfStrikes  i++
								{
									loop info: Size j = 0  j < ncfMaturities  j++
									{
									-----------------------------------------------
									array table
									fPrice -> ['[j][i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i =0  i<common.fStrikesUK.size()  i++
								{
									loop info: Size j=0  j<nMat  j++
									{
									-----------------------------------------------
									array table
									common.cfMaturitiesUK -> ['[j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								common.fStrikesUK -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i =0  i<common.cStrikesUK.size()  i++
								{
									loop info: Size j=0  j<nMat  j++
									{
									-----------------------------------------------
									array table
									common.cfMaturitiesUK -> ['[j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								common.cStrikesUK -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=1  i<dates.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=1  i<rateTimes_.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<todaysForwards_.size()  ++i
								{
								-----------------------------------------------
								array table
								todaysForwards_ -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=1  i<rateTimes_.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<todaysSwaps_.size()  i++
								{
								-----------------------------------------------
								array table
								todaysForwards -> ['[i]', '[i]']
								todaysSwaps -> ['[i]', '[i]']
								capletDisplacedVols -> ['[i]']
								swaptionDisplacedVols -> ['[i]']
								swaptionVols -> ['[i]']
								capletVols_ -> ['[i]']
								mktCapletVols -> ['[i]', '[i]']
								mktSwaptionVols -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<numberOfRates  ++i
								{
								-----------------------------------------------
								array table
								swapVariances -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<numberOfRates  ++i
								{
								-----------------------------------------------
								array table
								capletVols -> ['[i]']
								capletTotCovariance -> ['[i][i]']
								rateTimes_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<numberOfRates  ++i
								{
								-----------------------------------------------
								array table
								swapTerminalCovariance -> ['[i][i]']
								swapPseudoRoots -> ['[i]', '[i]']
								swapVariances -> ['[i]']
								rateTimes_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<numberOfRates  ++i
								{
								-----------------------------------------------
								array table
								capletVols -> ['[i]', '[i]']
								capletVols_ -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i <= numberBigRates  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<numberBigRates  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<numberOfRates  ++i
								{
								-----------------------------------------------
								array table
								capletVols -> ['[i]']
								capletTotCovariance -> ['[i][i]']
								rateTimes_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<numberOfRates  ++i
								{
								-----------------------------------------------
								array table
								capletVols -> ['[i]', '[i]']
								capletVols_ -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<numberBigRates  ++i
								{
								-----------------------------------------------
								array table
								swapTerminalCovariance -> ['[i][i]', '[i][i]']
								swapVariances -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(cases)  i++
								{
								-----------------------------------------------
								array table
								cases -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<n  ++i
								{
								-----------------------------------------------
								array table
								final -> ['[i]']
								original -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<n  ++i
								{
								-----------------------------------------------
								array table
								intermediate -> ['[i]']
								temp -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<n  ++i
								{
								-----------------------------------------------
								array table
								final -> ['[i]']
								original -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<n  ++i
								{
								-----------------------------------------------
								array table
								intermediate -> ['[i]']
								temp -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<n  ++i
								{
								-----------------------------------------------
								array table
								final -> ['[i]']
								original -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<n  ++i
								{
								-----------------------------------------------
								array table
								intermediate -> ['[i]']
								final -> ['[i]']
								temp -> ['[i]']
								original -> ['[i]']
								-----------------------------------------------
								}
								loop info: i=0  i<N  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: i=0  i<x.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: i = 0  i < grid.size()  i++
								{
								-----------------------------------------------
								array table
								grid -> ['[i]']
								-----------------------------------------------
								}
								loop info: i=2  i<grid.size()-2  i++
								{
								-----------------------------------------------
								array table
								derror -> ['[i]']
								uderror -> ['[i]']
								lderror -> ['[i]']
								-----------------------------------------------
								}
								loop info: i=2  i<grid.size()-2  i++
								{
								-----------------------------------------------
								array table
								derror -> ['[i]']
								uderror -> ['[i]']
								lderror -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
									loop info: Integer j=0  j < 2  j++
									{
									-----------------------------------------------
									array table
									correlationMatrix -> ['[j][j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
									loop info: Integer j=0  j < 3  j++
									{
									-----------------------------------------------
									array table
									correlation -> ['[j][j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Integer j=0  j < 3  j++
								{
								-----------------------------------------------
								array table
								correlation -> ['[j][j]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Real t=0.01  t < 11  t+=t
								{
								-----------------------------------------------
								array table
								expected -> ['[0][0]', '[0][1]', '[0][2]', '[1][0]', '[1][1]', '[1][2]', '[2][0]', '[2][1]', '[2][2]']
								-----------------------------------------------
								}
								loop info: Size i=0  i < calculated.rows()  ++i
								{
									loop info: Size j=0  j < calculated.columns()  ++j
									{
									-----------------------------------------------
									array table
									calculated -> ['[i][j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=1  i<dates.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=1  i<rateTimes.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<todaysForwards.size()  ++i
								{
								-----------------------------------------------
								array table
								todaysForwards -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=1  i<rateTimes.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<todaysSwaps.size()  i++
								{
								-----------------------------------------------
								array table
								volatilities -> ['[i]']
								mktVols -> ['[i]', '[i]']
								blackVols -> ['[i]']
								todaysSwaps -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<N  ++i
								{
								-----------------------------------------------
								array table
								errors -> ['[i]']
								expectedNPVs -> ['[i]', '[i]']
								todaysSwaps -> ['[i]']
								results -> ['[i]']
								todaysDiscounts -> ['[i]']
								discrepancies -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<N  ++i
								{
								-----------------------------------------------
								array table
								errors -> ['[i]']
								results -> ['[i]']
								expectedNPVs -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<N  ++i
								{
								-----------------------------------------------
								array table
								volatilities -> ['[i]']
								displacedPayoff -> ['[i]']
								todaysDiscounts -> ['[i]']
								expectedSwaptions -> ['[i]', '[i]']
								discrepancies -> ['[i]', '[i]']
								todaysSwaps -> ['[i]']
								rateTimes -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=1  i<=N  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<undisplacedPayoff.size()  ++i
								{
								-----------------------------------------------
								array table
								undisplacedPayoff -> ['[i]']
								displacedPayoff -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size j=0  j<LENGTH(marketModels)  j++
								{
									loop info: Size m=0  m<LENGTH(testedFactors)  ++m
									{
										loop info: Size k=0  k<LENGTH(measures)  k++
										{
											loop info: Size i=0  i<LENGTH(evolvers)-stop  i++
											{
												loop info: Size n=0  n<1  n++
												{
												-----------------------------------------------
												array table
												marketModels -> ['[j]']
												measures -> ['[k]']
												evolvers -> ['[i]', '[i]']
												-----------------------------------------------
												}
 											-----------------------------------------------
											array table
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										marketModels -> ['[j]']
										measures -> ['[k]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									testedFactors -> ['[m]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<N  i++
								{
								-----------------------------------------------
								array table
								iiData -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(fixData)  i++
								{
								-----------------------------------------------
								array table
								rpiSchedule -> ['[i]']
								fixData -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<rpiSchedule.size()-1 i++
								{
									loop info: Date d=lim.first  d<=lim.second  d++
									{
									-----------------------------------------------
									array table
									fixData -> ['[i]', '[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								rpiSchedule -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(fixData)  i++
								{
								-----------------------------------------------
								array table
								rpiSchedule -> ['[i]']
								fixData -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(zcData)  i++
								{
								-----------------------------------------------
								array table
								zcData -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								helpers -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<testIndex.size() i++
								{
								-----------------------------------------------
								array table
								testIndex -> ['[i]']
								-----------------------------------------------
								}
								loop info: int i=0 i<12 i++
								{
								-----------------------------------------------
								array table
								seasonalityFixing_1 -> ['[i]']
								fixing -> ['[i]']
								-----------------------------------------------
								}
								loop info: int i=0 i<12 i++
								{
								-----------------------------------------------
								array table
								seasonalityFixing_real -> ['[i]', '[i]']
								expectedFixing -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: int i=0 i<12 i++
								{
								-----------------------------------------------
								array table
								seasonalityFixing_1 -> ['[i]', '[i]']
								seasonalityFixing_unset -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(fixData) i++
								{
								-----------------------------------------------
								array table
								rpiSchedule -> ['[i]']
								fixData -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(zcData)  i++
								{
								-----------------------------------------------
								array table
								zcData -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								helpersyes -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<testIndex.size() i++
								{
								-----------------------------------------------
								array table
								testIndex -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(fixData) i++
								{
								-----------------------------------------------
								array table
								rpiSchedule -> ['[i]', '[i]']
								fixData -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=13  i<rpiSchedule.size() i++
								{
									loop info: Date d=lim.first  d<=lim.second  d++
									{
									-----------------------------------------------
									array table
									fixData -> ['[i]', '[i]', '[i]', '[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								rpiSchedule -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(fixData)  i++
								{
								-----------------------------------------------
								array table
								rpiSchedule -> ['[i]']
								fixData -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size j = 1  j < LENGTH(yyData)  j++
								{
								-----------------------------------------------
								array table
								yyData -> ['[j]', '[j]', '[j]', '[j]', '[j]']
								-----------------------------------------------
								}
								loop info: Size k = 0  k < 14  k++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=1  i<=12  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 1  i < 60  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 1  i < 60  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<nRows  ++i
								{
									loop info: Size j=0  j<nCols  ++j
									{
									-----------------------------------------------
									array table
									volSpreadsMatrix -> ['[i][j]']
									volSpreads -> ['[i][j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								volSpreads -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<nRows  ++i
								{
								-----------------------------------------------
								array table
								guess -> ['[i]', '[i][0]', '[i][1]', '[i][2]', '[i][3]']
								-----------------------------------------------
								}
								loop info: Size j = 0  j < yieldCurveModels.size()  ++j
								{
								-----------------------------------------------
								array table
								yieldCurveModels -> ['[j]', '[j]']
								-----------------------------------------------
								}
								loop info: Size j=0  j<vars.yieldCurveModels.size()  ++j
								{
								-----------------------------------------------
								array table
								vars.numericalPricers -> ['[j]', '[j]']
								vars.yieldCurveModels -> ['[j]']
								vars.analyticPricers -> ['[j]', '[j]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<n  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size j=0  j<vars.yieldCurveModels.size()  ++j
								{
									loop info: Size sl=0  sl<n  ++sl
									{
									-----------------------------------------------
									array table
									vars.numericalPricers -> ['[j]']
									vars.yieldCurveModels -> ['[j]']
									vars.analyticPricers -> ['[j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								vars.numericalPricers -> ['[j]']
								vars.analyticPricers -> ['[j]']
								-----------------------------------------------
								}
								loop info: Rate strike = .02  strike<.12  strike+=0.05
								{
									loop info: Size i=0  i<swaptionVols.size()  ++i
									{
										loop info: Size j=0  j<vars.yieldCurveModels.size()  ++j
										{
											loop info: Size k=0  k<pricers.size()  ++k
											{
											-----------------------------------------------
											array table
											pricers -> ['[k]', '[k]', '[k]']
											vars.yieldCurveModels -> ['[j]']
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										vars.numericalPricers -> ['[j]', '[j]']
										pricers -> ['[0]', '[1]']
										swaptionVols -> ['[i]', '[i]']
										vars.analyticPricers -> ['[j]', '[j]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < 8  ++i
								{
								-----------------------------------------------
								array table
								ts -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=1  i<=4  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(types)  i++
								{
									loop info: Size j=0  j<LENGTH(moneyness)  j++
									{
										loop info: Size k=0  k<LENGTH(lengths)  k++
										{
											loop info: Size kk=0  kk<LENGTH(frequencies)  kk++
											{
												loop info: Size l=0  l<LENGTH(underlyings)  l++
												{
													loop info: Size m=0  m<LENGTH(qRates)  m++
													{
														loop info: Size n=0  n<LENGTH(rRates)  n++
														{
															loop info: Size p=0  p<LENGTH(vols)  p++
															{
															-----------------------------------------------
															array table
															rRates -> ['[n]']
															underlyings -> ['[l]']
															qRates -> ['[m]']
															vols -> ['[p]']
															-----------------------------------------------
															}
 														-----------------------------------------------
														array table
														-----------------------------------------------
														}
 													-----------------------------------------------
													array table
													-----------------------------------------------
													}
 												-----------------------------------------------
												array table
												-----------------------------------------------
												}
 											-----------------------------------------------
											array table
											lengths -> ['[k]']
											moneyness -> ['[j]']
											types -> ['[i]']
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(types)  i++
								{
									loop info: Size j=0  j<LENGTH(moneyness)  j++
									{
										loop info: Size k=0  k<LENGTH(lengths)  k++
										{
											loop info: Size kk=0  kk<LENGTH(frequencies)  kk++
											{
												loop info: Date d = today + tenor  d < maturity->lastDate()  d += tenor
												{
												-----------------------------------------------
												array table
												-----------------------------------------------
												}
												loop info: Size l=0  l<LENGTH(underlyings)  l++
												{
													loop info: Size m=0  m<LENGTH(qRates)  m++
													{
														loop info: Size n=0  n<LENGTH(rRates)  n++
														{
															loop info: Size p=0  p<LENGTH(vols)  p++
															{
															-----------------------------------------------
															array table
															rRates -> ['[n]']
															underlyings -> ['[l]']
															qRates -> ['[m]']
															vols -> ['[p]']
															-----------------------------------------------
															}
 														-----------------------------------------------
														array table
														-----------------------------------------------
														}
 													-----------------------------------------------
													array table
													-----------------------------------------------
													}
 												-----------------------------------------------
												array table
												-----------------------------------------------
												}
 											-----------------------------------------------
											array table
											lengths -> ['[k]']
											moneyness -> ['[j]']
											types -> ['[i]']
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(cases)  ++i
								{
								-----------------------------------------------
								array table
								cases -> ['[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<atm.tenors.options.size()  i++
								{
									loop info: Size j=0  j<atm.tenors.swaps.size()  j++
									{
									-----------------------------------------------
									array table
									atm.tenors.options -> ['[i]', '[i]', '[i]', '[i]']
									atm.tenors.swaps -> ['[j]', '[j]', '[j]', '[j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<cube.tenors.options.size()  i++
								{
									loop info: Size j=0  j<cube.tenors.swaps.size()  j++
									{
										loop info: Size k=0  k<cube.strikeSpreads.size()  k++
										{
										-----------------------------------------------
										array table
										cube.strikeSpreads -> ['[k]', '[k]']
										cube.tenors.options -> ['[i]', '[i]', '[i]', '[i]']
										cube.tenors.swaps -> ['[j]', '[j]', '[j]', '[j]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<vars.cube.tenors.options.size()*vars.cube.tenors.swaps.size()  i++
								{
								-----------------------------------------------
								array table
								parametersGuess -> ['[i]', '[i][0]', '[i][1]', '[i][2]', '[i][3]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<vars.cube.tenors.options.size()*vars.cube.tenors.swaps.size()  i++
								{
								-----------------------------------------------
								array table
								parametersGuess -> ['[i]', '[i][0]', '[i][1]', '[i][2]', '[i][3]']
								-----------------------------------------------
								}
								loop info: Size k=1  k<100  k++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<vars.cube.tenors.options.size()  i++
								{
									loop info: Size j=0  j<vars.cube.tenors.swaps.size()  j++
									{
										loop info: Size k=0  k<strikes.size()  k++
										{
										-----------------------------------------------
										array table
										vars.cube.tenors.swaps -> ['[j]', '[j]', '[j]', '[j]']
										vars.cube.tenors.options -> ['[i]', '[i]', '[i]', '[i]']
										strikes -> ['[k]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									vars.cube.tenors.swaps -> ['[j]', '[j]']
									vars.cube.tenors.options -> ['[i]', '[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<vars.cube.tenors.options.size()*vars.cube.tenors.swaps.size()  i++
								{
								-----------------------------------------------
								array table
								parametersGuess -> ['[i]', '[i][0]', '[i][1]', '[i][2]', '[i][3]']
								-----------------------------------------------
								}
								loop info: Size i=0 i<vars.cube.tenors.options.size()  i++ 
								{
									loop info: Size j=0  j<vars.cube.tenors.swaps.size()  j++
									{
										loop info: Size k=0  k<vars.cube.strikeSpreads.size()  k++
										{
										-----------------------------------------------
										array table
										vars.cube.strikeSpreads -> ['[k]', '[k]', '[k]']
										vars.cube.tenors.swaps -> ['[j]', '[j]', '[j]']
										vars.cube.tenors.options -> ['[i]', '[i]', '[i]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0 i<vars.cube.tenors.options.size()  i++ 
								{
									loop info: Size j=0  j<vars.cube.tenors.swaps.size()  j++
									{
										loop info: Size k=0  k<vars.cube.strikeSpreads.size()  k++
										{
										-----------------------------------------------
										array table
										vars.cube.strikeSpreads -> ['[k]', '[k]', '[k]']
										vars.cube.tenors.swaps -> ['[j]', '[j]', '[j]']
										vars.cube.tenors.options -> ['[i]', '[i]', '[i]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(exercises)  i++
								{
									loop info: Size j=0  j<LENGTH(lengths)  j++
									{
										loop info: Size k=0  k<LENGTH(type)  k++
										{
											loop info: Size l=0  l<LENGTH(strikes)  l++
											{
											-----------------------------------------------
											array table
											lengths -> ['[j]']
											type -> ['[k]']
											strikes -> ['[l]']
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										exercises -> ['[i]', '[i]', '[i]', '[i]', '[i]']
										lengths -> ['[j]', '[j]', '[j]', '[j]']
										type -> ['[k]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(exercises)  i++
								{
									loop info: Size j=0  j<LENGTH(lengths)  j++
									{
										loop info: Size k=0  k<LENGTH(type)  k++
										{
											loop info: Size l=0  l<LENGTH(spreads)  l++
											{
											-----------------------------------------------
											array table
											lengths -> ['[j]']
											spreads -> ['[l]']
											type -> ['[k]']
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										exercises -> ['[i]']
										lengths -> ['[j]', '[j]', '[j]', '[j]']
										spreads -> ['[n]', '[n]', '[n]', '[n]']
										type -> ['[k]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(exercises)  i++
								{
									loop info: Size j=0  j<LENGTH(lengths)  j++
									{
										loop info: Size k=0  k<LENGTH(type)  k++
										{
											loop info: Size l=0  l<LENGTH(spreads)  l++
											{
											-----------------------------------------------
											array table
											lengths -> ['[j]', '[j]', '[j]', '[j]']
											spreads -> ['[l]', '[l]', '[l]', '[l]']
											type -> ['[k]', '[k]', '[k]', '[k]']
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										exercises -> ['[i]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(exercises)  i++
								{
									loop info: Size j=0  j<LENGTH(lengths)  j++
									{
										loop info: Size t=0  t<LENGTH(strikes)  t++
										{
											loop info: Size h=0  h<LENGTH(type)  h++
											{
												loop info: Size u=0  u<LENGTH(vols)  u++
												{
												-----------------------------------------------
												array table
												exercises -> ['[i]']
												lengths -> ['[j]']
												strikes -> ['[t]']
												types -> ['[h]', '[h]', '[h]', '[h]']
												vols -> ['[u]', '[u]', '[u]', '[u]']
												-----------------------------------------------
												}
 											-----------------------------------------------
											array table
											lengths -> ['[j]']
											type -> ['[h]']
											strikes -> ['[t]']
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								exercises -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(exercises)  i++
								{
									loop info: Size j=0  j<LENGTH(lengths)  j++
									{
										loop info: i=0  i<swapFixedLeg_u360.size()  i++
										{
										-----------------------------------------------
										array table
										swapFixedLeg_u360 -> ['[i]', '[i]']
										-----------------------------------------------
										}
										loop info: i=0  i<swapFixedLeg_u365.size()  i++
										{
										-----------------------------------------------
										array table
										swapFixedLeg_u365 -> ['[i]', '[i]']
										-----------------------------------------------
										}
										loop info: i=0  i<swapFixedLeg_a360.size()  i++
										{
										-----------------------------------------------
										array table
										swapFixedLeg_a360 -> ['[i]', '[i]']
										-----------------------------------------------
										}
										loop info: i=0  i<swapFixedLeg_a365.size()  i++
										{
										-----------------------------------------------
										array table
										swapFixedLeg_a365 -> ['[i]', '[i]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									exercises -> ['[i]', '[i]', '[i]', '[i]', '[i]']
									lengths -> ['[j]', '[j]', '[j]', '[j]', '[j]']
									type -> ['[0]', '[0]', '[0]', '[0]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(exercises)  i++
								{
									loop info: Size j=0  j<LENGTH(lengths)  j++
									{
										loop info: Size t=0  t<LENGTH(strikes)  t++
										{
											loop info: Size k=0  k<LENGTH(type)  k++
											{
												loop info: Size h=0  h<LENGTH(types)  h++
												{
													loop info: Size u=0  u<LENGTH(vols)  u++
													{
													-----------------------------------------------
													array table
													lengths -> ['[j]', '[j]']
													strikes -> ['[t]', '[t]']
													vols -> ['[u]', '[u]', '[u]', '[u]']
													exercises -> ['[i]', '[i]']
													type -> ['[k]', '[k]']
													types -> ['[h]', '[h]', '[h]']
													-----------------------------------------------
													}
 												-----------------------------------------------
												array table
												-----------------------------------------------
												}
 											-----------------------------------------------
											array table
											lengths -> ['[j]']
											type -> ['[k]']
											strikes -> ['[t]']
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									exercises -> ['[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: i = 0  i < 8  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size s = 0  s < 13  ++s
								{
									loop info: Size m = 0  m < 8  ++m
									{
									-----------------------------------------------
									array table
									strike -> ['[s]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < optionMaturities.size()  ++i
								{
									loop info: Real moneyness = -1.0  moneyness < 2.0  moneyness += 1.0
									{
									-----------------------------------------------
									array table
									optionMaturities -> ['[i]', '[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Real sigma = 0.1  sigma < 0.7  sigma += 0.2
								{
									loop info: Size i = 0  i < options.size()  ++i
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < options.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < 13*8  ++i
								{
								-----------------------------------------------
								array table
								options -> ['[i]']
								-----------------------------------------------
								}
								loop info: i = 0  i < 6  ++i
								{
								-----------------------------------------------
								array table
								calculated2 -> ['[i]']
								-----------------------------------------------
								}
								loop info: i = 0  i < 3  ++i
								{
								-----------------------------------------------
								array table
								calculated2 -> ['[i]', '[i]']
								expected2 -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i < LENGTH(descriptions)  ++i
								{
								-----------------------------------------------
								array table
								descriptions -> ['[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i < LENGTH(maturities)  ++i
								{
									loop info: Size j=0  j < LENGTH(strikes)  ++j
									{
										loop info: Size k=0  k < LENGTH(types)  ++k
										{
										-----------------------------------------------
										array table
										strikes -> ['[j]']
										types -> ['[k]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								maturities -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i < strikes.size()  ++i
								{
								-----------------------------------------------
								array table
								strikes -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i < pTimes.size()+1  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < options.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < 13*8  ++i
								{
								-----------------------------------------------
								array table
								options -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i < LENGTH(strikes)  ++i
								{
									loop info: Size j=0  j < LENGTH(types)  ++j
									{
										loop info: Size k=0  k < LENGTH(engines)  ++k
										{
										-----------------------------------------------
										array table
										expectedResults -> ['[i][j]']
										engines -> ['[k]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									types -> ['[j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								strikes -> ['[i]']
								-----------------------------------------------
								}
								loop info: Real strike=40  strike < 190  strike+=20
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Real strike=40  strike < 190  strike+=10
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < LENGTH(strikes)  ++i
								{
									loop info: Size j=0  j < LENGTH(types)  ++j
									{
										loop info: Size k=0  k < LENGTH(engines)  ++k
										{
										-----------------------------------------------
										array table
										tol -> ['[k]']
										expectedResults -> ['[i][j]']
										engines -> ['[k]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									types -> ['[j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								strikes -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size j=0  j < LENGTH(terms)  ++j
								{
									loop info: Size i=0  i < LENGTH(strikes)  ++i
									{
										loop info: Size k=0  k < LENGTH(expansions)  ++k
										{
										-----------------------------------------------
										array table
										referenceVols -> ['[j][i]']
										expansions -> ['[k]']
										tol -> ['[k][j]']
										tolAtm -> ['[k][j]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									strikes -> ['[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								terms -> ['[j]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<poolSize  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < LENGTH(hwData7)  i++
								{
									loop info: Size j = 0  j < LENGTH(hwAttachment)  j ++
									{
										loop info: Size im=0  im<basketModels.size()  im++
										{
										-----------------------------------------------
										array table
										trancheSpread -> ['[j]', '[j]']
										hwData7 -> ['[i]', '[i]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									hwDetachment -> ['[j]', '[j]']
									hwAttachment -> ['[j]', '[j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								hwData7 -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<n  i++
								{
								-----------------------------------------------
								array table
								testCases -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(cases)  ++i
								{
								-----------------------------------------------
								array table
								cases -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(juValues)  i++
								{
								-----------------------------------------------
								array table
								juValues -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(juValues)  i++
								{
								-----------------------------------------------
								array table
								juValues -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(types)  i++
								{
									loop info: Size j=0  j<LENGTH(strikes)  j++
									{
										loop info: Size k=0  k<LENGTH(years)  k++
										{
											loop info: Size l=0  l<LENGTH(underlyings)  l++
											{
												loop info: Size m=0  m<LENGTH(qRates)  m++
												{
													loop info: Size n=0  n<LENGTH(rRates)  n++
													{
														loop info: Size p=0  p<LENGTH(vols)  p++
														{
														-----------------------------------------------
														array table
														rRates -> ['[n]']
														underlyings -> ['[l]']
														qRates -> ['[m]']
														vols -> ['[p]']
														-----------------------------------------------
														}
 													-----------------------------------------------
													array table
													-----------------------------------------------
													}
 												-----------------------------------------------
												array table
												-----------------------------------------------
												}
 											-----------------------------------------------
											array table
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										strikes -> ['[j]']
										types -> ['[i]']
										years -> ['[k]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < 8  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < strikes.size()  ++i
								{
								-----------------------------------------------
								array table
								blackVolMatrix -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(order)  i++
								{
								-----------------------------------------------
								array table
								order -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(rates)  ++i
								{
									loop info: Size k=0  k < cashflows.size() / 2  ++k
									{
									-----------------------------------------------
									array table
									amounts -> ['[i]', '[i]']
									rates -> ['[i]', '[i]', '[i]']
									notionals -> ['[k]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								rates -> ['[i]']
								-----------------------------------------------
								}
								loop info: Integer i=0  i<3  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<n  i++
								{
								-----------------------------------------------
								array table
								testCases -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Date start = first  start <= last  start++
								{
									loop info: Size i=0  i<n  i++
									{
									-----------------------------------------------
									array table
									expected -> ['[i]', '[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Date start = first  start <= last  start++
								{
									loop info: Size i=0  i<n  i++
									{
									-----------------------------------------------
									array table
									expected -> ['[i]', '[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=1  i<testDates.size()  i++
								{
								-----------------------------------------------
								array table
								testDates -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=1  i<testDates.size()  i++
								{
								-----------------------------------------------
								array table
								testDates -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < testStartDates.size()  i++
								{
								-----------------------------------------------
								array table
								expected -> ['[i]', '[i]']
								testStartDates -> ['[i]', '[i]']
								testEndDates -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < testStartDates.size()  i++
								{
								-----------------------------------------------
								array table
								expected -> ['[i]', '[i]']
								testStartDates -> ['[i]', '[i]']
								testEndDates -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<deposits  i++
								{
								-----------------------------------------------
								array table
								depositData -> ['[i]']
								rates -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<swaps  i++
								{
								-----------------------------------------------
								array table
								swapData -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<fras  i++
								{
								-----------------------------------------------
								array table
								fraRates -> ['[i]']
								fraData -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i<bonds  i++
								{
								-----------------------------------------------
								array table
								prices -> ['[i]']
								bondData -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i<immFuts  i++
								{
								-----------------------------------------------
								array table
								immFutPrices -> ['[i]']
								immFutData -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i<asxFuts  i++
								{
								-----------------------------------------------
								array table
								asxFutPrices -> ['[i]']
								asxFutData -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i<bmas  i++
								{
								-----------------------------------------------
								array table
								fractions -> ['[i]']
								bmaData -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<deposits  i++
								{
								-----------------------------------------------
								array table
								instruments -> ['[i]']
								rates -> ['[i]']
								depositData -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<swaps  i++
								{
								-----------------------------------------------
								array table
								swapData -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<fras  i++
								{
								-----------------------------------------------
								array table
								fraRates -> ['[i]']
								fraData -> ['[i]', '[i]']
								fraHelpers -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i<immFuts  i++
								{
								-----------------------------------------------
								array table
								immFutPrices -> ['[i]']
								immFutHelpers -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i<asxFuts  i++
								{
								-----------------------------------------------
								array table
								asxFutHelpers -> ['[i]']
								asxFutPrices -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<bonds  i++
								{
								-----------------------------------------------
								array table
								prices -> ['[i]']
								bondHelpers -> ['[i]']
								bondData -> ['[i]', '[i]', '[i]', '[i]', '[i]']
								schedules -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<vars.deposits  i++
								{
								-----------------------------------------------
								array table
								depositData -> ['[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<vars.swaps  i++
								{
								-----------------------------------------------
								array table
								swapData -> ['[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<vars.bonds  i++
								{
								-----------------------------------------------
								array table
								vars.schedules -> ['[i]']
								bondData -> ['[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<vars.fras  i++
								{
								-----------------------------------------------
								array table
								fraData -> ['[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i<vars.immFuts  i++
								{
								-----------------------------------------------
								array table
								immFutData -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i<vars.asxFuts  i++
								{
								-----------------------------------------------
								array table
								asxFutData -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<vars.bmas  ++i
								{
								-----------------------------------------------
								array table
								bmaData -> ['[i]', '[i]']
								vars.bmaHelpers -> ['[i]']
								vars.fractions -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<vars.bmas  i++
								{
								-----------------------------------------------
								array table
								bmaData -> ['[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<vars.deposits+vars.swaps  i++
								{
								-----------------------------------------------
								array table
								vars.instruments -> ['[i]']
								vars.rates -> ['[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<vars.swaps  i++
								{
								-----------------------------------------------
								array table
								swapData -> ['[i]', '[i]']
								swapHelpers -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<vars.swaps  i++
								{
								-----------------------------------------------
								array table
								swapData -> ['[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<vars.swaps  i++
								{
								-----------------------------------------------
								array table
								swapData -> ['[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<vars.swaps  i++
								{
								-----------------------------------------------
								array table
								swapData -> ['[i]']
								vars.rates -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<vars.swaps  i++
								{
								-----------------------------------------------
								array table
								swapData -> ['[i]', '[i]']
								vars.instruments -> ['[i]']
								vars.rates -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<vars.swaps  i++
								{
								-----------------------------------------------
								array table
								swapData -> ['[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<vars.rates.size()  ++i
								{
								-----------------------------------------------
								array table
								vars.rates -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<points-1  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<x.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<x.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Real x = xMin  x < 0.0  x += 0.1
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(points)  i++
								{
								-----------------------------------------------
								array table
								tabulatedErrors -> ['[i]', '[i]']
								toleranceOnTabErr -> ['[i]']
								points -> ['[i]']
								tabulatedMCErrors -> ['[i]', '[i]']
								toleranceOnTabMCErr -> ['[i]']
								-----------------------------------------------
								}
								loop info: Real start = -1.9, j=0  j<2  start+=0.2, j++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: i=0  i<n  i++
								{
								-----------------------------------------------
								array table
								generic_natural_y2 -> ['[i]', '[i]']
								generic_x -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: i = 0  i < 5  ++i
								{
									loop info: j = 0  j < dim[i]  temp += r, ++j
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								offsets -> ['[i]']
								-----------------------------------------------
								}
								loop info: i = 0  i < dim[0]  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: i = 0  i < dim[0]  ++i
								{
									loop info: i = 1  i < dim[0]-1  ++i
									{
									-----------------------------------------------
									array table
									y5 -> ['[i][j][k][l][m]']
									grid -> ['[0][i]', '[1][j]', '[2][k]', '[3][l]', '[4][m]']
									-----------------------------------------------
									}
									loop info: i = 0  i < 1023  ++i
									{
									-----------------------------------------------
									array table
									grid -> ['[0]', '[0]', '[0]', '[1]', '[1]', '[1]', '[2]', '[2]', '[2]', '[3]', '[3]', '[3]', '[4]', '[4]', '[4]']
									next -> ['[0]', '[1]', '[2]', '[3]', '[4]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<N  i++
								{
								-----------------------------------------------
								array table
								x2 -> ['[i]']
								y2 -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: i=0  i<N  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: i=0  i<N-1  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: i=1  i<N  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: i=0  i<N-1  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: i=0  i<N  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: i=0  i<N-1  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: i=1  i<N  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: i=0  i<N-1  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i< strikes.size()  i++
								{
								-----------------------------------------------
								array table
								volatilities -> ['[i]', '[i]', '[i]']
								strikes -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size j=0  j<methods_.size()  ++j
								{
									loop info: Size i=0  i<LENGTH(vegaWeighted)  ++i
									{
										loop info: Size k_a=0  k_a<LENGTH(isAlphaFixed)  ++k_a
										{
											loop info: Size k_b=0  k_b<LENGTH(isBetaFixed)  ++k_b
											{
												loop info: Size k_n=0  k_n<LENGTH(isNuFixed)  ++k_n
												{
													loop info: Size k_r=0  k_r<LENGTH(isRhoFixed)  ++k_r
													{
													-----------------------------------------------
													array table
													methods_ -> ['[j]']
													vegaWeighted -> ['[i]', '[i]', '[i]']
													-----------------------------------------------
													}
 												-----------------------------------------------
												array table
												-----------------------------------------------
												}
 											-----------------------------------------------
											array table
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<lambdaVec.size()  ++i
								{
									loop info: Size j=0  j<yd.size()  ++j
									{
										loop info: Size dIt=0  dIt< deltaGrid.size()  ++dIt
										{
										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									yd -> ['[j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								lambdaVec -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size j=0  j< ytd.size()  ++j
								{
									loop info: Size dIt=0  dIt< testDeltaGrid.size()  ++dIt
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								ytd -> ['[j]']
								yd -> ['[j]']
								-----------------------------------------------
								}
								loop info: Size i=0 i<M.rows() ++i
								{
									loop info: Size j=0 j<M.columns() ++j
									{
									-----------------------------------------------
									array table
									yVec -> ['[j]', '[j]']
									xVec -> ['[i]', '[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0 i<M1.rows() ++i
								{
									loop info: Size j=0 j<M1.columns() ++j
									{
									-----------------------------------------------
									array table
									yVec1 -> ['[j]', '[j]']
									M1 -> ['[i][j]']
									xVec1 -> ['[i]', '[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0 i<M1.rows() ++i
								{
									loop info: Size j=0 j<M1.columns() ++j
									{
									-----------------------------------------------
									array table
									yVec1 -> ['[j]', '[j]']
									M1 -> ['[i][j]']
									xVec1 -> ['[i]', '[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < 100  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < 100  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=5  i < 95  i+=10
								{
									loop info: Size j=5  j < 95  j+=10
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < N  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < N  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < strikes.size()  i++
								{
								-----------------------------------------------
								array table
								volatilities -> ['[i]', '[i]', '[i]']
								strikes -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size j=1  j<methods_.size()  ++j
								{
									loop info: Size i=0  i<LENGTH(vegaWeighted)  ++i
									{
										loop info: Size k_a=0  k_a<LENGTH(isAlphaFixed)  ++k_a
										{
											loop info: Size k_b=0  k_b<1/*LENGTH(isBetaFixed)*/  ++k_b
											{
												loop info: Size k_n=0  k_n<LENGTH(isNuFixed)  ++k_n
												{
													loop info: Size k_r=0  k_r<LENGTH(isRhoFixed)  ++k_r
													{
													-----------------------------------------------
													array table
													methods_ -> ['[j]']
													vegaWeighted -> ['[i]', '[i]', '[i]']
													-----------------------------------------------
													}
 												-----------------------------------------------
												array table
												-----------------------------------------------
												}
 											-----------------------------------------------
											array table
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < 1E6  ++i
								{
									loop info: Size j = 0  j < 4  ++j
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < LENGTH(corr)  ++i
								{
								-----------------------------------------------
								array table
								expectedVol -> ['[i]', '[i]', '[i]']
								corr -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i <= 40  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < LENGTH(types)  ++i
								{
									loop info: Size j=0  j < LENGTH(strike)  ++j
									{
										loop info: Size l=0  l < LENGTH(maturity)  ++l
										{
										-----------------------------------------------
										array table
										strike -> ['[j]', '[j]']
										maturity -> ['[l]', '[l]']
										types -> ['[i]', '[i]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=120  i < 240  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < nrTrails  ++i
								{
									loop info: Size j=1  j < m  ++j
									{
										loop info: Size k=0  k < jointProcess->size()  ++k
										{
										-----------------------------------------------
										array table
										states -> ['[k]']
										path.value -> ['[k][j]', '[k]']
										optionStates -> ['[k]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									states -> ['[2]']
									zeroStat -> ['[j]']
									optionStat -> ['[j]']
									grid -> ['[j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size j=1  j < m  ++j
								{
								-----------------------------------------------
								array table
								zeroStat -> ['[j]']
								optionStat -> ['[j]']
								grid -> ['[j]']
								-----------------------------------------------
								}
								loop info: Size i=0  i <= 40  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < LENGTH(corr)  ++i
								{
									loop info: Size j=0  j < LENGTH(strike)  ++j
									{
									-----------------------------------------------
									array table
									strike -> ['[j]', '[j]']
									corr -> ['[i]', '[i]', '[i]', '[i]', '[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i <= 100  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < LENGTH(corr)  ++i
								{
									loop info: Size j=0  j < LENGTH(strike)  ++j
									{
									-----------------------------------------------
									array table
									strike -> ['[j]', '[j]']
									corr -> ['[i]', '[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i <= 40  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < LENGTH(types)  ++i
								{
									loop info: Size j=0  j < LENGTH(strike)  ++j
									{
									-----------------------------------------------
									array table
									strike -> ['[j]', '[j]']
									types -> ['[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<=maturity  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < maturity  ++i
								{
								-----------------------------------------------
								array table
								redemption -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i < nrTrails  ++i
								{
									loop info: Size j=1  j <= maturity  ++j
									{
										loop info: Size k=0  k < 3  ++k
											{
											-----------------------------------------------
											array table
											states -> ['[k]']
											path.value -> ['[k][j]']
											-----------------------------------------------
											}
										loop info: Size k=0  k < 3  ++k
											{
											-----------------------------------------------
											array table
											states -> ['[k]']
											path.value -> ['[k][j]']
											-----------------------------------------------
											}
 									-----------------------------------------------
									array table
									path.value -> ['[0][j]']
									grid -> ['[j]', '[j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i <= 31  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < LENGTH(corr)  ++i
								{
									loop info: Size j=0  j < LENGTH(strike)  ++j
									{
									-----------------------------------------------
									array table
									strike -> ['[j]', '[j]']
									corr -> ['[i]', '[i]', '[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < LENGTH(corr)  ++i
								{
									loop info: Size j=0  j < LENGTH(strike)  ++j
									{
									-----------------------------------------------
									array table
									strike -> ['[j]', '[j]', '[j]', '[j]']
									corr -> ['[i]', '[i]', '[i]', '[i]', '[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size l=0  l < LENGTH(schemes)  ++l
								{
									loop info: Size i=0  i < LENGTH(controlVariate)  ++i
									{
										loop info: Size u=0  u < LENGTH(listOfTimeStepsPerYear)  ++u
										{
											loop info: Size k=0  k < LENGTH(strikes)  ++k
											{
											-----------------------------------------------
											array table
											strikes -> ['[k]']
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										controlVariate -> ['[i]', '[i]', '[i]']
										listOfTimeStepsPerYear -> ['[u]']
										tolWithOutCV -> ['[l]']
										tolWithCV -> ['[l]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								schemes -> ['[l]']
								-----------------------------------------------
								}
								loop info: Size u=0  u < LENGTH(listOfTimeStepsPerYear)  ++u
								{
									loop info: Size i=0  i < LENGTH(schemes)  ++i
									{
										loop info: Size j=0  j < LENGTH(hestonModels)  ++j
										{
											loop info: Size k=0  k < LENGTH(strikes)  ++k
											{
											-----------------------------------------------
											array table
											strikes -> ['[k]']
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										hestonModels -> ['[j]', '[j]']
										listOfTimeStepsPerYear -> ['[u]']
										schemes -> ['[i]', '[i]']
										tol -> ['[i]', '[i]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < LENGTH(maturities)  ++i
								{
									loop info: Size j=0  j < LENGTH(strikes)  ++j
									{
									-----------------------------------------------
									array table
									strikes -> ['[j]', '[j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								maturities -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i < LENGTH(maturities)  ++i
								{
									loop info: Size j=0  j < LENGTH(strikes)  ++j
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								maturities -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size j=0  j < LENGTH(sigma_v)  ++j
								{
									loop info: Size i=0  i < LENGTH(strikes)  ++i
									{
									-----------------------------------------------
									array table
									expected -> ['[j][i]', '[j][i]']
									sigma_v -> ['[j]']
									strikes -> ['[i]', '[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								sigma_v -> ['[j]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
									loop info: Integer j=0  j < 2  j++
									{
									-----------------------------------------------
									array table
									correlationMatrix -> ['[j][j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size k=0  k<LENGTH(residualTimes)  k++
								{
									loop info: Integer j=0  j < 2  j++
									{
										loop info: Size l=0  l<LENGTH(underlyings1)  l++
										{
											loop info: Size m=0  m<LENGTH(qRates1)  m++
											{
												loop info: Size n=0  n<LENGTH(rRates)  n++
												{
													loop info: Size p=0  p<LENGTH(vols1)  p++
													{
													-----------------------------------------------
													array table
													rRates -> ['[n]']
													vols1 -> ['[p]']
													vols2 -> ['[p]']
													qRates1 -> ['[m]']
													qRates2 -> ['[m]']
													underlyings1 -> ['[l]']
													underlyings2 -> ['[l]']
													-----------------------------------------------
													}
 												-----------------------------------------------
												array table
												-----------------------------------------------
												}
 											-----------------------------------------------
											array table
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									correlationMatrix -> ['[j][j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								residualTimes -> ['[k]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
									loop info: Integer j=0  j < 2  j++
									{
									-----------------------------------------------
									array table
									correlationMatrix -> ['[j][j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Real x=0.0  x < 5.0  x+=0.1
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Real x=0.0  x < 5.0  x+=0.1
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Real x=0.0  x < 5.0  x+=0.1
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=1  i < n  ++i
								{
									loop info: Size j=0  j < n  ++j
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Natural order=0  order < 5  ++order
								{
									loop info: Natural i=0  i < nGridPoints  ++i
										{
										-----------------------------------------------
										array table
										gridPoints -> ['[i]']
										-----------------------------------------------
										}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: i=knownDates.begin()  i!=knownDates.end()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: int i=0  i<40  ++i
								{
								-----------------------------------------------
								array table
								IMMcodes -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: int i = 0  i<120  ++i
								{
								-----------------------------------------------
								array table
								ASXcodes -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: BigInteger i=minDate  i<=maxDate  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=1  i<dates.size()  ++i
								{
								-----------------------------------------------
								array table
								dates -> ['[0]', '[0]', '[i]']
								defaultProbabilities -> ['[i]']
								-----------------------------------------------
								}
								loop info: Integer n=6  n<=10  ++n
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(data)  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: i = 0  i<LENGTH(data)  i++
								{
								-----------------------------------------------
								array table
								weights -> ['[i]']
								data -> ['[i]']
								-----------------------------------------------
								}
								loop info: i=0  i<dimension  i++
								{
								-----------------------------------------------
								array table
								calculated -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: i=0  i<dimension  i++
								{
								-----------------------------------------------
								array table
								calculated -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: i=0  i<dimension  i++
								{
								-----------------------------------------------
								array table
								calculated -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: i=0  i<dimension  i++
								{
								-----------------------------------------------
								array table
								calculated -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: i=0  i<dimension  i++
								{
								-----------------------------------------------
								array table
								calculated -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: i=0  i<dimension  i++
								{
								-----------------------------------------------
								array table
								calculated -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: i=0  i<dimension  i++
								{
								-----------------------------------------------
								array table
								calculated -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<=polynomialDegree_  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<optimizationMethodNb  ++i
								{
								-----------------------------------------------
								array table
								optimizationMethodTypes -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<diff.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<costFunctions_.size()  ++i
								{
									loop info: Size j=0  j<(optimizationMethods_[i]).size()  ++j
									{
										loop info: Size k=0  k<endCriteriaTests  ++k
										{
										-----------------------------------------------
										array table
										optimizationMethods_ -> ['[i][j]', '[i][j]']
										yMinExpected_ -> ['[i]', '[i]', '[i]']
										xMinExpected_ -> ['[i]', '[i]', '[i]']
										endCriterias_ -> ['[i]', '[i]', '[i]', '[i]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									endCriterias_ -> ['[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								initialValues_ -> ['[i]']
								constraints_ -> ['[i]']
								costFunctions_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<x.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<x.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<x.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<x.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < costFunctions.size()  ++i
								{
								-----------------------------------------------
								array table
								minima -> ['[i]', '[i]']
								costFunctions -> ['[i]']
								diffEvolOptimisers -> ['[i]']
								initialValues -> ['[i]']
								constraints -> ['[i]']
								endCriteria -> ['[i]']
								-----------------------------------------------
								}
								loop info: Date d = firstDate  d < endDate  d++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<std::min<Size>(hol.size(), expectedHol.size())  i++
								{
								-----------------------------------------------
								array table
								hol -> ['[i]', '[i]']
								expectedHol -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<std::min<Size>(hol.size(), expectedHol.size())  i++
								{
								-----------------------------------------------
								array table
								hol -> ['[i]', '[i]']
								expectedHol -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: i=0  i<std::min<Size>(hol.size(), expectedHol.size())  i++
								{
								-----------------------------------------------
								array table
								hol -> ['[i]', '[i]']
								expectedHol -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: i=0  i<histClose.size()  i++
								{
								-----------------------------------------------
								array table
								histClose -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<std::min<Size>(hol.size(), expectedHol.size())  i++
								{
								-----------------------------------------------
								array table
								hol -> ['[i]', '[i]']
								expectedHol -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<std::min<Size>(hol.size(), expectedHol.size())  i++
								{
								-----------------------------------------------
								array table
								hol -> ['[i]', '[i]']
								expectedHol -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<std::min<Size>(hol.size(), expectedHol.size())  i++
								{
								-----------------------------------------------
								array table
								hol -> ['[i]', '[i]']
								expectedHol -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<std::min<Size>(hol.size(), expectedHol.size())  i++
								{
								-----------------------------------------------
								array table
								hol -> ['[i]', '[i]']
								expectedHol -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<std::min<Size>(hol.size(), expectedHol.size())  i++
								{
								-----------------------------------------------
								array table
								hol -> ['[i]', '[i]']
								expectedHol -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<std::min<Size>(hol.size(), expectedHol.size())  i++
								{
								-----------------------------------------------
								array table
								hol -> ['[i]', '[i]']
								expectedHol -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<std::min<Size>(hol.size(), expectedHol.size())  i++
								{
								-----------------------------------------------
								array table
								hol -> ['[i]', '[i]']
								expectedHol -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<std::min<Size>(hol.size(), expectedHol.size())  i++
								{
								-----------------------------------------------
								array table
								hol -> ['[i]', '[i]']
								expectedHol -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<std::min<Size>(hol.size(), expectedHol.size())  i++
								{
								-----------------------------------------------
								array table
								hol -> ['[i]', '[i]']
								expectedHol -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<std::min<Size>(hol.size(), expectedHol.size())  i++
								{
								-----------------------------------------------
								array table
								hol -> ['[i]', '[i]']
								expectedHol -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<std::min<Size>(hol.size(), expectedHol.size())  i++
								{
								-----------------------------------------------
								array table
								hol -> ['[i]', '[i]']
								expectedHol -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=1  i<testDates.size()  i++
								{
								-----------------------------------------------
								array table
								testDates -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i < LENGTH(strikes)  ++i
								{
								-----------------------------------------------
								array table
								expected -> ['[i]', '[i]']
								strikes -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i < LENGTH(strikes)  ++i
								{
								-----------------------------------------------
								array table
								strikes -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size l=0  l < LENGTH(schemes)  ++l
								{
									loop info: Size i=0  i < LENGTH(values)  ++i
									{
										loop info: Size j=0  j < LENGTH(tn)  ++j
										{
											loop info: Size k=0  k < LENGTH(v0)  ++k
											{
											-----------------------------------------------
											array table
											v0 -> ['[k]']
											tn -> ['[j]']
											schemes -> ['[l]']
											values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Time t=dt  t <= maturity+20*QL_EPSILON  t+=dt
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < x.size()  ++i
								{
								-----------------------------------------------
								array table
								payoffTimesDensity -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i < LENGTH(strikes)  ++i
								{
								-----------------------------------------------
								array table
								strikes -> ['[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i < 5  ++i
								{
								-----------------------------------------------
								array table
								expected -> ['[i][0]', '[i][1]', '[i][2]', '[i][3]', '[i][4]']
								-----------------------------------------------
								}
								loop info: Size i=0  i < vGrid  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < v.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < vGrid/2  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Real sigma = 0.2  sigma < 2.01  sigma+=0.1
								{
									loop info: Size i=0  i < v.size()  ++i
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
									loop info: Size i=1  i <= n  ++i
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < p.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Time t=(n+1)*dt  t <= maturity+20*QL_EPSILON  t+=dt
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < x.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < tGrid  ++i, t+=dt
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < LENGTH(strikes)  ++i
								{
								-----------------------------------------------
								array table
								strikes -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(processes)  i++
								{
									loop info: Size j=0  j<LENGTH(options)  j++
									{
									-----------------------------------------------
									array table
									processes -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
									options -> ['[j]', '[j]', '[j]']
									results -> ['[i][j]']
									-----------------------------------------------
									}
									loop info: Size j=0  j<LENGTH(options)  j++
									{
									-----------------------------------------------
									array table
									processes -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
									optionList -> ['[j]']
									results -> ['[i][j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								processes -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=1  i<nbRates_+2  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<nbRates_  ++i
								{
								-----------------------------------------------
								array table
								accruals_ -> ['[i]', '[i]']
								discountFactors_ -> ['[i]']
								forwards_ -> ['[i]', '[i]']
								rateTimes_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < volatilities_.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < payoffs.size()  ++i
								{
								-----------------------------------------------
								array table
								payoffs -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i < nbRates  ++i
								{
								-----------------------------------------------
								array table
								coinitialJacobian -> ['[i][j]']
								bumpedForwards -> ['[j]', '[j]']
								-----------------------------------------------
								}
								loop info: Size i=0  i < nbRates  ++i
								{
								-----------------------------------------------
								array table
								modelJacobian -> ['[i][j]']
								coinitialJacobian -> ['[i][j]']
								-----------------------------------------------
								}
								loop info:  Size spanningForwards = 1  spanningForwards < nbRates  ++spanningForwards
								{
									loop info: Size i=0  i < nbRates  ++i
									{
									-----------------------------------------------
									array table
									cmsJacobian -> ['[i][j]']
									bumpedForwards -> ['[j]', '[j]']
									-----------------------------------------------
									}
									loop info: Size i=0  i < nbRates  ++i
									{
									-----------------------------------------------
									array table
									modelJacobian -> ['[i][j]']
									cmsJacobian -> ['[i][j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<nbRates  ++i
								{
								-----------------------------------------------
								array table
								errors -> ['[i]', '[i]']
								cotSwapsCovariance -> ['[i][i]']
								todaysCoterminalSwapRates -> ['[i]']
								results -> ['[i]', '[i]', '[i]']
								todaysDiscounts -> ['[i]']
								rateTimes -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size startIndex = 1  startIndex+2 < nbRates  startIndex = startIndex+5
								{
								-----------------------------------------------
								array table
								errors -> ['[0]', '[0]']
								results -> ['[0]', '[0]']
								-----------------------------------------------
								}
								loop info: Integer i=0  i<3  i++
								{
								-----------------------------------------------
								array table
								funcs -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Integer i=0  i<3  i++
								{
								-----------------------------------------------
								array table
								funcs -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i< LENGTH(vols)  i++
								{
									loop info: Size j=0  j<LENGTH(strikes)  j++
									{
										loop info: Size k=9  k<10  k++
										{
											loop info: Size h=0  h<LENGTH(gearings)  h++
											{
											-----------------------------------------------
											array table
											spreads -> ['[h]']
											gearings -> ['[h]']
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									strikes -> ['[j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								vols -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size k = 0  k<10  k++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size k = 0  k<10  k++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i< LENGTH(vols)  i++
								{
									loop info: Size j = 0  j< LENGTH(strikes)  j++
									{
										loop info: Size k = 0  k<10  k++
										{
										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									strikes -> ['[j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								vols -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size k = 0  k<10  k++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size k = 0  k<10  k++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i< LENGTH(vols)  i++
								{
									loop info: Size j = 0  j< LENGTH(strikes)  j++
									{
										loop info: Size k = 0  k<10  k++
										{
										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									strikes -> ['[j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								vols -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i< LENGTH(vols)  i++
								{
									loop info: Size j = 0  j< LENGTH(strikes)  j++
									{
										loop info: Size k = 0  k<10  k++
										{
										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									strikes -> ['[j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								vols -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < optionTenors.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<optionTenors.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < optionTenors.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size j = 0  j < strikes.size()  ++j
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<optionTenors.size()  ++i
								{
								-----------------------------------------------
								array table
								atmTermVolHandle -> ['[i]']
								atmTermV -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size tenorIndex=0  tenorIndex<vars.optionTenors.size()  ++tenorIndex
								{
									loop info: Size strikeIndex=0  strikeIndex<vars.strikes.size()  ++strikeIndex
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size tenorIndex=0  tenorIndex<vars.optionTenors.size()  ++tenorIndex
								{
									loop info: Size strikeIndex=0  strikeIndex<vars.strikes.size()  ++strikeIndex
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size strikeIndex=0  strikeIndex<vars.strikes.size()  ++strikeIndex
								{
									loop info: Size tenorIndex=0  tenorIndex<vars.optionTenors.size()  ++tenorIndex
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size strikeIndex=0  strikeIndex<vars.strikes.size()  ++strikeIndex
								{
									loop info: Size tenorIndex=0  tenorIndex<vars.optionTenors.size()  ++tenorIndex
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<5  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(lengths)  i++
								{
									loop info: Size j=0  j<LENGTH(spreads)  j++
									{
									-----------------------------------------------
									array table
									lengths -> ['[i]', '[i]', '[i]']
									spreads -> ['[j]', '[j]', '[j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(lengths)  i++
								{
									loop info: Size j=0  j<LENGTH(rates)  j++
									{
									-----------------------------------------------
									array table
									lengths -> ['[i]', '[i]', '[i]']
									rates -> ['[j]', '[j]', '[j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < LENGTH(depositData)  i++
								{
								-----------------------------------------------
								array table
								depositData -> ['[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < LENGTH(fraData)  i++
								{
								-----------------------------------------------
								array table
								fraData -> ['[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < LENGTH(eoniaSwapData)  i++
								{
								-----------------------------------------------
								array table
								eoniaSwapData -> ['[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < LENGTH(swapData)  i++
								{
								-----------------------------------------------
								array table
								swapData -> ['[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < LENGTH(eoniaSwapData)  i++
								{
								-----------------------------------------------
								array table
								eoniaSwapData -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 1  i <= 10  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<m.rows()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size k=0  k<LENGTH(testMatrices)  k++
								{
									loop info: Size i=0  i<N  i++
									{
										loop info: Size j=0  j<N  j++
										{
										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									eigenValues -> ['[i]', '[i]', '[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								testMatrices -> ['[k]']
								-----------------------------------------------
								}
								loop info: Size j = 0  j < LENGTH(testMatrices)  j++
								{
									loop info: Size i=0  i < S.rows()  i++
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								testMatrices -> ['[j]']
								-----------------------------------------------
								}
								loop info: Size j = 0  j < LENGTH(testMatrices)  j++
								{
									loop info: Size i=0  i < P.columns()  ++i
									{
									-----------------------------------------------
									array table
									ipvt -> ['[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								testMatrices -> ['[j]']
								-----------------------------------------------
								}
								loop info: Size i=0  i < std::min(bigM.rows(), bigM.columns())  ++i
								{
								-----------------------------------------------
								array table
								bigM -> ['[i][i]']
								-----------------------------------------------
								}
								loop info: Size j = 0  j < LENGTH(testMatrices)  j++
								{
									loop info: Size k=0  k < 10  ++k
									{
										loop info: Array::iterator iter = b.begin()  iter != b.end()  ++iter
										{
										-----------------------------------------------
										array table
										-----------------------------------------------
										}
										loop info: Size i=0  i<n  ++i
											{
												loop info: Size j=0  j<n  ++j
													{
													-----------------------------------------------
													array table
													xr -> ['[j]']
													-----------------------------------------------
													}
 											-----------------------------------------------
											array table
											-----------------------------------------------
											}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								testMatrices -> ['[j]']
								-----------------------------------------------
								}
								loop info: Size j = 0  j < LENGTH(testMatrices)  j++
								{
									loop info: Size i=0  i < A.rows()  ++i
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								testMatrices -> ['[j]']
								-----------------------------------------------
								}
								loop info: Size j=0  j<LENGTH(testMatrices)  ++j
								{
								-----------------------------------------------
								array table
								expected -> ['[j]', '[j]']
								testMatrices -> ['[j]', '[j]']
								-----------------------------------------------
								}
								loop info: Size j=0  j<100  ++j
								{
									loop info: Matrix::iterator iter = m.begin()  iter != m.end()  ++iter
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < numberVectors  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < numberVectors  ++i
								{
									loop info: Size j=0  j < numberVectors  ++j
										{
											loop info: Size k=0  k < dimension  ++k
											{
											-----------------------------------------------
											array table
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										-----------------------------------------------
										}
									loop info: Size j=0  j < dimension  ++j
										{
										-----------------------------------------------
										array table
										test -> ['[i][j]', '[i][j]', '[i][j]']
										-----------------------------------------------
										}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: i=0  i<size  ++i
								{
								-----------------------------------------------
								array table
								a3 -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: i=0  i<size  i++
								{
								-----------------------------------------------
								array table
								a4 -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: i=0  i<a3.size()  i++
								{
								-----------------------------------------------
								array table
								a3 -> ['[i]', '[i]']
								a6 -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: i=0  i<size  i++
								{
								-----------------------------------------------
								array table
								temp2 -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: i=0  i<size  i++
								{
								-----------------------------------------------
								array table
								a7 -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: i=0  i<a7.size()  i++
								{
								-----------------------------------------------
								array table
								a8 -> ['[i]', '[i]']
								a7 -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: i=0  i<size  i++
								{
								-----------------------------------------------
								array table
								a9 -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: i=0  i < a10.size()  i++
								{
								-----------------------------------------------
								array table
								a10 -> ['[i]']
								-----------------------------------------------
								}
								loop info: i=0  i < a10.size()  i++
								{
								-----------------------------------------------
								array table
								a10 -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i < a.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < a.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(types)  i++
								{
									loop info: Size j=0  j<LENGTH(strikes)  j++
									{
										loop info: Size jj1=0  jj1<LENGTH(jInt)  jj1++
										{
											loop info: Size jj2=0  jj2<LENGTH(mLJ)  jj2++
											{
												loop info: Size jj3=0  jj3<LENGTH(jV)  jj3++
												{
													loop info: Size k=0  k<LENGTH(residualTimes)  k++
													{
														loop info: Size kk=0  kk<1  kk++
														{
															loop info: Size l=0  l<LENGTH(underlyings)  l++
															{
																loop info: Size m=0  m<LENGTH(qRates)  m++
																{
																	loop info: Size n=0  n<LENGTH(rRates)  n++
																	{
																		loop info: Size p=0  p<LENGTH(vols)  p++
																		{
																		-----------------------------------------------
																		array table
																		vols -> ['[p]']
																		-----------------------------------------------
																		}
 																	-----------------------------------------------
																	array table
																	rRates -> ['[n]']
																	-----------------------------------------------
																	}
 																-----------------------------------------------
																array table
																qRates -> ['[m]']
																-----------------------------------------------
																}
 															-----------------------------------------------
															array table
															underlyings -> ['[l]']
															-----------------------------------------------
															}
 														-----------------------------------------------
														array table
														strikes -> ['[j]', '[j]', '[j]', '[j]']
														types -> ['[i]', '[i]', '[i]', '[i]']
														-----------------------------------------------
														}
 													-----------------------------------------------
													array table
													residualTimes -> ['[k]']
													-----------------------------------------------
													}
 												-----------------------------------------------
												array table
												-----------------------------------------------
												}
 											-----------------------------------------------
											array table
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<atm.tenors.options.size()  ++i
								{
								-----------------------------------------------
								array table
								atm.tenors.options -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size j=0  j<atm.tenors.swaps.size()  j++
								{
									loop info: Size i=0  i<atm.tenors.options.size()  ++i
									{
									-----------------------------------------------
									array table
									atm.vols -> ['[i][j]']
									atm.tenors.options -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
									atm.tenors.swaps -> ['[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								atm.tenors.swaps -> ['[j]', '[j]', '[j]', '[j]', '[j]']
								-----------------------------------------------
								}
								loop info: std::size_t i = 0  i < 50000  ++i, d += 1
								{
								-----------------------------------------------
								array table
								ts -> ['[d]']
								-----------------------------------------------
								}
								loop info: std::size_t i = 0  i < 10  ++i, d += 1
								{
								-----------------------------------------------
								array table
								ts -> ['[d]']
								-----------------------------------------------
								}
								loop info: Size i=1  i<dates.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=1  i<rateTimes.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<todaysForwards.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=1  i<rateTimes.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=1  i<=N  ++i
								{
								-----------------------------------------------
								array table
								todaysDiscounts -> ['[N]', '[N]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < forwards.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < rateTimes.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i<nbRates  ++i
								{
								-----------------------------------------------
								array table
								lmmDrifts -> ['[i]']
								cmsDrifts -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i <nbRates  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < LENGTH(nr)  ++i
								{
								-----------------------------------------------
								array table
								expected -> ['[i]', '[i]', '[i]', '[i]']
								nr -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(data)  i++
								{
								-----------------------------------------------
								array table
								data -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(data)  i++
								{
								-----------------------------------------------
								array table
								data -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(data)  i++
								{
								-----------------------------------------------
								array table
								data -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(start)  i++
								{
									loop info: Size j=0  j<LENGTH(length)  j++
									{
										loop info: Size k=0  k<LENGTH(rates)  k++
										{
										-----------------------------------------------
										array table
										rates -> ['[k]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									length -> ['[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								start -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < lambda.size()  i++
								{
								-----------------------------------------------
								array table
								lambda -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<names  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<names  i++
								{
								-----------------------------------------------
								array table
								probabilities -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<names  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 1  i <= probabilities.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size j = 0  j < LENGTH(hwCorrelation)  j++
								{
									loop info: Size i = 0  i < ntd.size()  i++
									{
									-----------------------------------------------
									array table
									hwData -> ['[i]', '[i]', '[i]', '[i]']
									spread -> ['[j]', '[j]']
									ntd -> ['[i]', '[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								hwCorrelation -> ['[j]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < lambda.size()  i++
								{
								-----------------------------------------------
								array table
								lambda -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<names  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<names  i++
								{
								-----------------------------------------------
								array table
								probabilities -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<names  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 1  i <= probabilities.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < ntd.size()  i++
								{
								-----------------------------------------------
								array table
								hwDataDist -> ['[i]', '[i]', '[i]']
								spread -> ['[0]', '[0]']
								ntd -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < ntd.size()  i++
								{
								-----------------------------------------------
								array table
								hwDataDist -> ['[i]', '[i]', '[i]']
								spread -> ['[3]', '[3]']
								ntd -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(types)  i++
								{
									loop info: Size j=0  j<LENGTH(strikes)  j++
									{
										loop info: Size k=0  k<LENGTH(lengths)  k++
										{
											loop info: Size l=0  l<LENGTH(underlyings)  l++
											{
												loop info: Size m=0  m<LENGTH(qRates)  m++
												{
													loop info: Size n=0  n<LENGTH(rRates)  n++
													{
														loop info: Size p=0  p<LENGTH(vols)  p++
														{
														-----------------------------------------------
														array table
														rRates -> ['[n]']
														underlyings -> ['[l]']
														qRates -> ['[m]']
														vols -> ['[p]']
														-----------------------------------------------
														}
 													-----------------------------------------------
													array table
													-----------------------------------------------
													}
 												-----------------------------------------------
												array table
												-----------------------------------------------
												}
 											-----------------------------------------------
											array table
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										lengths -> ['[k]']
										strikes -> ['[j]']
										types -> ['[i]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(types)  i++
								{
									loop info: Size j=0  j<LENGTH(strikes)  j++
									{
										loop info: Size k=0  k<LENGTH(lengths)  k++
										{
											loop info: Size l=0  l<LENGTH(underlyings)  l++
											{
												loop info: Size m=0  m<LENGTH(qRates)  m++
												{
													loop info: Size n=0  n<LENGTH(rRates)  n++
													{
														loop info: Size p=0  p<LENGTH(vols)  p++
														{
														-----------------------------------------------
														array table
														rRates -> ['[n]']
														underlyings -> ['[l]']
														qRates -> ['[m]']
														vols -> ['[p]']
														-----------------------------------------------
														}
 													-----------------------------------------------
													array table
													-----------------------------------------------
													}
 												-----------------------------------------------
												array table
												-----------------------------------------------
												}
 											-----------------------------------------------
											array table
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										lengths -> ['[k]']
										strikes -> ['[j]']
										types -> ['[i]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(types)  i++
								{
									loop info: Size j=0  j<LENGTH(strikes)  j++
									{
										loop info: Size k=0  k<LENGTH(lengths)  k++
										{
											loop info: Size l=0  l<LENGTH(underlyings)  l++
											{
												loop info: Size m=0  m<LENGTH(qRates)  m++
												{
													loop info: Size n=0  n<LENGTH(rRates)  n++
													{
														loop info: Size p=0  p<LENGTH(vols)  p++
														{
														-----------------------------------------------
														array table
														rRates -> ['[n]']
														underlyings -> ['[l]']
														qRates -> ['[m]']
														vols -> ['[p]']
														-----------------------------------------------
														}
 													-----------------------------------------------
													array table
													-----------------------------------------------
													}
 												-----------------------------------------------
												array table
												-----------------------------------------------
												}
 											-----------------------------------------------
											array table
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										lengths -> ['[k]']
										strikes -> ['[j]', '[j]']
										types -> ['[i]', '[i]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(types)  i++
								{
									loop info: Size j=0  j<LENGTH(strikes)  j++
									{
										loop info: Size k=0  k<LENGTH(lengths)  k++
										{
											loop info: Size l=0  l<LENGTH(underlyings)  l++
											{
												loop info: Size m=0  m<LENGTH(qRates)  m++
												{
													loop info: Size n=0  n<LENGTH(rRates)  n++
													{
														loop info: Size p=0  p<LENGTH(vols)  p++
														{
														-----------------------------------------------
														array table
														rRates -> ['[n]']
														underlyings -> ['[l]']
														qRates -> ['[m]']
														vols -> ['[p]']
														-----------------------------------------------
														}
 													-----------------------------------------------
													array table
													-----------------------------------------------
													}
 												-----------------------------------------------
												array table
												-----------------------------------------------
												}
 											-----------------------------------------------
											array table
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										lengths -> ['[k]']
										strikes -> ['[j]']
										types -> ['[i]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(types)  i++
								{
									loop info: Size j=0  j<LENGTH(strikes)  j++
									{
										loop info: Size k=0  k<LENGTH(lengths)  k++
										{
											loop info: Size l=0  l<LENGTH(underlyings)  l++
											{
												loop info: Size m=0  m<LENGTH(qRates)  m++
												{
													loop info: Size n=0  n<LENGTH(rRates)  n++
													{
														loop info: Size p=0  p<LENGTH(vols)  p++
														{
														-----------------------------------------------
														array table
														rRates -> ['[n]']
														underlyings -> ['[l]']
														qRates -> ['[m]']
														vols -> ['[p]']
														-----------------------------------------------
														}
 													-----------------------------------------------
													array table
													-----------------------------------------------
													}
 												-----------------------------------------------
												array table
												-----------------------------------------------
												}
 											-----------------------------------------------
											array table
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										lengths -> ['[k]']
										strikes -> ['[j]']
										types -> ['[i]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(types)  i++
								{
									loop info: Size j=0  j<LENGTH(strikes)  j++
									{
										loop info: Size l=0  l<LENGTH(underlyings)  l++
										{
											loop info: Size m=0  m<LENGTH(qRates)  m++
											{
												loop info: Size n=0  n<LENGTH(rRates)  n++
												{
													loop info: Size p=0  p<LENGTH(vols)  p++
													{
													-----------------------------------------------
													array table
													rRates -> ['[n]']
													underlyings -> ['[l]']
													qRates -> ['[m]']
													vols -> ['[p]']
													-----------------------------------------------
													}
 												-----------------------------------------------
												array table
												-----------------------------------------------
												}
 											-----------------------------------------------
											array table
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									strikes -> ['[j]']
									types -> ['[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(lengths)  i++
								{
								-----------------------------------------------
								array table
								lengths -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(lengths)  i++
								{
								-----------------------------------------------
								array table
								lengths -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<=6  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size n=0  n < LENGTH(f)  ++n
								{
									loop info: Size i=0  i < LENGTH(discr)-1  ++i
									{
										loop info: Size j=0  j < nTimeSteps  ++j
										{
										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									discr -> ['[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < n  ++i
								{
								-----------------------------------------------
								array table
								dw -> ['[0]', '[1]', '[2]']
								path -> ['[i]']
								-----------------------------------------------
								}
								loop info: Real x=1e-12  x < 1.0  x*=10
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size n=0  n < nrTrails  ++n
								{
								-----------------------------------------------
								array table
								path.value -> ['[0]', '[1]']
								-----------------------------------------------
								}
								loop info: Size i=0  i < exerciseDates.size()  ++i
								{
									loop info: Size j=exerciseDates.size()-i-1  j < exerciseDates.size()  ++j
									{
									-----------------------------------------------
									array table
									exerciseDates -> ['[j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < exerciseTimes.size()  ++i
								{
								-----------------------------------------------
								array table
								exerciseDates -> ['[i]']
								exerciseTimes -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i < exerciseIndex.size()  ++i
								{
								-----------------------------------------------
								array table
								exerciseTimes -> ['[i]']
								exerciseIndex -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i < exerciseDates.size()  ++i
								{
									loop info: Size j=exerciseDates.size()-i-1  j < exerciseDates.size()  ++j
									{
									-----------------------------------------------
									array table
									exerciseDates -> ['[j]']
									-----------------------------------------------
									}
									loop info: Size n=0  n < nrTrails  ++n
									{
										loop info: Size k=0  k < exerciseTimes.size()  ++k
										{
										-----------------------------------------------
										array table
										exerciseDates -> ['[k]']
										path.value -> ['[0]', '[1]']
										exerciseValues -> ['[k]']
										exerciseIndex -> ['[k]', '[k]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(types)  i++
								{
									loop info: Size j=0  j<LENGTH(strikes)  j++
									{
										loop info: Size k=0  k<LENGTH(lengths)  k++
										{
											loop info: Size l=0  l<LENGTH(underlyings)  l++
											{
												loop info: Size m=0  m<LENGTH(qRates)  m++
												{
													loop info: Size n=0  n<LENGTH(rRates)  n++
													{
														loop info: Size p=0  p<LENGTH(vols)  p++
														{
															loop info: Size a=0  a<LENGTH(rRates)  a++
															{
																loop info: Size b=0  b<LENGTH(vols)  b++
																{
																	loop info: Size c=0  c<LENGTH(correlations)  c++
																	{
																	-----------------------------------------------
																	array table
																	rRates -> ['[n]', '[a]']
																	underlyings -> ['[l]']
																	qRates -> ['[m]']
																	vols -> ['[p]', '[b]']
																	correlations -> ['[c]']
																	-----------------------------------------------
																	}
 																-----------------------------------------------
																array table
																-----------------------------------------------
																}
 															-----------------------------------------------
															array table
															-----------------------------------------------
															}
 														-----------------------------------------------
														array table
														-----------------------------------------------
														}
 													-----------------------------------------------
													array table
													-----------------------------------------------
													}
 												-----------------------------------------------
												array table
												-----------------------------------------------
												}
 											-----------------------------------------------
											array table
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										lengths -> ['[k]']
										strikes -> ['[j]']
										types -> ['[i]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(types)  i++
								{
									loop info: Size j=0  j<LENGTH(moneyness)  j++
									{
										loop info: Size k=0  k<LENGTH(lengths)  k++
										{
											loop info: Size h=0  h<LENGTH(startMonths)  h++
											{
												loop info: Size l=0  l<LENGTH(underlyings)  l++
												{
													loop info: Size m=0  m<LENGTH(qRates)  m++
													{
														loop info: Size n=0  n<LENGTH(rRates)  n++
														{
															loop info: Size p=0  p<LENGTH(vols)  p++
															{
																loop info: Size a=0  a<LENGTH(rRates)  a++
																{
																	loop info: Size b=0  b<LENGTH(vols)  b++
																	{
																		loop info: Size c=0  c<LENGTH(correlations)  c++
																		{
																		-----------------------------------------------
																		array table
																		rRates -> ['[n]', '[a]']
																		correlations -> ['[c]']
																		qRates -> ['[m]']
																		underlyings -> ['[l]']
																		vols -> ['[p]', '[b]']
																		moneyness -> ['[j]']
																		-----------------------------------------------
																		}
 																	-----------------------------------------------
																	array table
																	-----------------------------------------------
																	}
 																-----------------------------------------------
																array table
																-----------------------------------------------
																}
 															-----------------------------------------------
															array table
															-----------------------------------------------
															}
 														-----------------------------------------------
														array table
														-----------------------------------------------
														}
 													-----------------------------------------------
													array table
													-----------------------------------------------
													}
 												-----------------------------------------------
												array table
												-----------------------------------------------
												}
 											-----------------------------------------------
											array table
											lengths -> ['[k]']
											startMonths -> ['[h]']
											moneyness -> ['[j]']
											types -> ['[i]']
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(lengths)  i++
								{
									loop info: Size j=0  j<LENGTH(spreads)  j++
									{
									-----------------------------------------------
									array table
									lengths -> ['[i]', '[i]', '[i]']
									spreads -> ['[j]', '[j]', '[j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(lengths)  i++
								{
									loop info: Size j=0  j<LENGTH(rates)  j++
									{
									-----------------------------------------------
									array table
									lengths -> ['[i]', '[i]', '[i]']
									rates -> ['[j]', '[j]', '[j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(lengths)  i++
								{
									loop info: Size j=0  j<LENGTH(spreads)  j++
									{
										loop info: Size k=0  k<LENGTH(rates)  k++
										{
										-----------------------------------------------
										array table
										lengths -> ['[i]']
										spreads -> ['[j]']
										rates -> ['[k]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									lengths -> ['[i]']
									rates -> ['[n]']
									swap_values -> ['[n]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(lengths)  i++
								{
									loop info: Size j=0  j<LENGTH(rates)  j++
									{
										loop info: Size k=0  k<LENGTH(spreads)  k++
										{
										-----------------------------------------------
										array table
										lengths -> ['[i]']
										spreads -> ['[k]']
										rates -> ['[j]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									lengths -> ['[i]']
									spreads -> ['[n]']
									swap_values -> ['[n]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < options.size()  ++i
								{
								-----------------------------------------------
								array table
								options -> ['[i]']
								-----------------------------------------------
								}
								loop info: Integer i=1  i<=5  i+=2
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < LENGTH(hestonModels)  ++i
								{
								-----------------------------------------------
								array table
								hestonModels -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < 8  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size s = 0  s < 13  ++s
								{
									loop info: Size m = 0  m < 8  ++m
									{
									-----------------------------------------------
									array table
									strike -> ['[s]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < pricingEngines.size()  ++i
								{
									loop info: Size j = 0  j < options.size()  ++j
									{
									-----------------------------------------------
									array table
									pricingEngines -> ['[i]']
									options -> ['[j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								expectedValues -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(accuracy)  i++
								{
								-----------------------------------------------
								array table
								accuracy -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(accuracy)  i++
								{
								-----------------------------------------------
								array table
								accuracy -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<4  ++i
								{
								-----------------------------------------------
								array table
								maxs -> ['[i]']
								mins -> ['[i]']
								guesses -> ['[i]', '[i]']
								steps -> ['[i]']
								offsets -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i < len  ++i
								{
								-----------------------------------------------
								array table
								vols -> ['[i]']
								-----------------------------------------------
								}
								loop info: Integer daysOffset=0  daysOffset < 1825 /* 5 year*/  daysOffset+=8
								{
									loop info: Size i=1  i < fixings.size()-1  ++i
									{
									-----------------------------------------------
									array table
									fixings -> ['[i]', '[i]', '[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<9  ++i
								{
								-----------------------------------------------
								array table
								lambdaExpected -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size t=0  t<grid.size()  ++t
								{
									loop info: Size i=0  i<diff.rows()  ++i
									{
										loop info: Size j=0  j<diff.columns()  ++j
										{
										-----------------------------------------------
										array table
										diff -> ['[i][j]', '[i][j]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								grid -> ['[t]', '[t]']
								-----------------------------------------------
								}
								loop info: i=0  i < tmp.size()  ++i
								{
								-----------------------------------------------
								array table
								tmp -> ['[i]']
								-----------------------------------------------
								}
								loop info: i=0  i<nrTrails  ++i
								{
									loop info: Size j=0  j<process1->size()  ++j
									{
									-----------------------------------------------
									array table
									path1.value -> ['[j]']
									path2.value -> ['[j]']
									rates1 -> ['[j]']
									location -> ['[j]', '[j]']
									rates2 -> ['[j]']
									-----------------------------------------------
									}
									loop info: Size k=0  k<process1->size()  ++k
									{
									-----------------------------------------------
									array table
									dis1 -> ['[k]']
									dis2 -> ['[k]', '[k]']
									rates1 -> ['[k]']
									stat2 -> ['[k]']
									stat1 -> ['[k]']
									rates2 -> ['[k]', '[k]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size k=0  k < process1->size()  ++k
								{
								-----------------------------------------------
								array table
								capletNpv -> ['[k]']
								stat2 -> ['[k]', '[k]']
								stat1 -> ['[k]', '[k]']
								-----------------------------------------------
								}
								loop info: int i = 0  i < 10 + 15 + 35  i++
								{
								-----------------------------------------------
								array table
								q6mh -> ['[i]']
								-----------------------------------------------
								}
								loop info: int i = 0  i < 10  i++
								{
								-----------------------------------------------
								array table
								q6m -> ['[i]']
								q6mh1 -> ['[i]']
								-----------------------------------------------
								}
								loop info: int i = 0  i < 18  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: int i = 0  i < 15 + 35  i++
								{
								-----------------------------------------------
								array table
								q6mh2 -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < 20  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < 14  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: int i = 0  i < 20  i++
								{
									loop info: int j = 0  j < 14  j++
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < 6  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < 5  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < 9  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: int i = 0  i < 30  i++
								{
									loop info: int j = 0  j < 9  j++
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: int i = 0  i < 30  i++
								{
									loop info: int j = 0  j < 4  j++
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < nOptTen  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < nStrikes  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < nStrikes  i++
								{
									loop info: Size j = 0  j < nOptTen  j++
									{
									-----------------------------------------------
									array table
									volsa -> ['[i][j]']
									vols -> ['[j][i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: int i = 1  i <= 5  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < prices.size()  i++
								{
								-----------------------------------------------
								array table
								prices -> ['[i]']
								strikes -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < strikes.size()  i++
								{
								-----------------------------------------------
								array table
								strikes -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 1  i < strikes.size()  i++
								{
								-----------------------------------------------
								array table
								strikes -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < outputs1.expiries_.size()  i++
								{
								-----------------------------------------------
								array table
								outputs1.marketZerorate_ -> ['[i]', '[i]']
								outputs1.modelZerorate_ -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < outputs1.expiries_.size()  i++
								{
									loop info: Size j = 0  j < outputs1.smileStrikes_[i].size()  j++
									{
									-----------------------------------------------
									array table
									outputs1.marketCallPremium_ -> ['[i][j]', '[i][j]']
									outputs1.modelPutPremium_ -> ['[i][j]', '[i][j]']
									outputs1.modelCallPremium_ -> ['[i][j]', '[i][j]']
									outputs1.marketPutPremium_ -> ['[i][j]', '[i][j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < outputs2.expiries_.size()  i++
								{
								-----------------------------------------------
								array table
								outputs2.modelZerorate_ -> ['[i]', '[i]']
								outputs2.marketZerorate_ -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < outputs2.expiries_.size()  i++
								{
									loop info: Size j = 0  j < outputs2.smileStrikes_[i].size()  j++
									{
									-----------------------------------------------
									array table
									outputs2.modelPutPremium_ -> ['[i][j]', '[i][j]']
									outputs2.marketCallPremium_ -> ['[i][j]', '[i][j]']
									outputs2.modelCallPremium_ -> ['[i][j]', '[i][j]']
									outputs2.marketPutPremium_ -> ['[i][j]', '[i][j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < outputs3.expiries_.size()  i++
								{
								-----------------------------------------------
								array table
								outputs3.marketZerorate_ -> ['[i]', '[i]']
								outputs3.modelZerorate_ -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < outputs3.expiries_.size()  i++
								{
									loop info: Size j = 0  j < outputs3.smileStrikes_[i].size()  j++
									{
									-----------------------------------------------
									array table
									outputs3.marketCallPremium_ -> ['[i][j]', '[i][j]']
									outputs3.modelCallPremium_ -> ['[i][j]', '[i][j]']
									outputs3.marketPutPremium_ -> ['[i][j]', '[i][j]']
									outputs3.modelPutPremium_ -> ['[i][j]', '[i][j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < outputs4.expiries_.size()  i++
								{
								-----------------------------------------------
								array table
								outputs4.marketZerorate_ -> ['[i]', '[i]']
								outputs4.modelZerorate_ -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < outputs4.expiries_.size()  i++
								{
									loop info: Size j = 0  j < outputs4.smileStrikes_[i].size()  j++
									{
									-----------------------------------------------
									array table
									outputs4.marketCallPremium_ -> ['[i][j]', '[i][j]']
									outputs4.marketPutPremium_ -> ['[i][j]', '[i][j]']
									outputs4.modelCallPremium_ -> ['[i][j]', '[i][j]']
									outputs4.modelPutPremium_ -> ['[i][j]', '[i][j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < outputs1.expiries_.size()  i++
								{
									loop info: Size j = 0  j < outputs1.smileStrikes_[0].size()  j++
									{
									-----------------------------------------------
									array table
									outputs1.tenors_ -> ['[i]', '[i]']
									outputs1.expiries_ -> ['[i]', '[i]', '[i]']
									outputs1.smileStrikes_ -> ['[i][j]', '[i][j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < c2.size()  i++
								{
								-----------------------------------------------
								array table
								c2 -> ['[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < outputs3.expiries_.size()  i++
								{
									loop info: Size j = 0  j < outputs3.smileStrikes_[0].size()  j++
									{
									-----------------------------------------------
									array table
									outputs3.marketPutPremium_ -> ['[i][j]']
									outputs3.expiries_ -> ['[i]', '[i]', '[i]']
									outputs3.tenors_ -> ['[i]', '[i]']
									outputs3.marketRawCallPremium_ -> ['[i][j]']
									outputs3.smileStrikes_ -> ['[i][j]', '[i][j]']
									outputs3.marketRawPutPremium_ -> ['[i][j]']
									outputs3.marketCallPremium_ -> ['[i][j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < c4.size()  i++
								{
								-----------------------------------------------
								array table
								c4 -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < ch1.size()  i++
								{
								-----------------------------------------------
								array table
								ch1 -> ['[i]', '[i]', '[i]', '[i]', '[i]']
								calibrationHelperVols1 -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < ch2.size()  i++
								{
								-----------------------------------------------
								array table
								ch2 -> ['[i]', '[i]', '[i]', '[i]', '[i]']
								calibrationHelperVols2 -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < expiries.size()  i++
								{
								-----------------------------------------------
								array table
								expiries -> ['[i]']
								europeanExercises -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < expiries.size()  i++
								{
								-----------------------------------------------
								array table
								europeanSwaptions -> ['[i]']
								cachedValues -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size k=0  k < dim[0]  ++k
								{
									loop info: Size l=0  l < dim[1]  ++l
									{
										loop info: Size m=0  m < dim[2]  ++m
										{
										-----------------------------------------------
										array table
										tmp -> ['[0]', '[1]', '[2]']
										dim -> ['[0]', '[0]', '[1]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size m=0  m < dim[2]  ++m
								{
									loop info: Size l=0  l < dim[1]  ++l
									{
										loop info: Size k=0  k < dim[0]  ++k, ++iter
										{
											loop info: Size n=1  n < 4  ++n
											{
											-----------------------------------------------
											array table
											dim -> ['[0]', '[1]', '[1]', '[1]', '[1]', '[0]']
											-----------------------------------------------
											}
											loop info: Size n=1  n < 7  ++n
											{
											-----------------------------------------------
											array table
											dim -> ['[0]', '[0]', '[1]']
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: FdmLinearOpIterator iter = index->begin()  iter != endIter  ++iter
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: FdmLinearOpIterator iter = index->begin()  iter != endIter  ++iter
								{
								-----------------------------------------------
								array table
								boundaries -> ['[2]', '[2]', '[2]', '[2]', '[2]', '[2]']
								dims -> ['[2]', '[2]']
								dim -> ['[2]']
								-----------------------------------------------
								}
								loop info: FdmLinearOpIterator iter = index->begin()  iter != endIter  ++iter
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: FdmLinearOpIterator iter = index->begin()  iter != endIter  ++iter
								{
								-----------------------------------------------
								array table
								dims -> ['[0]']
								-----------------------------------------------
								}
								loop info: FdmLinearOpIterator iter = index->begin()  iter != endIter  ++iter
								{
								-----------------------------------------------
								array table
								dims -> ['[1]']
								-----------------------------------------------
								}
								loop info: FdmLinearOpIterator iter = index->begin()  iter != endIter  ++iter
								{
								-----------------------------------------------
								array table
								dims -> ['[2]']
								-----------------------------------------------
								}
								loop info: Size direction=0  direction < 3  ++direction
								{
								-----------------------------------------------
								array table
								threePoints -> ['[0]', '[1]', '[2]']
								twoPoints -> ['[0]', '[1]', '[0]', '[1]']
								-----------------------------------------------
								}
								loop info: FdmLinearOpIterator iter = index->begin()  iter != endIter  ++iter
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: FdmLinearOpIterator iter = index->begin()  iter != endIter  ++iter
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: FdmLinearOpIterator iter = index->begin()  iter != endIter  ++iter
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: FdmLinearOpIterator iter = index->begin()  iter != endIter  ++iter
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < layout->size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < u.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < u.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < u.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < u.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < dims[0]  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < dims[0]  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i <= 25  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size k=0  k < dim[2]  ++k
								{
									loop info: Size i=0  i < dim[0]  ++i
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								dim -> ['[0]', '[1]']
								-----------------------------------------------
								}
								loop info: Size i=0  i < n  ++i
								{
									loop info: Size j=0  j < m  ++j
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < b.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < v.size()  ++i
								{
									loop info: Size j=0  j < nElements  ++j
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < rows  ++i
								{
									loop info: Size j=0  j < columns  ++j
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < curve.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: size_t i = 0  i<8  i++
								{
								-----------------------------------------------
								array table
								expected -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<nFrq  ++i
								{
								-----------------------------------------------
								array table
								tmp -> ['[i]']
								ft -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: size_t i=0  i<PATHS  ++i
								{
									loop info: size_t j=0  j<path.size()  ++j
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(types)  i++
								{
									loop info: Size j=0  j<LENGTH(strikes)  j++
									{
										loop info: Size k=0  k<LENGTH(residualTimes)  k++
										{
											loop info: Size kk=0  kk<4  kk++
											{
												loop info: Size l=0  l<LENGTH(underlyings)  l++
												{
													loop info: Size m=0  m<LENGTH(qRates)  m++
													{
														loop info: Size n=0  n<LENGTH(rRates)  n++
														{
															loop info: Size p=0  p<LENGTH(vols)  p++
															{
															-----------------------------------------------
															array table
															rRates -> ['[n]']
															underlyings -> ['[l]']
															qRates -> ['[m]']
															vols -> ['[p]']
															-----------------------------------------------
															}
 														-----------------------------------------------
														array table
														-----------------------------------------------
														}
 													-----------------------------------------------
													array table
													-----------------------------------------------
													}
 												-----------------------------------------------
												array table
												-----------------------------------------------
												}
 											-----------------------------------------------
											array table
											strikes -> ['[j]', '[j]', '[j]', '[j]']
											types -> ['[i]', '[i]', '[i]', '[i]']
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										residualTimes -> ['[k]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(types)  i++
								{
									loop info: Size j=0  j<LENGTH(strikes)  j++
									{
										loop info: Size k=0  k<LENGTH(lengths)  k++
										{
											loop info: Size l=0  l<LENGTH(underlyings)  l++
											{
												loop info: Size m=0  m<LENGTH(qRates)  m++
												{
													loop info: Size n=0  n<LENGTH(rRates)  n++
													{
														loop info: Size p=0  p<LENGTH(vols)  p++
														{
														-----------------------------------------------
														array table
														rRates -> ['[n]']
														qRates -> ['[m]']
														strikes -> ['[j]', '[j]']
														underlyings -> ['[l]']
														vols -> ['[p]']
														types -> ['[i]', '[i]']
														-----------------------------------------------
														}
 													-----------------------------------------------
													array table
													-----------------------------------------------
													}
 												-----------------------------------------------
												array table
												-----------------------------------------------
												}
 											-----------------------------------------------
											array table
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										lengths -> ['[k]']
										strikes -> ['[j]']
										types -> ['[i]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(types)  i++
								{
									loop info: Size j=0  j<LENGTH(strikes)  j++
									{
										loop info: Size k=0  k<LENGTH(lengths)  k++
										{
											loop info: Size l=0  l<LENGTH(underlyings)  l++
											{
												loop info: Size m=0  m<LENGTH(qRates)  m++
												{
													loop info: Size n=0  n<LENGTH(rRates)  n++
													{
														loop info: Size p=0  p<LENGTH(vols)  p++
														{
														-----------------------------------------------
														array table
														rRates -> ['[n]']
														underlyings -> ['[l]']
														qRates -> ['[m]']
														vols -> ['[p]']
														-----------------------------------------------
														}
 													-----------------------------------------------
													array table
													-----------------------------------------------
													}
 												-----------------------------------------------
												array table
												-----------------------------------------------
												}
 											-----------------------------------------------
											array table
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										lengths -> ['[k]']
										strikes -> ['[j]']
										types -> ['[i]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
									loop info: Size i=start  i < end  i++
									{
									-----------------------------------------------
									array table
									values -> ['[i]', '[i]', '[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < 8  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < strikes.size()  ++i
								{
								-----------------------------------------------
								array table
								blackVolMatrix -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=2  i < dates.size()  ++i
								{
									loop info: Size j=3  j < strikes.size()-5  j+=5
									{
									-----------------------------------------------
									array table
									dates -> ['[i]']
									strikes -> ['[j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<samples  ++i
								{
									loop info: Size j=1  j<N  ++j
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								temp -> ['[0]', '[0]']
								times -> ['[0]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<N  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<N  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<samples  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < numberBatches  ++i
								{
									loop info: Size j=0  j < N  ++j
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < maxDim  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < maxDim  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: i=0  i<points  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Integer j=1  j<5  j++
								{
									loop info:   k<points  k++
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
									loop info: i=0  i<dimensionality  i++
									{
									-----------------------------------------------
									array table
									mean -> ['[i]', '[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: i=0  i<points  i++
								{
								-----------------------------------------------
								array table
								vanderCorputSequenceModuloTwo -> ['[i]', '[i]']
								point -> ['[0]', '[0]']
								-----------------------------------------------
								}
								loop info: i=0  i<points  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: i=0  i<points  i++
								{
								-----------------------------------------------
								array table
								vanderCorputSequenceModuloTwo -> ['[i]', '[i]']
								point -> ['[0]', '[0]']
								-----------------------------------------------
								}
								loop info: i=0  i<points  i++
								{
								-----------------------------------------------
								array table
								FaureDimensionTwoOfTwo -> ['[i]', '[i]']
								vanderCorputSequenceModuloTwo -> ['[i]', '[i]']
								point -> ['[0]', '[0]', '[1]', '[1]']
								-----------------------------------------------
								}
								loop info: i=0  i<points  i++
								{
								-----------------------------------------------
								array table
								FaureDimensionTwoOfThree -> ['[i]', '[i]']
								FaureDimensionOneOfThree -> ['[i]', '[i]']
								FaureDimensionThreeOfThree -> ['[i]', '[i]']
								point -> ['[0]', '[0]', '[1]', '[1]', '[2]', '[2]']
								-----------------------------------------------
								}
								loop info: i=0  i<points  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: i=0  i<points  i++
								{
								-----------------------------------------------
								array table
								vanderCorputSequenceModuloTwo -> ['[i]', '[i]']
								point -> ['[0]', '[0]']
								-----------------------------------------------
								}
								loop info: i=0  i<points  i++
								{
								-----------------------------------------------
								array table
								vanderCorputSequenceModuloThree -> ['[i]', '[i]']
								vanderCorputSequenceModuloTwo -> ['[i]', '[i]']
								point -> ['[0]', '[0]', '[1]', '[1]']
								-----------------------------------------------
								}
								loop info: j=1  j<5  j++
								{
									loop info:   k<points  k++
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								mean -> ['[0]', '[0]']
								-----------------------------------------------
								}
								loop info: j=1  j<3  j++
								{
									loop info:   k<points  k++
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								mean -> ['[1]', '[1]']
								-----------------------------------------------
								}
								loop info: Integer i = 0  i<8  i++
								{
									loop info: j=jMin  j<jMin+sampleLoops  j++
										{
											loop info:   k<points  k++
											{
											-----------------------------------------------
											array table
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										dimensionality -> ['[i]']
										discrepancy -> ['[i]', '[i]']
										-----------------------------------------------
										}
 								-----------------------------------------------
								array table
								dimensionality -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(integers)  i++
								{
									loop info: Size j=0  j<LENGTH(dimensionality)  j++
									{
										loop info: Size k=0  k<LENGTH(skip)  k++
										{
											loop info: Size l=0  l<skip[k]  l++
											{
											-----------------------------------------------
											array table
											-----------------------------------------------
											}
											loop info: Size m=0  m<100  m++
											{
												loop info: Size n=0  n<s1.size()  n++
												{
												-----------------------------------------------
												array table
												s2 -> ['[n]', '[n]']
												s1 -> ['[n]', '[n]']
												dimensionality -> ['[j]']
												skip -> ['[k]']
												integers -> ['[i]']
												-----------------------------------------------
												}
 											-----------------------------------------------
											array table
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										integers -> ['[i]', '[i]']
										dimensionality -> ['[j]', '[j]']
										skip -> ['[k]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: i=0  i<100  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: i=0  i<100  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: j=0  j<assets  j++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: j=0  j<assets  j++
								{
								-----------------------------------------------
								array table
								expected -> ['[j]', '[j]']
								calculated -> ['[j]', '[j]']
								-----------------------------------------------
								}
								loop info: j=0  j<assets  j++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: j=0  j<assets  j++
								{
								-----------------------------------------------
								array table
								calculated -> ['[j]', '[j]']
								antithetic -> ['[j]', '[j]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size j=0  j<LENGTH(engines)  j++
								{
									loop info: Size i1=0  i1<LENGTH(types)  i1++
									{
										loop info: Size i6=0  i6<LENGTH(strikes)  i6++
										{
											loop info: Size i2=0  i2<LENGTH(underlyings)  i2++
											{
												loop info: Size i4=0  i4<LENGTH(qRates)  i4++
												{
													loop info: Size i3=0  i3<LENGTH(rRates)  i3++
													{
														loop info: Size i7=0  i7<LENGTH(vols)  i7++
														{
														-----------------------------------------------
														array table
														-----------------------------------------------
														}
 													-----------------------------------------------
													array table
													-----------------------------------------------
													}
 												-----------------------------------------------
												array table
												-----------------------------------------------
												}
 											-----------------------------------------------
											array table
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										exercises -> ['[j]']
										engines -> ['[j]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<LENGTH(values)  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: i = d.begin()  i != d.end()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: i=0  i<exerciseTimes_.size()  i++
								{
								-----------------------------------------------
								array table
								exerciseTimes_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<=steps  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: i = data_.begin()  i != data_.end()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: SecondaryCostAmounts::const_iterator i = secondaryCostAmounts_.begin()  i != secondaryCostAmounts_.end()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 1  i < dates_.size()  i++
								{
								-----------------------------------------------
								array table
								dates_ -> ['[i]', '[i]', '[0]', '[i]']
								times_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: std::map<Date, Real>::const_iterator i = prices.begin()  i != prices.end()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 1  i < dates_.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Date periodStartDate=startDate  periodStartDate<endDate  
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Date periodStartDate=startDate  periodStartDate<endDate  
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: PayoffMap::const_iterator payIt = payoffMap.begin()  payIt != payoffMap.end()  ++payIt
								{
									loop info: Size i=0  i<n  i++
									{
									-----------------------------------------------
									array table
									fti -> ['[i]']
									-----------------------------------------------
									}
									loop info: Size i=0  i<n  i++
									{
									-----------------------------------------------
									array table
									prices -> ['[i]']
									results -> ['[i]']
									strikes -> ['[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Leg::const_iterator i = legs_[0].begin()  i < legs_[0].end()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Leg::const_iterator i = legs_[1].begin()  i < legs_[1].end()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<fixedCoupons.size()  ++i
								{
								-----------------------------------------------
								array table
								fixedNominals -> ['[i]']
								fixedCoupons -> ['[i]', '[i]']
								fixedResetDates -> ['[i]']
								fixedPayDates -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<floatingCoupons.size()  ++i
								{
								-----------------------------------------------
								array table
								floatingResetDates -> ['[i]']
								floatingSpreads -> ['[i]']
								floatingFixingDates -> ['[i]']
								floatingCoupons -> ['[i]', '[i]', '[i]']
								floatingPayDates -> ['[i]']
								floatingAccrualTimes -> ['[i]']
								floatingNominals -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < fixedLeg.size()  ++i
								{
									loop info: Size j = 0  j < floatLeg.size()  ++j
									{
									-----------------------------------------------
									array table
									floatLeg -> ['[j]']
									expiries_ -> ['[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								fixedLeg -> ['[i]']
								annuities_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size r = 0  r < n  ++r
								{
									loop info: Size c = r  c < n  ++c
									{
									-----------------------------------------------
									array table
									fairRates_ -> ['[c]']
									arr -> ['[r][c]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								arr -> ['[r][r]']
								-----------------------------------------------
								}
								loop info: Size r = 0  r < n  ++r
								{
								-----------------------------------------------
								array table
								rhs -> ['[r]', '[r]']
								-----------------------------------------------
								}
								loop info: Size i=0  i< weights.size() ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size j = 0  j < floatLeg.size()  ++j
								{
								-----------------------------------------------
								array table
								floatLeg -> ['[j]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < fixedLeg.size()  ++i
								{
								-----------------------------------------------
								array table
								fixedLeg -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<weights.size()  ++i
								{
								-----------------------------------------------
								array table
								weights -> ['[i]']
								-----------------------------------------------
								}
								loop info: Natural i= 0  i<= SVec.size()-1 i++
								{
								-----------------------------------------------
								array table
								SVec -> ['[i]']
								-----------------------------------------------
								}
								loop info: Natural i= 0  i<= SVec.size()-1 i++
								{
								-----------------------------------------------
								array table
								u_initial -> ['[i]']
								SVec -> ['[i]']
								-----------------------------------------------
								}
								loop info: Natural i=0  i<=assetSteps_  i++
								{
								-----------------------------------------------
								array table
								u_surface -> ['[i]']
								-----------------------------------------------
								}
								loop info: Natural j = 1  j<=timeSteps_ j++
								{
									loop info: Natural i = 1  i<= SVec.size()-2 i++
										{
										-----------------------------------------------
										array table
										Dia -> ['[i]']
										upperD -> ['[i]']
										SVec -> ['[i]']
										-----------------------------------------------
										}
									loop info: Natural i = 1  i<= SVec.size()-2 i++
										{
										-----------------------------------------------
										array table
										Dia -> ['[i]']
										upperD -> ['[i]']
										SVec -> ['[i]']
										-----------------------------------------------
										}
									loop info: Natural i=0  i<=assetSteps_  i++
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								rhs -> ['[0]']
								-----------------------------------------------
								}
								loop info: Size j=1  j<numAssets  ++j
								{
								-----------------------------------------------
								array table
								multiPath -> ['[j]', '[j]']
								-----------------------------------------------
								}
								loop info: Size i = 1  i < numSteps  i++
								{
									loop info: Size j = 0  j < numAssets  j++
									{
									-----------------------------------------------
									array table
									multiPath -> ['[j]', '[j][i]', '[j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 1  i < numNodes  i++
								{
									loop info: Size j = 0  j < numAssets  j++
									{
									-----------------------------------------------
									array table
									remainingAssets -> ['[j]']
									multiPath -> ['[j][i]', '[j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<putCallSchedule_.size() ++i
								{
								-----------------------------------------------
								array table
								putCallSchedule_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i<cashflows_.size()  ++i
								{
								-----------------------------------------------
								array table
								cashflows_ -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<cfs.size()-1  i++
								{
								-----------------------------------------------
								array table
								cfs -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<putCallSchedule_.size()  i++
								{
								-----------------------------------------------
								array table
								putCallSchedule_ -> ['[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<couponTimes_.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<callabilityTimes_.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<callabilityTimes_.size()  i++
								{
									loop info: Size j=0  j<couponTimes_.size()  j++
									{
									-----------------------------------------------
									array table
									couponTimes_ -> ['[j]', '[j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								callabilityTimes_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: i=0  i<couponTimes_.size()  i++
								{
								-----------------------------------------------
								array table
								couponTimes_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: i=0  i<callabilityTimes_.size()  i++
								{
								-----------------------------------------------
								array table
								callabilityTimes_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<callabilityTimes_.size()  i++
								{
								-----------------------------------------------
								array table
								callabilityTimes_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<couponTimes_.size()  i++
								{
								-----------------------------------------------
								array table
								couponTimes_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: j=0  j<values_.size()  j++
								{
								-----------------------------------------------
								array table
								arguments_.callabilityPrices -> ['[i]']
								values_ -> ['[j]', '[j]']
								-----------------------------------------------
								}
								loop info: j=0  j<values_.size()  j++
								{
								-----------------------------------------------
								array table
								arguments_.callabilityPrices -> ['[i]']
								values_ -> ['[j]', '[j]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < cf.size() - 1  ++i
								{
								-----------------------------------------------
								array table
								cf -> ['[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info:   i<notionalRate_.size() && notionalRate_[i].first<=date  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: size_t i=0  i<events.size()  ++i
								{
								-----------------------------------------------
								array table
								events -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<arguments_.cashflows.size()  ++i
								{
								-----------------------------------------------
								array table
								arguments_.cashflows -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<size  i++
								{
								-----------------------------------------------
								array table
								params -> ['[i]']
								times_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size j=0  j<size_  j++
								{
								-----------------------------------------------
								array table
								statePrices_ -> ['[j]']
								-----------------------------------------------
								}
								loop info: Size i=0 i<speedstructure.size()-1 i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0 i<volstructure.size()-1 i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=1  i< a_.size() i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=1  i< sigma_.size() i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0 i<speedstructure.size() i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0 i<volstructure.size() i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i< sigma_.size() i++
								{
								-----------------------------------------------
								array table
								vol -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i< a_.size() i++
								{
								-----------------------------------------------
								array table
								speed -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<(grid.size() - 1)  i++
								{
								-----------------------------------------------
								array table
								grid -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0 i<a_.size()-1 i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0 i<sigma_.size()-1 i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<observations_  ++i
								{
								-----------------------------------------------
								array table
								observationDates_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<observationDates.size()  i++
								{
								-----------------------------------------------
								array table
								observationCvg_ -> ['[i]']
								observationIndexEndDates_ -> ['[i]']
								initialValues_ -> ['[i]']
								observationDates -> ['[i]']
								observationIndexStartDates_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<nCount  i++
								{
								-----------------------------------------------
								array table
								observationCvg_ -> ['[i]', '[i]']
								initialValues_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<nCount  i++
								{
								-----------------------------------------------
								array table
								observationCvg_ -> ['[i]', '[i]']
								initialValues_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<stoppingTimes_.size()  ++i
								{
								-----------------------------------------------
								array table
								stoppingTimes_ -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<stoppingTimes_.size()  i++
								{
								-----------------------------------------------
								array table
								stoppingTimes_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size j=0  j<optvalues.size()  j++
								{
								-----------------------------------------------
								array table
								optvalues -> ['[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]']
								grid -> ['[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]']
								-----------------------------------------------
								}
								loop info: Size j=0  j<optvalues.size()-1  ++j
								{
								-----------------------------------------------
								array table
								optvalues -> ['[j]', '[j]']
								grid -> ['[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]']
								-----------------------------------------------
								}
								loop info: Size j=0  j<optvalues.size()-1  ++j
								{
								-----------------------------------------------
								array table
								optvalues -> ['[j]', '[j]']
								grid -> ['[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]']
								-----------------------------------------------
								}
								loop info:  i=1 i<=npoint i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: i=1 i<=npoint i++
								{
									loop info: j=1 j<=npoint2  j++
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: I = 1  I<=IM  I++
								{
								-----------------------------------------------
								array table
								FI -> ['[I]']
								EI -> ['[I]', '[I]', '[I]']
								-----------------------------------------------
								}
								loop info: J = 1  J<= N  J++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info:  J = NU-2  J>= 2  J=J-2
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info:  J = 1  J<= NU/2 J++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info:  J = 1 J<= ( NU - 1 )/2  J++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: I = 1 I<= LG  I++
								{
									loop info:  IS = -1  IS<= 1  IS=IS+2
									{
									-----------------------------------------------
									array table
									WL -> ['[I]']
									XL -> ['[I]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: I = 1  I<= LG I++
								{
									loop info:  IS = -1  IS<=1  IS=IS+2
									{
									-----------------------------------------------
									array table
									WL -> ['[I]']
									XL -> ['[I]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 1   i < maxIteration   ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 1   i < maxIteration   ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: int n = -series_   n <= series_   ++n
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: int n = -series_   n <= series_   ++n
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: int n = -series_  n < series_  n++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<n  i++
								{
								-----------------------------------------------
								array table
								callability_ -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<cashflows.size()-1  i++
								{
								-----------------------------------------------
								array table
								cashflows -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<dividends_.size()  i++
								{
								-----------------------------------------------
								array table
								dividends_ -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<arguments_.dividends.size()  i++
								{
								-----------------------------------------------
								array table
								dividendValues_ -> ['[i]']
								arguments_.dividends -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<stoppingTimes_.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<callabilityTimes_.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<couponTimes_.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<dividendTimes_.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<stoppingTimes_.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<couponTimes_.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<callabilityTimes_.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<dividendTimes_.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size j=0  j<values_.size()  j++
								{
								-----------------------------------------------
								array table
								conversionProbability_ -> ['[j]', '[j]']
								spreadAdjustedRate_ -> ['[j]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<stoppingTimes_.size()  ++i
								{
								-----------------------------------------------
								array table
								stoppingTimes_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<callabilityTimes_.size()  i++
								{
								-----------------------------------------------
								array table
								callabilityTimes_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<couponTimes_.size()  i++
								{
								-----------------------------------------------
								array table
								couponTimes_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size j=0  j<values_.size()  j++
								{
								-----------------------------------------------
								array table
								grid -> ['[j]']
								conversionProbability_ -> ['[j]']
								values_ -> ['[j]', '[j]']
								-----------------------------------------------
								}
								loop info: j=0  j<values_.size()  j++
								{
								-----------------------------------------------
								array table
								grid -> ['[j]', '[j]']
								arguments_.callabilityPrices -> ['[i]']
								values_ -> ['[j]', '[j]']
								-----------------------------------------------
								}
								loop info: j=0  j<values_.size()  j++
								{
								-----------------------------------------------
								array table
								grid -> ['[j]']
								arguments_.callabilityPrices -> ['[i]']
								values_ -> ['[j]', '[j]']
								-----------------------------------------------
								}
								loop info: j=0  j<values_.size()  j++
								{
								-----------------------------------------------
								array table
								arguments_.callabilityPrices -> ['[i]']
								values_ -> ['[j]', '[j]']
								-----------------------------------------------
								}
								loop info: j=0  j<values_.size()  j++
								{
								-----------------------------------------------
								array table
								arguments_.callabilityPrices -> ['[i]']
								values_ -> ['[j]', '[j]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<arguments_.dividends.size()  i++
								{
									loop info: Size j=0  j<grid.size()  j++
										{
										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 								-----------------------------------------------
								array table
								dividendTimes_ -> ['[i]']
								arguments_.dividends -> ['[i]']
								-----------------------------------------------
								}
								loop info: Integer i=lowRatio  i <= highRatio  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < (Size)nPeriods-1  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: j=0 j<=mm-1 j++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: j=0 j<=mm-1 j++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: j=0 j<=mm-1 j++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: j=0 j<=mm-1 j++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: j=0 j<=mm-1 j++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: k=0 k<=mm-1 k++
								{
									loop info: j=0 j<=mm-1 j++
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size j=powerPrices_.size()  j > 0  --j
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < locations_.size()-1  ++i
								{
								-----------------------------------------------
								array table
								locations_ -> ['[i]']
								dplus_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i < nStates_  ++i
								{
								-----------------------------------------------
								array table
								state -> ['[i]', '[i]', '[i]', '[i]']
								retVal -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i < results.size()  ++i
								{
								-----------------------------------------------
								array table
								results -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i < yInt.size()  ++i
								{
								-----------------------------------------------
								array table
								yInt -> ['[i]', '[i]']
								yLoc -> ['[l]', '[l]']
								weights -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size k=0  k < extraDims  ++k
								{
									loop info: Size i=0  i < f[k].columns()  ++i
									{
									-----------------------------------------------
									array table
									interpl -> ['[k][i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: FdmLinearOpIterator iter=layout->begin()  iter!=endIter  ++iter
								{
								-----------------------------------------------
								array table
								interpl -> ['[k][i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i < nStates_  ++i
								{
								-----------------------------------------------
								array table
								stateEvolveFcts_ -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: FdmLinearOpIterator iter=layout->begin() iter != endIter  ++iter
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: FdmLinearOpIterator iter=layout->begin() iter != endIter  ++iter
								{
									loop info: Size i=0  i < nStates  ++i
										{
										-----------------------------------------------
										array table
										-----------------------------------------------
										}
									loop info: Size i=0  i < nStates  ++i
										{
										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<arguments_.exercise->dates().size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < result.size()  i++
								{
								-----------------------------------------------
								array table
								result -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i < n  ++i
								{
								-----------------------------------------------
								array table
								x0 -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size iFactor=0  iFactor<vals.tOrders.size()  iFactor++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size iLVar=0  iLVar<factorWeights.size()  iLVar++
								{
									loop info: Size iFactor=0  iFactor<factorWeights[iLVar].size()  iFactor++
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<degreesFreedom.size()  i++
								{
								-----------------------------------------------
								array table
								degreesFreedom -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<degreesFreedom_.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<degreesFreedom_.size()  i++
								{
									loop info: Size k=1  k<polynCharFnc_[i].size()  k++
									{
									-----------------------------------------------
									array table
									polynCharFnc_ -> ['[i][k]']
									factors_ -> ['[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<polynCharFnc_.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<degreesFreedom_.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size k=1  k<n  k++
								{
									loop info: Size i=0  i<high.size()  i++
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size polyOrdr=0  polyOrdr<resultB.size()  polyOrdr++
								{
								-----------------------------------------------
								array table
								shorter -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size exponent = 2  exponent <polyConvolved_.size()  exponent++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size exponent=1  exponent <polyConvolved_.size()  exponent++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Integer i=0  i < Integer(n)  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < n  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < n  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size n=1  n < N  ++n
								{
									loop info: Size nu=0  nu < n  ++nu
									{
										loop info: Size m=0  m <= std::min(n, M)  ++m
										{
										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
									loop info: Size m=0  m <= M  ++m
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < N  ++i
								{
								-----------------------------------------------
								array table
								retVal -> ['[i]']
								-----------------------------------------------
								}
								loop info:   
								{
								-----------------------------------------------
								array table
								w_ -> ['[i]']
								k_ -> ['[i]']
								f_ -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size j = 0  j <cfMaturities_.size()  j++
								{
									loop info: Size i = 0  i <fPrice_.rows()  i++
									{
									-----------------------------------------------
									array table
									fPrice_ -> ['[i][j]', '[i][j]', '[i][j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								cPrice_ -> ['[i][j]', '[i][j]', '[i][j]', '[i][j]']
								cfMaturities -> ['[j]', '[j]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i <fStrikes_.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < cStrikes_.size()  i++
								{
								-----------------------------------------------
								array table
								cStrikes -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 1  i < cfStrikes_.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size j = 0  j <cfMaturities_.size()  j++
								{
									loop info: Size i = 0  i <fPrice_.rows()  i++
									{
									-----------------------------------------------
									array table
									fPrice_ -> ['[i][j]', '[i][j]', '[i][j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								cPrice_ -> ['[i][j]', '[i][j]', '[i][j]']
								cfMaturities -> ['[j]', '[j]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i <fStrikes_.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < cStrikes_.size()  i++
								{
								-----------------------------------------------
								array table
								cStrikes -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 1  i < cfStrikes_.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < numberOfTimes  ++i
								{
									loop info: Size j = 0  j < numberOfAssets  ++j
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								timePositions_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < numberOfTimes  ++i
								{
									loop info: Size j = 0  j < numberOfAssets  ++j
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								timePositions_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Integer i = len - 2  i >= 0  --i
								{
									loop info: Size l = 0  l < v_.size()  ++l
												{
												-----------------------------------------------
												array table
												coeff_ -> ['[i][l]']
												v_ -> ['[l]']
												-----------------------------------------------
												}
 								-----------------------------------------------
								array table
								path.exercises -> ['[i]']
								dF_ -> ['[i]']
								lowerBounds_ -> ['[i]', '[i]']
								path.payments -> ['[i]']
								path.states -> ['[i]']
								coeff_ -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size j = 0  j < n  ++j
								{
								-----------------------------------------------
								array table
								prices -> ['[j]', '[j]']
								paths_ -> ['[j]', '[j]', '[j]']
								-----------------------------------------------
								}
								loop info: Integer i = len - 2  i >= 0  --i
								{
									loop info: Size j = 0  j < n  ++j
									{
									-----------------------------------------------
									array table
									exercises -> ['[i]']
									states -> ['[i]']
									prices -> ['[j]']
									paths_ -> ['[j]', '[j]']
									exercise -> ['[j]', '[j]']
									-----------------------------------------------
									}
									loop info: Size j = 0, k = 0  j < n  ++j
									{
										loop info: Size l = 0  l < v_.size()  ++l
												{
												-----------------------------------------------
												array table
												coeff_ -> ['[i][l]']
												v_ -> ['[l]']
												-----------------------------------------------
												}
 									-----------------------------------------------
									array table
									lsExercise -> ['[j]', '[j]', '[j]']
									states -> ['[i]']
									coeff_ -> ['[i]']
									paths_ -> ['[j]']
									prices -> ['[j]', '[j]', '[j]']
									exercise -> ['[j]', '[j]', '[j]', '[j]']
									-----------------------------------------------
									}
									loop info: Size j = 0  j < n  ++j
										{
										-----------------------------------------------
										array table
										prices -> ['[j]', '[j]']
										lsExercise -> ['[j]']
										exercise -> ['[j]']
										-----------------------------------------------
										}
									loop info: Size j = 0  j < n  ++j
										{
										-----------------------------------------------
										array table
										states -> ['[i]']
										prices -> ['[j]', '[j]']
										paths_ -> ['[j]']
										exercise -> ['[j]']
										-----------------------------------------------
										}
									loop info: Size j = 0  j < n  ++j
									{
									-----------------------------------------------
									array table
									prices -> ['[j]']
									paths_ -> ['[j]']
									payments -> ['[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								dF_ -> ['[i]']
								lowerBounds_ -> ['[i]']
								coeff_ -> ['[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size j = 0  j < pool_->size()  j++
								{
								-----------------------------------------------
								array table
								values -> ['[0]']
								defaultKeys_ -> ['[j]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < arguments_.premiumLeg.size()  i++
								{
								-----------------------------------------------
								array table
								arguments_.premiumLeg -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < basket->names().size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < p.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < y_.size()  i++
								{
								-----------------------------------------------
								array table
								cumulativeY_ -> ['[i]']
								y_ -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < cumulativeY_.size()  i++
								{
								-----------------------------------------------
								array table
								cumulativeY_ -> ['[i]', '[i]', '[i]']
								y_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < steps()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 1  i < zSteps  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 1  i < ySteps  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<contractKey.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Real m = minimum  m < maximum  m += delta
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Real z = minimum  z < maximum  z += delta
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 1  i < floatSchedule_.size()  i++
								{
								-----------------------------------------------
								array table
								floatSchedule_ -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 1  i < floatSchedule_.size()  i++
								{
								-----------------------------------------------
								array table
								floatSchedule_ -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 1  i < fixedSchedule_.size()  i++
								{
								-----------------------------------------------
								array table
								fixedSchedule_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 1  i < fixedSchedule_.size()  i++
								{
								-----------------------------------------------
								array table
								fixedSchedule_ -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 1  i < fixedSchedule_.size()  i++
								{
								-----------------------------------------------
								array table
								fixedSchedule_ -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < notionals_.size()  i++
								{
								-----------------------------------------------
								array table
								notionals_ -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size j = 0  j < size()  j++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < size()  i++
								{
								-----------------------------------------------
								array table
								notionals_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < size()  i++
								{
								-----------------------------------------------
								array table
								notionals_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < size()  i++
								{
								-----------------------------------------------
								array table
								notionals_ -> ['[i]']
								defKeys -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<alive.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<alive.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<alive.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<alive.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = n  i <= p.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size j = 0  j < n  j++
								{
									loop info: Size i = 1  i <= j  i++
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								prev -> ['[0]', '[j]']
								probability -> ['[0]']
								-----------------------------------------------
								}
								loop info: int j = 0  j < k  j++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = k  i <= p.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i <= n  i++
								{
								-----------------------------------------------
								array table
								probability_ -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: int k = n_-1  k >= 0  k--
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size k = 0  k < n_  k++
								{
									loop info: Size i = 1  i <= k  i++
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								prev -> ['[0]', '[k]']
								probability_ -> ['[0]']
								-----------------------------------------------
								}
								loop info: int k = n_ - 1  k >= 0  k--
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i <= n_  i++
								{
								-----------------------------------------------
								array table
								probability_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size k = 1  k < nBuckets_  k++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < nominals.size()  i++
								{
									loop info: int k = a.size()-1  k >= 0  k--
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								probabilities -> ['[i]']
								nominals -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < nBuckets_  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = i0  i < nBuckets_  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < simulations_  i++
								{
									loop info: Size j = 0  j < nominals.size()  j++
									{
									-----------------------------------------------
									array table
									probabilities -> ['[j]']
									nominals -> ['[j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < basket_.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < n  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < nominals_.size()  i++
								{
								-----------------------------------------------
								array table
								nominals_ -> ['[i]', '[i]']
								lgds_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size j = 0  j < basket_.size()  j++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 1  i < premiumSchedule_.size()  i++
								{
								-----------------------------------------------
								array table
								premiumSchedule_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < cf.size()  i++
								{
								-----------------------------------------------
								array table
								cf -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < cf.size()  i++
								{
								-----------------------------------------------
								array table
								cf -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < cf.size()  i++
								{
								-----------------------------------------------
								array table
								cf -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < cf.size()  i++
								{
								-----------------------------------------------
								array table
								cf -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 1  i < dates.size()  i++
								{
								-----------------------------------------------
								array table
								notionals_ -> ['[i]']
								dates -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < schedule_.size()  i++
								{
								-----------------------------------------------
								array table
								notionals_ -> ['[i]']
								schedule_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 1  i < dates.size()  i++
								{
								-----------------------------------------------
								array table
								notionals_ -> ['[i]']
								dates -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < schedule_.size()  i++
								{
								-----------------------------------------------
								array table
								notionals_ -> ['[i]']
								schedule_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<quotes.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<recoveries.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<recoveries.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<mySize  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i< numEvents  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i <eventTypes.size()  i++
								{
								-----------------------------------------------
								array table
								eventTypes -> ['[i]']
								currencies -> ['[i]']
								curves -> ['[i]']
								seniorities -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<probabilities_.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: int i = 0  i < nBuckets  i++
								{
								-----------------------------------------------
								array table
								dx_ -> ['[i]']
								x_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < x_.size()  i++
								{
								-----------------------------------------------
								array table
								x_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < count_.size()  i++
								{
								-----------------------------------------------
								array table
								dx_ -> ['[i]']
								average_ -> ['[i]']
								x_ -> ['[i]']
								count_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: int i = 0  i < size_  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: int i = 0  i < size_  i++
								{
								-----------------------------------------------
								array table
								dx_ -> ['[i]', '[i]', '[i]']
								cumulativeDensity_ -> ['[i]', '[i]']
								average_ -> ['[i]', '[i]']
								excessProbability_ -> ['[i]', '[i]', '[i]']
								x_ -> ['[i]']
								count_ -> ['[i]', '[i]', '[i]']
								density_ -> ['[i]', '[i]', '[i]']
								cumulativeExcessProbability_ -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: int i = 0  i < size_  i++
								{
								-----------------------------------------------
								array table
								cumulativeDensity_ -> ['[i]']
								dx_ -> ['[i]']
								x_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: int i = 0  i < size_  i++
								{
								-----------------------------------------------
								array table
								dx_ -> ['[i]', '[i]']
								x_ -> ['[i]']
								density_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: int i = 0  i < size_  i++
								{
								-----------------------------------------------
								array table
								dx_ -> ['[i]', '[i]']
								x_ -> ['[i]']
								density_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: int i = 0  i < size_  i++
								{
								-----------------------------------------------
								array table
								dx_ -> ['[i]']
								excessProbability_ -> ['[i]']
								x_ -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: int i = 0  i < size_  i++
								{
								-----------------------------------------------
								array table
								dx_ -> ['[i]', '[i]', '[i]']
								cumulativeDensity_ -> ['[i]']
								x_ -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < x_.size()  i++
								{
								-----------------------------------------------
								array table
								x_ -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Integer i=1  i<size_-1  i++
								{
								-----------------------------------------------
								array table
								cumulativeDensity_ -> ['[i]']
								dx_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 1  i < d1.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 1  i < d2.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i1 = 0  i1 < d1.size()  i1++
								{
									loop info: Size i2 = 0  i2 < d2.size()  i2++
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < dist.size()  i++
								{
								-----------------------------------------------
								array table
								dist.excessProbability_ -> ['[i]']
								dist.dx_ -> ['[i]']
								dist.cumulativeDensity_ -> ['[i]', '[i]']
								dist.density_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: int i = iVal  i < size_  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < arguments_.normalizedLeg.size()  i++
								{
								-----------------------------------------------
								array table
								arguments_.normalizedLeg -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < arguments_.normalizedLeg.size()  i++
								{
								-----------------------------------------------
								array table
								arguments_.normalizedLeg -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i <= steps  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Real m = minimum + delta/2  m < maximum  m += delta
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Real z = minimum + delta/2  z < maximum  z += delta
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i <= steps  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Real m = minimum + delta/2  m < maximum  m += delta
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Real z = minimum + delta/2  z < maximum  z += delta
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i <= steps  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Real m = minimum + delta/2  m < maximum  m += delta
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Real z = minimum + delta/2  z < maximum  z += delta
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size k=0  k<n  ++k
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size k=0  k<n  ++k
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<n  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<n  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<n  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<n  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<n  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size j=0  j<m  ++j
								{
								-----------------------------------------------
								array table
								gammaVector -> ['[j]']
								deltaVector -> ['[j]']
								-----------------------------------------------
								}
								loop info: Size j=0  j<m  ++j
								{
								-----------------------------------------------
								array table
								refVals -> ['[j]']
								params -> ['[j]', '[j]']
								-----------------------------------------------
								}
								loop info: Size j=0  j<m  ++j
								{
								-----------------------------------------------
								array table
								refVals -> ['[j]', '[j]']
								gammaVector -> ['[j]']
								deltaVector -> ['[j]', '[j]']
								params -> ['[j]']
								-----------------------------------------------
								}
								loop info: Size j=0  j<m  ++j
								{
								-----------------------------------------------
								array table
								refVals -> ['[j]']
								params -> ['[j]']
								plus -> ['[j]']
								-----------------------------------------------
								}
								loop info: Size j=0  j<m  ++j
								{
								-----------------------------------------------
								array table
								refVals -> ['[j]', '[j]']
								deltaVector -> ['[j]', '[j]']
								params -> ['[j]']
								plus -> ['[j]', '[j]']
								gammaVector -> ['[j]', '[j]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<n  ++i
								{
								-----------------------------------------------
								array table
								quotes -> ['[i]']
								result.second -> ['[i]']
								result.first -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<m  ++i
								{
								-----------------------------------------------
								array table
								referenceValues -> ['[i]']
								parameters -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<n  ++i
								{
								-----------------------------------------------
								array table
								quotes -> ['[i]']
								deltaMatrix -> ['[i]']
								gammaMatrix -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<n  ++i
								{
								-----------------------------------------------
								array table
								quotes -> ['[i]']
								second -> ['[i]']
								first -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<n  ++i
								{
									loop info: Size j=0  j<quotes[i].size()  ++j
									{
									-----------------------------------------------
									array table
									quotes -> ['[i][j]']
									result.second -> ['[i][j]']
									result.first -> ['[i][j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < m_  ++i
								{
								-----------------------------------------------
								array table
								pd_ -> ['[i]', '[i]', '[i]', '[i]']
								sector_ -> ['[i]', '[i]']
								exposure_ -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size k = 0  k < m_  ++k
								{
								-----------------------------------------------
								array table
								pd_ -> ['[k]']
								exposure_ -> ['[k]', '[k]', '[k]', '[k]']
								pdAdj -> ['[k]', '[k]']
								-----------------------------------------------
								}
								loop info: Size k = 0  k < m_  ++k
								{
								-----------------------------------------------
								array table
								pd_ -> ['[k]', '[k]']
								sector_ -> ['[k]', '[k]', '[k]']
								exposure_ -> ['[k]', '[k]']
								pdAdj -> ['[k]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < n_  ++i
								{
									loop info: Size j = 0  j < n_  ++j
									{
									-----------------------------------------------
									array table
									relativeDefaultVariance_ -> ['[i]', '[j]']
									sectorSpecTerms_ -> ['[i]']
									sectorEl_ -> ['[j]']
									correlation_ -> ['[i][j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								relativeDefaultVariance_ -> ['[i]']
								sectorSpecTerms_ -> ['[i]']
								sectorEl_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < n_  ++i
								{
									loop info: Size j = 0  j < n_  ++j
									{
									-----------------------------------------------
									array table
									relativeDefaultVariance_ -> ['[i]', '[j]']
									sectorEl_ -> ['[i]', '[j]']
									correlation_ -> ['[i][j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								relativeDefaultVariance_ -> ['[i]']
								sectorUl_ -> ['[i]', '[i]']
								sectorEl_ -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size k = 0  k < m_  ++k
								{
								-----------------------------------------------
								array table
								pd_ -> ['[k]']
								sector_ -> ['[k]']
								exposure_ -> ['[k]', '[k]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < n_  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size k = 0  k < m_  ++k
								{
								-----------------------------------------------
								array table
								pd_ -> ['[k]']
								sector_ -> ['[k]']
								exposure_ -> ['[k]', '[k]']
								marginalLoss_ -> ['[k]']
								-----------------------------------------------
								}
								loop info: unsigned long n = 0  n < upperIndex_ - 1  ++n
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size j=1  j<=dates.size()  j++
								{
								-----------------------------------------------
								array table
								times_ -> ['[j]', '[j]']
								-----------------------------------------------
								}
								loop info: Size j = 0  j < volatilities_.size()  j++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<times_.size()+1  i++
								{
								-----------------------------------------------
								array table
								variances_ -> ['[0][i]']
								-----------------------------------------------
								}
								loop info: Size j=1  j<=times_.size()  j++
								{
									loop info: Size i=0  i<strikes_.size()  i++
									{
									-----------------------------------------------
									array table
									variances_ -> ['[i][j]', '[i][j]', '[i]']
									times_ -> ['[j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < volHandles_.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < volHandles_.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < volHandles_.size()  ++i
								{
								-----------------------------------------------
								array table
								volHandles_ -> ['[i]', '[i]', '[i]']
								strikes_ -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: int iTau = -1  iTau <= 0  ++iTau
								{
									loop info: int iSigma = -1  iSigma <= 0  ++iSigma
									{
										loop info: int iRho = -1  iRho <= 0  ++iRho
										{
											loop info: int iNu = -1  iNu <= 0  ++iNu
											{
												loop info: int iBeta = -1  iBeta <= 0  ++iBeta
												{
												-----------------------------------------------
												array table
												-----------------------------------------------
												}
 											-----------------------------------------------
											array table
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < 1209600  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<vols_.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=1  i<nOptionTenors_  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size j=1  j<nOptionTenors_ ++j
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<volHandles_.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<nOptionTenors_  ++i
								{
								-----------------------------------------------
								array table
								optionTenors_ -> ['[i]']
								optionDates_ -> ['[i]', '[i]']
								optionTimes_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<nOptionTenors_  ++i
								{
								-----------------------------------------------
								array table
								optionTenors_ -> ['[i]']
								optionTimes_ -> ['[i]']
								inclusionInInterpolation_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<nOptionTenors_  ++i
								{
								-----------------------------------------------
								array table
								volHandles_ -> ['[i]']
								inclusionInInterpolation_ -> ['[i]']
								vols_ -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<vols_.size()  ++i
								{
								-----------------------------------------------
								array table
								volHandles_ -> ['[i]']
								inclusionInInterpolation_ -> ['[i]']
								vols_ -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size j = 0  j < v_.size()  ++j
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size m = 0  m < y.size()  m++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: int dir = 1  dir >= -1  dir -= 2
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<volHandles_.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<volHandles_.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<volHandles_.size()  ++i
								{
								-----------------------------------------------
								array table
								volHandles_ -> ['[i]', '[i]', '[i]']
								strikes_ -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<surfaces_.size()  ++i
								{
								-----------------------------------------------
								array table
								surfaces_ -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<curves_.size()  ++i
								{
								-----------------------------------------------
								array table
								curves_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size j=1  j<=dates.size()  ++j
								{
								-----------------------------------------------
								array table
								times_ -> ['[j]', '[j]']
								-----------------------------------------------
								}
								loop info: Size j=0  j<volatilities_.size()  ++j
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size j=1  j<=volatilities_.size()  j++
								{
								-----------------------------------------------
								array table
								variances_ -> ['[j]', '[j]']
								times_ -> ['[j]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<optionTenors_.size()  ++i
								{
								-----------------------------------------------
								array table
								optionTenors_ -> ['[i]']
								optionDates_ -> ['[i]', '[i]']
								optionTimes_ -> ['[i]']
								sabrGuesses_ -> ['[i][0]', '[i][1]', '[i][2]', '[i][3]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<nAtmRateSpreads  ++i
								{
									loop info: Size j=0  j<nOptionsTimes  ++j
									{
									-----------------------------------------------
									array table
									vols -> ['[j]']
									volSpreads_ -> ['[j][i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								interpolatedVols -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<optionTenors_.size()  ++i
								{
								-----------------------------------------------
								array table
								optionTenors_ -> ['[i]']
								optionDates_ -> ['[i]', '[i]']
								optionTimes_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<optionTenors_.size()  ++i
								{
									loop info: Size j=0  j<atmRateSpreads_.size()  ++j
									{
									-----------------------------------------------
									array table
									volSpreads_ -> ['[i][j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=1  i<nStrikes  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<volSpreads_.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<instruments_.size()  i++
								{
								-----------------------------------------------
								array table
								instruments_ -> ['[i]']
								weights_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<instruments_.size()  i++
								{
								-----------------------------------------------
								array table
								values -> ['[i]']
								instruments_ -> ['[i]']
								weights_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: i=0  i<arguments_.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: i=0  i<arguments_.size()  i++
								{
									loop info: Size j=0  j<arguments_[i].size()  j++, k++
									{
									-----------------------------------------------
									array table
									arguments_ -> ['[i]']
									params -> ['[k]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<arguments_.size()  ++i
								{
									loop info: Size j=0  j<arguments_[i].size()  ++j, ++p
									{
									-----------------------------------------------
									array table
									arguments_ -> ['[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size j=0  j<size_  j++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<(timeGrid.size() - 1)  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<size_  i++
								{
								-----------------------------------------------
								array table
								Bb_ -> ['[i]']
								t_ -> ['[i]', '[i]', '[i]']
								A_ -> ['[i]']
								Ba_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: i=0  i<size_  i++
								{
								-----------------------------------------------
								array table
								Ba_ -> ['[i]']
								t_ -> ['[0]', '[i]']
								A_ -> ['[i]']
								lambda -> ['[i]']
								-----------------------------------------------
								}
								loop info: i=0  i<size_  i++
								{
								-----------------------------------------------
								array table
								Bb_ -> ['[i]', '[i]', '[i]']
								lambda -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<lambda_.size()  i++
								{
								-----------------------------------------------
								array table
								Bb_ -> ['[i]']
								lambda_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<fixedPayTimes.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<(grid.size() - 1)  i++
								{
									loop info: Size j=0  j<size  j++
									{
									-----------------------------------------------
									array table
									statePrices -> ['[j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								grid -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < volatilities.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < volatilities.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < reversions.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < sigma_.size()  i++
								{
								-----------------------------------------------
								array table
								volatilities_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < reversion_.size()  i++
								{
								-----------------------------------------------
								array table
								reversions_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < sigma_.size()  i++
								{
								-----------------------------------------------
								array table
								volatilities_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < reversion_.size()  i++
								{
								-----------------------------------------------
								array table
								reversions_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < reversions_.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < volatilities_.size()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size j=0  j<size_  j++
								{
								-----------------------------------------------
								array table
								statePrices_ -> ['[j]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<(grid.size() - 1)  i++
								{
								-----------------------------------------------
								array table
								grid -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 1  i < floatSched.size()  i++
								{
								-----------------------------------------------
								array table
								floatSched -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: unsigned int j = 1  j < sched.size()  j++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < yg.size()  i++
								{
								-----------------------------------------------
								array table
								yg -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < z.size() - 1  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: int j = -gridPoints  j <= gridPoints  j++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < normalIntegralX_.size()  i++
								{
								-----------------------------------------------
								array table
								normalIntegralX_ -> ['[i]', '[i]', '[i]']
								normalIntegralW_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: std::vector<Date>::const_iterator i = capletExpiries_.begin()  i != capletExpiries_.end()  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < sigma_.size()  i++
								{
								-----------------------------------------------
								array table
								volatilities_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < times_.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: unsigned int k = 1  k < sched.size()  k++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size j = 0  j < k.size()  j++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: unsigned int k = 0  k < i->second.paymentDates_.size()  k++
								{
								-----------------------------------------------
								array table
								second.yearFractions_ -> ['[k]']
								second.paymentDates_ -> ['[k]']
								-----------------------------------------------
								}
								loop info: int j = y_.size() - 1  j >= 0  j--
								{
								-----------------------------------------------
								array table
								discreteDeflatedAnnuities -> ['[j]', '[j]']
								deflatedFinalPayments -> ['[j]']
								y_ -> ['[j]', '[j]', '[j]', '[j]', '[j]']
								-----------------------------------------------
								}
								loop info: int j = y_.size() - 1  j >= 0  j--
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 1  i < times_.size() - 1  i++
								{
								-----------------------------------------------
								array table
								times_ -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size j = 0  j < money.size()  j++
								{
								-----------------------------------------------
								array table
								money -> ['[j]']
								strikes -> ['[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]']
								-----------------------------------------------
								}
								loop info: Size j = 0  j < y.size()  j++
								{
								-----------------------------------------------
								array table
								numeraire_ -> ['[i]']
								res -> ['[j]']
								-----------------------------------------------
								}
								loop info: Size j = 0  j < y.size()  j++
								{
									loop info: Size i = 0  i < modelSettings_.gaussHermitePoints_  i++
									{
									-----------------------------------------------
									array table
									ya -> ['[i]']
									normalIntegralX_ -> ['[i]']
									-----------------------------------------------
									}
									loop info: Size i = 0  i < modelSettings_.gaussHermitePoints_  i++
									{
									-----------------------------------------------
									array table
									res -> ['[i]']
									result -> ['[j]']
									normalIntegralW_ -> ['[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < m.settings_.smileMoneynessCheckpoints_.size()  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < m.expiries_.size()  i++
								{
								-----------------------------------------------
								array table
								m.atm_ -> ['[i]']
								m.modelZerorate_ -> ['[i]', '[i]']
								m.expiries_ -> ['[i]']
								m.tenors_ -> ['[i]']
								m.adjustmentFactors_ -> ['[i]']
								m.digitalsAdjustmentFactors_ -> ['[i]']
								m.annuity_ -> ['[i]']
								m.marketZerorate_ -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < m.expiries_.size()  i++
								{
								-----------------------------------------------
								array table
								m.expiries_ -> ['[i]']
								m.tenors_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size j = 0  j < m.smileStrikes_[0].size()  j++
								{
									loop info: Size i = 0  i < m.expiries_.size()  i++
									{
									-----------------------------------------------
									array table
									m.marketVega_ -> ['[i][j]']
									m.marketCallPremium_ -> ['[i][j]']
									m.smileStrikes_ -> ['[i][j]']
									m.modelPutPremium_ -> ['[i][j]']
									m.marketRawCallPremium_ -> ['[i][j]']
									m.marketPutPremium_ -> ['[i][j]']
									m.marketRawPutPremium_ -> ['[i][j]']
									m.modelCallPremium_ -> ['[i][j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: unsigned int j = 1  j < sched.size()  j++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < yg.size()  i++
								{
								-----------------------------------------------
								array table
								yg -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < z.size() - 1  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i = 0  i < yg.size()  i++
								{
								-----------------------------------------------
								array table
								yg -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i = 0  i < z.size() - 1  i++
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: std::size_t i = 2  i < idx_.size()  ++i
								{
								-----------------------------------------------
								array table
								fct2fit -> ['[i]', '[1]']
								idx_ -> ['[i]', '[i]']
								target -> ['[i]']
								-----------------------------------------------
								}
								loop info: std::size_t i = 2  i < idx_.size()  ++i
								{
								-----------------------------------------------
								array table
								fct2fit -> ['[i]', '[1]', '[1]']
								idx_ -> ['[i]', '[i]', '[i]']
								target -> ['[i]']
								grad_fct2fit -> ['[i][0]', '[1][0]', '[i][1]', '[1][1]']
								-----------------------------------------------
								}
								loop info: std::size_t i = 0  i <= nCov  ++i
								{
								-----------------------------------------------
								array table
								acf -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: std::size_t i = 0  i <= nCov  ++i
								{
								-----------------------------------------------
								array table
								acf -> ['[i]', '[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=size_  i < volatilitySeries.size()  i++
								{
									loop info: j=i-size_  j <i  j++
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<totalCovariance1.columns()  ++i
								{
								-----------------------------------------------
								array table
								maturities -> ['[i]']
								totalCovariance2 -> ['[i][i]']
								totalCovariance1 -> ['[i][i]']
								result -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<evolutionTimes.size()  ++i
								{
								-----------------------------------------------
								array table
								evolutionTimes -> ['[i]']
								result -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=1  i<rateTimes.size()  ++i
								{
									loop info: Size j=0  j<correlations.rows()  ++j
									{
									-----------------------------------------------
									array table
									piecewiseConstantVariances -> ['[j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								rateTimes -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<times.size()  i++
								{
								-----------------------------------------------
								array table
								times -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<times.size()  i++
								{
									loop info: Size j=0  j<allTimes.size()  j++
									{
									-----------------------------------------------
									array table
									isPresent -> ['[i][j]']
									allTimes -> ['[j]']
									times -> ['[i]', '[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								isPresent -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<dimSet  ++i
								{
									loop info:   
									{
									-----------------------------------------------
									array table
									subset -> ['[j]']
									result -> ['[i]', '[i]', '[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								set -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<nTimes-1  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<nTimes-1  ++i
								{
								-----------------------------------------------
								array table
								taus -> ['[i]', '[i]']
								times -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size j=0  j<numberOfSteps()  ++j
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size j=1  j<numberOfSteps()  ++j
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size j=0  j<numberOfSteps()  ++j
								{
								-----------------------------------------------
								array table
								evolutionTime -> ['[j]', '[j]']
								result -> ['[j]']
								-----------------------------------------------
								}
								loop info: Size l=0  l < k  ++l
								{
									loop info: Size r=0  r < multiplier  ++r, ++m
									{
									-----------------------------------------------
									array table
									tau -> ['[m]']
									jacobian -> ['[l][m]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < k   ++i
								{
									loop info: Size j=0  j < n  ++j
									{
									-----------------------------------------------
									array table
									shortDisplacements -> ['[j]']
									jacobian -> ['[i][j]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								longDisplacements -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i < k+1  ++i
								{
								-----------------------------------------------
								array table
								discRatios -> ['[i]']
								times -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i <= numberSteps_  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<numberProducts_  ++i
								{
									loop info: Size j=0  j < cashFlowsGenerated_[i].size()  ++j
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								cashFlowsGenerated_ -> ['[i]']
								numberCashFlowsThisIndex_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size j=0  j<cashFlowTimes.size()  ++j
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < numberCashFlowTimes_  ++i
								{
								-----------------------------------------------
								array table
								cashFlowTimes -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i < numberProducts_  ++i
								{
									loop info: Size j=0  j < numberCashFlowTimes_  ++j
									{
										loop info: Size k=0  k <= numberRates_  ++k
										{
										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									numberCashFlowsThisIndex_ -> ['[i][j]']
									-----------------------------------------------
									}
									loop info: Size l=0   l< numberRates_  ++l
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								numerairesHeld_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: unsigned long i=0  i < numberRates_  ++i
								{
								-----------------------------------------------
								array table
								lastForwards_ -> ['[i]']
								currentForwards_ -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<numberProducts_  ++i
								{
									loop info: Size j=0  j<numberCashFlowsThisStep_[i]  ++j
									{
										loop info: Size l=0  l <= numberRates_  ++l
										{
										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									cashFlowsGenerated_ -> ['[i][j]']
									numberCashFlowsThisIndex_ -> ['[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Integer currentStep =  numberSteps_-1  currentStep >=0   --currentStep
								{
									loop info: Size k=0  k < cashFlowIndicesThisStep_[currentStep].size()  ++k
									{
										loop info: Size l=0  l < numberProducts_ && noFlows  ++l
										{
										-----------------------------------------------
										array table
										-----------------------------------------------
										}
										loop info: Size j=0  j < numberProducts_  ++j
											{
												loop info: Size i=1  i <= numberRates_  ++i
													{
													-----------------------------------------------
													array table
													totalCashFlowsThisIndex_ -> ['[j]', '[j]']
													deflatorAndDerivatives_ -> ['[0]', '[i]']
													V_ -> ['[j]']
													-----------------------------------------------
													}
 											-----------------------------------------------
											array table
											cashFlowsGenerated_ -> ['[j]']
											deflatorAndDerivatives_ -> ['[0]', '[0]']
											numberCashFlowsThisIndex_ -> ['[j]']
											amount -> ['[0]']
											totalCashFlowsThisIndex_ -> ['[j]']
											numerairesHeld_ -> ['[j]']
											-----------------------------------------------
											}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
									loop info: Size i=0  i < numberProducts_  ++i
											{
												loop info: Size f=0  f < factors  ++f
												{
													loop info: Integer r = numberRates_-2  r >=0   --r
													{
													-----------------------------------------------
													array table
													partials_ -> ['[f][r]', '[f]']
													thisPseudoRoot_ -> ['[r][f]']
													V_ -> ['[i]']
													-----------------------------------------------
													}
 												-----------------------------------------------
												array table
												partials_ -> ['[f]']
												V_ -> ['[i]']
												-----------------------------------------------
												}
												loop info: Size f=0  f < factors  ++f
													{
													-----------------------------------------------
													array table
													-----------------------------------------------
													}
 											-----------------------------------------------
											array table
											taus -> ['[j]']
											V_ -> ['[i]', '[i]', '[i]']
											-----------------------------------------------
											}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < numberProducts_  ++i
								{
									loop info: Size j=0  j < numberRates_  ++j
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								values -> ['[i]']
								numerairesHeld_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<numberOfPaths  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i =0  i < numberSteps_  ++i
								{
								-----------------------------------------------
								array table
								numeraires_ -> ['[i]']
								vegaBumps -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i <= numberSteps_  ++i
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i<numberProducts_  ++i
								{
									loop info: Size j=0  j < cashFlowsGenerated_[i].size()  ++j
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								cashFlowsGenerated_ -> ['[i]']
								numberCashFlowsThisIndex_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size j=0  j<cashFlowTimes.size()  ++j
								{
								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < numberCashFlowTimes_  ++i
								{
								-----------------------------------------------
								array table
								cashFlowTimes -> ['[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i < numberProducts_  ++i
								{
									loop info: Size j=0  j < numberCashFlowTimes_  ++j
									{
										loop info: Size k=0  k <= numberRates_  ++k
										{
										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									numberCashFlowsThisIndex_ -> ['[i][j]']
									-----------------------------------------------
									}
									loop info: Size l=0   l< numberRates_  ++l
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
									loop info: Size p=0  p < numberBumps_  ++p
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								numerairesHeld_ -> ['[i]']
								-----------------------------------------------
								}
								loop info: unsigned long i=0  i < numberRates_  ++i
								{
								-----------------------------------------------
								array table
								lastForwards_ -> ['[i]']
								currentForwards_ -> ['[i]', '[i]']
								-----------------------------------------------
								}
								loop info: Size i=0  i<numberProducts_  ++i
								{
									loop info: Size j=0  j<numberCashFlowsThisStep_[i]  ++j
									{
										loop info: Size l=0  l <= numberRates_  ++l
										{
										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									cashFlowsGenerated_ -> ['[i][j]']
									numberCashFlowsThisIndex_ -> ['[i]']
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Integer currentStep =  numberSteps_-1  currentStep >=0   --currentStep
								{
									loop info: Size k=0  k < cashFlowIndicesThisStep_[currentStep].size()  ++k
									{
										loop info: Size l=0  l < numberProducts_ && noFlows  ++l
										{
										-----------------------------------------------
										array table
										-----------------------------------------------
										}
										loop info: Size j=0  j < numberProducts_  ++j
											{
												loop info: Size i=1  i <= numberRates_  ++i
													{
													-----------------------------------------------
													array table
													totalCashFlowsThisIndex_ -> ['[j]', '[j]']
													deflatorAndDerivatives_ -> ['[0]', '[i]']
													V_ -> ['[j]']
													-----------------------------------------------
													}
												loop info: Size k=0  k < numberBumps_  ++k
												{
												-----------------------------------------------
												array table
												vegasThisPath_ -> ['[j][k]']
												fullDerivatives_ -> ['[i]']
												-----------------------------------------------
												}
 											-----------------------------------------------
											array table
											cashFlowsGenerated_ -> ['[j]']
											deflatorAndDerivatives_ -> ['[0]', '[0]']
											numberCashFlowsThisIndex_ -> ['[j]', '[j]']
											amount -> ['[0]']
											totalCashFlowsThisIndex_ -> ['[j]']
											numerairesHeld_ -> ['[j]']
											-----------------------------------------------
											}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
								loop info: Size i=0  i < numberProducts_  ++i
								{
									loop info: Size f=0  f < factors  ++f
									{
										loop info: Integer r = numberRates_-2  r >=0   --r
										{
										-----------------------------------------------
										array table
										partials_ -> ['[f][r]', '[f]']
										thisPseudoRoot_ -> ['[r][f]']
										V_ -> ['[i]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									partials_ -> ['[f]']
									V_ -> ['[i]']
									-----------------------------------------------
									}
									loop info: Size j=0  j < numberRates_  ++j
									{
										loop info: Size f=0  f < factors  ++f
										{
										-----------------------------------------------
										array table
										-----------------------------------------------
										}
										loop info: Size j=0  j < numberRates_  ++j
										{
										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									taus -> ['[j]']
									V_ -> ['[i]', '[i]', '[i]']
									-----------------------------------------------
									}
									loop info: Integer currentStep =  numberSteps_-1  currentStep >=0   --currentStep
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
									loop info: Size i=0  i < numberProducts_  ++i
									{
										loop info: Size j=0  j < numberRates_  ++j
										{
										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									vegasThisPath_ -> ['[i][k]']
									numerairesHeld_ -> ['[i]']
									-----------------------------------------------
									}
									loop info: Size i=0  i<numberOfPaths  ++i
									{
										loop info: Size j=0  j < values.size()  ++j
										{
										-----------------------------------------------
										array table
										values -> ['[j]', '[j]', '[j]']
										sums -> ['[j]']
										sumsqs -> ['[j]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
									loop info: Size j=0  j < values.size()  ++j
									{
									-----------------------------------------------
									array table
									errors -> ['[j]']
									sums -> ['[j]']
									sumsqs -> ['[j]']
									means -> ['[j]', '[j]', '[j]']
									-----------------------------------------------
									}
									loop info: Size i =0  i < numberRates_  ++i
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
									loop info: Size i =0  i < numberSteps_  ++i
									{
									-----------------------------------------------
									array table
									numeraires_ -> ['[i]']
									-----------------------------------------------
									}
									loop info: Size i=0  i <= numberSteps_  ++i
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
									loop info: Size i=0  i<numberProducts_  ++i
									{
										loop info: Size j=0  j < cashFlowsGenerated_[i].size()  ++j
										{
										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									cashFlowsGenerated_ -> ['[i]']
									numberCashFlowsThisIndex_ -> ['[i]']
									-----------------------------------------------
									}
									loop info: Size j=0  j<cashFlowTimes.size()  ++j
									{
									-----------------------------------------------
									array table
									-----------------------------------------------
									}
									loop info: Size i=0  i < numberCashFlowTimes_  ++i
									{
									-----------------------------------------------
									array table
									cashFlowTimes -> ['[i]']
									-----------------------------------------------
									}
									loop info: Size i=0  i < numberProducts_  ++i
									{
										loop info: Size j=0  j < numberSteps_  ++j
										{
										-----------------------------------------------
										array table
										elementary_vegas_ThisPath_ -> ['[i][j]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									elementary_vegas_ThisPath_ -> ['[i]']
									-----------------------------------------------
									}
									loop info: Size i=0  i < numberProducts_  ++i
									{
										loop info: Size j=0  j < numberCashFlowTimes_  ++j
										{
											loop info: Size k=0  k <= numberRates_  ++k
											{
											-----------------------------------------------
											array table
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										numberCashFlowsThisIndex_ -> ['[i][j]']
										-----------------------------------------------
										}
										loop info: Size l=0   l< numberRates_  ++l
										{
										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									numerairesHeld_ -> ['[i]']
									-----------------------------------------------
									}
									loop info: unsigned long i=0  i < numberRates_  ++i
									{
									-----------------------------------------------
									array table
									lastForwards_ -> ['[i]']
									currentForwards_ -> ['[i]', '[i]']
									-----------------------------------------------
									}
									loop info: Size i=0  i<numberProducts_  ++i
									{
										loop info: Size j=0  j<numberCashFlowsThisStep_[i]  ++j
										{
											loop info: Size l=0  l <= numberRates_  ++l
											{
											-----------------------------------------------
											array table
											-----------------------------------------------
											}
 										-----------------------------------------------
										array table
										cashFlowsGenerated_ -> ['[i][j]']
										numberCashFlowsThisIndex_ -> ['[i]']
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
									loop info: Integer currentStep =  numberSteps_-1  currentStep >=0   --currentStep
									{
										loop info: Size k=0  k < cashFlowIndicesThisStep_[currentStep].size()  ++k
										{
											loop info: Size l=0  l < numberProducts_ && noFlows  ++l
											{
											-----------------------------------------------
											array table
											-----------------------------------------------
											}
											loop info: Size j=0  j < numberProducts_  ++j
												{
													loop info: Size i=1  i <= numberRates_  ++i
														{
															loop info: Size i=1  i <= numberRates_  ++i
															{
																loop info: Size i=0  i < numberProducts_  ++i
																	{
																		loop info: Size f=0  f < factors  ++f
																		{
																			loop info: Integer r = numberRates_-2  r >=0   --r
																			{
																			-----------------------------------------------
																			array table
																			partials_ -> ['[f][r]', '[f]']
																			thisPseudoRoot_ -> ['[r][f]']
																			V_ -> ['[i]']
																			-----------------------------------------------
																			}
 																		-----------------------------------------------
																		array table
																		partials_ -> ['[f]']
																		V_ -> ['[i]']
																		-----------------------------------------------
																		}
																		loop info: Size j=0  j < numberRates_  ++j
																		{
																			loop info: Size f=0  f < factors  ++f
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j < numberRates_  ++j
																			{
																				loop info: Size j=0  j < numberSteps_  ++j
																				{
																					loop info: Size k=0  k < numberRates_  ++k
																					{
																						loop info: Size r=0  r < numberRates_  ++r
																						{
																						-----------------------------------------------
																						array table
																						jacobiansThisPaths_ -> ['[j][r][k][f]']
																						V_ -> ['[i]']
																						-----------------------------------------------
																						}
 																					-----------------------------------------------
																					array table
																					gaussians_ -> ['[j][f]']
																					jacobiansThisPaths_ -> ['[j][j][k][f]']
																					elementary_vegas_ThisPath_ -> ['[i][j][k][f]']
																					V_ -> ['[i]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < numberProducts_  ++i
																			{
																				loop info: Size j=0  j < numberRates_  ++j
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size k=0  k < numberSteps_  ++k
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			numerairesHeld_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numberOfPaths  ++i
																			{
																				loop info: Size j=0  j < values.size()  ++j
																				{
																				-----------------------------------------------
																				array table
																				values -> ['[j]', '[j]', '[j]']
																				sums -> ['[j]']
																				sumsqs -> ['[j]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j < values.size()  ++j
																			{
																			-----------------------------------------------
																			array table
																			errors -> ['[j]']
																			sums -> ['[j]']
																			sumsqs -> ['[j]']
																			means -> ['[j]', '[j]', '[j]']
																			-----------------------------------------------
																			}
																			loop info: Size p=0  p < numberProducts_  ++p
																			{
																				loop info: Size i=0  i < 1 + numberRates_  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size bump=0  bump<numberBumps_  ++bump
																				{
																					loop info: Size t=0  t < numberSteps_  ++t
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numberProducts_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<n  ++j
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<constrainedEvolvers_.size()  ++i
																			{
																				loop info: Size j=0  j<constrainedEvolvers_[i].size()  ++j
																				{
																				-----------------------------------------------
																				array table
																				constrainedEvolvers_ -> ['[i][j]', '[i][j]']
																				modifiedValues -> ['[i][j]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<modifiedValues.size()  ++i
																			{
																				loop info: Size j=0  j<modifiedValues[i].size()  ++j
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			modifiedValues -> ['[i]']
																			constrainedEvolvers_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numberOfPaths  ++i
																			{
																				loop info: Size j=0  j<diffWeights_.size()  ++j
																				{
																					loop info: Size k=0  k<diffWeights_[j].size()  ++k
																					{
																						loop info: Size l=0  l<N  ++l
																						{
																							loop info: Size n=1  n<weights.size()  ++n
																							{
																							-----------------------------------------------
																							array table
																							-----------------------------------------------
																							}
 																						-----------------------------------------------
																						array table
																						values -> ['[l]']
																						weights -> ['[0]']
																						results -> ['[l]']
																						-----------------------------------------------
																						}
 																					-----------------------------------------------
																					array table
																					modifiedStats -> ['[j][k]']
																					diffWeights_ -> ['[j][k]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numberProducts_  ++i
																			{
																				loop info: Size j=0  j<numberCashFlowsThisStep_[i]  ++j
																				{
																				-----------------------------------------------
																				array table
																				cashflows -> ['[j]', '[j]']
																				numerairesHeld_ -> ['[i]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			cashFlowsGenerated_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numerairesHeld_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=startIndex  i<endIndex  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size k=0  k<n  ++k
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<n  ++i
																			{
																				loop info: Size j=i  j<n  ++j
																				{
																				-----------------------------------------------
																				array table
																				tau -> ['[j]', '[j]', '[j]', '[j]', '[j]', '[j]']
																				jacobian -> ['[i][j]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<n  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<n  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<n  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<n  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<n  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<n  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<n  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size f=0  f < factors  ++f
																			{
																				loop info: Size j=startIndex  j < endIndex ++j
																				{
																				-----------------------------------------------
																				array table
																				thisPseudo -> ['[j][f]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nRates  ++i
																			{
																			-----------------------------------------------
																			array table
																			sample -> ['[i]']
																			indexes -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nRates  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numberProducts_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<cashFlowTimes.size()  ++j
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numberProducts_  ++i
																			{
																				loop info: Size j=0  j<numberCashFlowsThisStep_[i]  ++j
																				{
																				-----------------------------------------------
																				array table
																				cashflows -> ['[j]', '[j]']
																				numerairesHeld_ -> ['[i]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			cashFlowsGenerated_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numerairesHeld_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numberOfPaths  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<numberOfSteps  ++j
																			{
																			-----------------------------------------------
																			array table
																			evolutionTimes_ -> ['[j]']
																			firstAliveRate_ -> ['[j]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<n-1  i++
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0, j=0  i<evolutionTimes.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			rateTimes -> ['[j]']
																			evolutionTimes -> ['[i]']
																			numeraires -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0, j=0  i<n  ++i
																			{
																			-----------------------------------------------
																			array table
																			rateTimes -> ['[j]']
																			evolutionTimes -> ['[i]']
																			numeraires -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=begin  i<end  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=firstValidIndex  i<fwds.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=nCotSwapRates-1  i>firstValidIndex  --i
																			{
																			-----------------------------------------------
																			array table
																			discountFactors -> ['[i]']
																			cotSwapAnnuities -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=firstValidIndex  i<lastIndex  ++i
																			{
																			-----------------------------------------------
																			array table
																			taus -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=firstValidIndex+1  i<nConstMatSwapRates  ++i
																			{
																			-----------------------------------------------
																			array table
																			constMatSwapRates -> ['[i]']
																			constMatSwapAnnuities -> ['[i]', '[i]', '[i]']
																			ds -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < numberRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=before_+1  i<numberRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<before_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<=before_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<factors  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<steps  ++j
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<factors_  ++i
																			{
																			-----------------------------------------------
																			array table
																			bridgedVariates_ -> ['[i]']
																			orderedIndices_ -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j < nPaths  ++j
																			{
																				loop info: Size k=0  k < dim  ++k
																				{
																				-----------------------------------------------
																				array table
																				sample -> ['[k]']
																				variates -> ['[k][j]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			retVal -> ['[i]']
																			orderedIndices_ -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<factors_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<taus.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=alive_  i<numberOfRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			ups_ -> ['[i]']
																			downs_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: i=alive_  i<numberOfRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: i=alive_  i<numberOfRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			ups_ -> ['[i]']
																			downs_ -> ['[i]', '[i]']
																			drifts -> ['[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=alive_  i<numberOfRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size r=0  r<numberOfFactors_  ++r
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size r=0  r<numberOfFactors_  ++r
																			{
																			-----------------------------------------------
																			array table
																			e_ -> ['[r][i]', '[r]', '[r][i]']
																			pseudo_ -> ['[i][r]']
																			drifts -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=numeraire_  i<numberOfRates_  ++i
																			{
																				loop info: Size r=0  r<numberOfFactors_  ++r
																				{
																				-----------------------------------------------
																				array table
																				drifts -> ['[i]']
																				e_ -> ['[r][i]', '[r][i]', '[r]', '[r][i]']
																				tmp_ -> ['[i]', '[i]']
																				pseudo_ -> ['[i][r]', '[i][r]', '[i][r]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			drifts -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<taus.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=alive_  i<numberOfRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			ups_ -> ['[i]']
																			downs_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: i=alive_  i<numberOfRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: i=alive_  i<numberOfRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			ups_ -> ['[i]']
																			downs_ -> ['[i]', '[i]']
																			drifts -> ['[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=alive_  i<numberOfRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size r=0  r<numberOfFactors_  ++r
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size r=0  r<numberOfFactors_  ++r
																			{
																			-----------------------------------------------
																			array table
																			e_ -> ['[r][i]', '[r]', '[r][i]']
																			pseudo_ -> ['[i][r]']
																			drifts -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=numeraire_  i<numberOfRates_  ++i
																			{
																				loop info: Size r=0  r<numberOfFactors_  ++r
																				{
																				-----------------------------------------------
																				array table
																				drifts -> ['[i]']
																				e_ -> ['[r][i]', '[r][i]', '[r]', '[r][i]']
																				tmp_ -> ['[i]', '[i]']
																				pseudo_ -> ['[i][r]', '[i][r]', '[i][r]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			drifts -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<taus.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size k=0  k<numberOfFactors_  ++k
																			{
																				loop info: Integer j=numberOfRates_-2  j>=static_cast<Integer>(alive_)-1  --j
																				{
																				-----------------------------------------------
																				array table
																				wkaj_ -> ['[k]', '[k][j]', '[k]']
																				wkpj_ -> ['[k]', '[k]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			wkaj_ -> ['[k]']
																			wkpj1_ -> ['[k]']
																			-----------------------------------------------
																			}
																			loop info: Size k=0  k<numberOfFactors_  ++k
																			{
																				loop info: Size j=alive_  j<numberOfRates_  ++j
																				{
																				-----------------------------------------------
																				array table
																				wkajshifted_ -> ['[k][j]']
																				wkaj_ -> ['[k][j]']
																				wkpj_ -> ['[k]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j=alive_  j<numberOfRates_  ++j
																			{
																				loop info: Size k=0  k<numberOfFactors_  ++k
																				{
																				-----------------------------------------------
																				array table
																				wkajshifted_ -> ['[k][j]']
																				pseudo_ -> ['[j][k]']
																				drifts -> ['[j]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			drifts -> ['[j]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<taus.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=alive_  i<numberOfRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			ups_ -> ['[i]']
																			downs_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size k=0  k<PjPnWk_.rows()  ++k
																			{
																			-----------------------------------------------
																			array table
																			taus -> ['[j]']
																			wkaj_ -> ['[k]', '[k]', '[k][j]', '[k]', '[k][j]']
																			PjPnWk_ -> ['[k]', '[k]', '[k]', '[k]', '[k]']
																			-----------------------------------------------
																			}
																			loop info: Size j=alive_  j<numberOfRates_  ++j
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j=alive_  j<numberOfRates_  ++j
																			{
																				loop info: Size k=0  k<numberOfFactors_  ++k
																				{
																				-----------------------------------------------
																				array table
																				wkajN_ -> ['[k][j]']
																				pseudo_ -> ['[j][k]']
																				drifts -> ['[j]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			drifts -> ['[j]', '[j]']
																			-----------------------------------------------
																			}
																			loop info: Size i=numberOfRates_-1  i>first_  --i
																			{
																			-----------------------------------------------
																			array table
																			cmSwapAnnuities_ -> ['[i]', '[i]']
																			discRatios_ -> ['[i]', '[i]']
																			cmSwapRates_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=first_  i<numberOfRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=first_  i<numberOfRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: int j= static_cast<int>(firstCotAnnuityComped_)-1  j >=static_cast<int>(i)  --j
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=numberOfRates_-1  i>first_  --i
																			{
																			-----------------------------------------------
																			array table
																			discRatios_ -> ['[i]', '[i]']
																			cotAnnuities_ -> ['[i]', '[i]']
																			cotSwapRates_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Integer i=0  i < stepindex_+1  ++i
																			{
																			-----------------------------------------------
																			array table
																			correlations_ -> ['[i]']
																			rateonevols_ -> ['[i]']
																			ratetwohomogeneousvols_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Integer i=0  i < stepindex_+1  ++i
																			{
																			-----------------------------------------------
																			array table
																			ratetwohomogeneousvols_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<=static_cast<Size>(stepindex_)+1  ++i
																			{
																			-----------------------------------------------
																			array table
																			putativevols_ -> ['[i]']
																			ratetwohomogeneousvols_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Integer i =0  i < stepindex+1  ++i
																			{
																			-----------------------------------------------
																			array table
																			ratetwovols -> ['[i]', '[i]', '[i]']
																			ratetwohomogeneousvols -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i <=static_cast<Size>(stepindex)+1  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Integer i=0  i < stepindex+1  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i <=static_cast<Size>(stepindex)+1  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Integer i=0  i < stepindex+1  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size k=0  k < numberOfRates_  ++k
																			{
																				loop info: Size l=0  l < period  ++l, ++m
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i =0  i < oldEvolutionTimes.size() && oldEvolutionTimes[i]<= finalReset  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < rateTimes.size()-1  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size k = 0  k<numberOfSteps_  ++k
																			{
																				loop info: Size i=0  i<alive[k]  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			pseudoRoots_ -> ['[k]']
																			-----------------------------------------------
																			}
																			loop info: Size k=0, kk=0  k<numberOfSteps_  ++k
																			{
																				loop info:   corrTimes[kk]<evolTimes[k]  ++kk
																				{
																					loop info: Size i=0  i<numberOfRates_  ++i
																					{
																						loop info: Size j=i  j<numberOfRates_  ++j
																						{
																						-----------------------------------------------
																						array table
																						rateTimes -> ['[i]', '[j]']
																						corrMatrix -> ['[i][j]']
																						covariance -> ['[i][j]']
																						vols -> ['[i]', '[j]']
																						-----------------------------------------------
																						}
 																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<numberOfRates_  ++i
																				{
																					loop info: Size j=i  j<numberOfRates_  ++j
																					{
																					-----------------------------------------------
																					array table
																					rateTimes -> ['[i]', '[j]']
																					corrMatrix -> ['[i][j]']
																					covariance -> ['[i][j]']
																					vols -> ['[i]', '[j]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<numberOfRates_  ++i
																				{
																					loop info: Size j=i+1  j<numberOfRates_  ++j
																					{
																					-----------------------------------------------
																					array table
																					covariance -> ['[j][i]', '[i][j]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			pseudoRoots_ -> ['[k]', '[k]', '[k]', '[k]', '[k]']
																			evolTimes -> ['[k]', '[k]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numberOfRates  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numberOfRates  ++i
																			{
																			-----------------------------------------------
																			array table
																			rateTimes -> ['[i]']
																			initialRates -> ['[i]', '[i]']
																			displacedVolatilities -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<=resetIndex  ++i
																			{
																			-----------------------------------------------
																			array table
																			volatilities_ -> ['[i]']
																			variances_ -> ['[i]', '[i]']
																			rateTimes_ -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info:   i<capletNumber+1  ++i
																			{
																			-----------------------------------------------
																			array table
																			previousRateSolution -> ['[i]', '[i]']
																			homogeneousSolution -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<capletNumber+1  ++i
																			{
																			-----------------------------------------------
																			array table
																			previousRateSolution -> ['[i]']
																			correlations -> ['[i]']
																			targetArrayRestricted -> ['[i]']
																			homogeneousSolution -> ['[i]']
																			cylinderCentre -> ['[i]']
																			targetArray -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<capletNumber+1  ++i
																			{
																			-----------------------------------------------
																			array table
																			ei -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size k=0  k<capletNumber+1  ++k
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info:   i < arraySolution.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info:   i < solution.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<corrPseudo.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numberOfRates-1  ++i
																			{
																				loop info: Size j =0  j < i+2  ++j
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size k=0  k < i+1  k++
																				{
																					loop info: Size l=0  l < numberOfFactors  ++l
																					{
																					-----------------------------------------------
																					array table
																					corrPseudo -> ['[k][i][l]', '[k]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				correlations -> ['[k]']
																				-----------------------------------------------
																				}
																				loop info: Size k = i+2  k <invertedZedMatrix.columns()  ++k
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size j=0  j < i+2  ++j
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			rateTimes -> ['[i]']
																			capletVols -> ['[i]', '[i]']
																			invertedZedMatrix -> ['[i][i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size k=0  k<numberOfSteps  ++k
																			{
																				loop info: Size j=0  j<numberOfRates  ++j
																				{
																					loop info: Size i=0  i<numberOfFactors  ++i
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				newVols -> ['[j][k]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			corrPseudo -> ['[k]']
																			swapCovariancePseudoRoots -> ['[k]', '[k]', '[k]', '[k]', '[k]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < noBigRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < noBigRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < noBigRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			originalABCDVariances_ -> ['[i]', '[i]']
																			originalABCDVariancesScaled_ -> ['[i]']
																			scalingFactors_ -> ['[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < offset_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j < noBigRates_-1  ++j
																			{
																				loop info: Size i=0  i < period_  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			originalABCDVariancesScaled_ -> ['[j]']
																			-----------------------------------------------
																			}
																			loop info: Size i=offset_+(noBigRates_-1)*period_  i < noSmallRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<corrPseudo.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numberOfSteps  ++i
																			{
																				loop info: Size j=i  j<numberOfRates  ++j
																				{
																				-----------------------------------------------
																				array table
																				displacedSwapVariances -> ['[j]']
																				modifiedVariances -> ['[j]']
																				swapTimeInhomogeneousVariances -> ['[i][j]', '[i][j]']
																				originalVariances -> ['[j]']
																				var -> ['[i]', '[i]']
																				alpha -> ['[j]', '[j]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numberOfSteps  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numberOfSteps  ++i
																			{
																				loop info: Size j=0  j<numberOfRates  ++j
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			CovarianceSwapPseudos -> ['[i]', '[i]', '[i]']
																			CovarianceSwapCovs -> ['[i]', '[i]']
																			CovarianceSwapMarginalCovs -> ['[i]', '[i]']
																			corrPseudo -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numberOfRates  ++i
																			{
																				loop info: Size jj=0  jj<=i  ++jj
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: j=0  j<=static_cast<Integer>(i)-1  ++j
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size k=0  k<numberOfFactors  ++k
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
																				loop info: Size k=0  k<numberOfFactors  ++k
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																			-----------------------------------------------
																			array table
																			leftCovariance -> ['[i]']
																			swapTimeInhomogeneousVariances -> ['[j][i]', '[j]', '[j][i]', '[j]']
																			corrPseudo -> ['[j]', '[j]']
																			almostTotCovariance -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=1  i<numberOfSteps  ++i
																			{
																				loop info:   j <= static_cast<Integer>(i)-2  j++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size k = i+1  k < numberOfSteps  ++k
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size k = i+1  k < numberOfSteps  ++k
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size k = i+1  k < numberOfSteps  ++k
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			leftCovariance -> ['[i]']
																			almostTotVariance -> ['[i]', '[i]', '[i]']
																			swapTimeInhomogeneousVariances -> ['[j]', '[i][i]', '[i][i]']
																			totVariance -> ['[i]', '[i]']
																			almostTotCovariance -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info:   j <= static_cast<Integer>(i)-2  j++
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size k=0  k<numberOfSteps  ++k
																			{
																				loop info: Size j=0  j<numberOfRates  ++j
																				{
																					loop info: Size i=0  i<numberOfFactors  ++i
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				swapTimeInhomogeneousVariances -> ['[k][j]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			corrPseudo -> ['[k]']
																			swapCovariancePseudoRoots -> ['[k]', '[k]', '[k]', '[k]', '[k]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 1  i<displacements.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			displacements -> ['[i]', '[0]', '[i]', '[0]']
																			-----------------------------------------------
																			}
																			loop info: Size k = 0  k<numberOfSteps_  ++k
																			{
																				loop info: Size i=0  i<alive[k]  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			pseudoRoots_ -> ['[k]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 1  i<displacements.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			displacements -> ['[i]', '[0]', '[i]', '[0]']
																			-----------------------------------------------
																			}
																			loop info: Size k = 0  k<numberOfSteps_  ++k
																			{
																				loop info: Size i=0  i<alive[k]  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			pseudoRoots_ -> ['[k]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numberOfRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numberOfRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			mktCapletVols_ -> ['[i]', '[i]']
																			swaptionTotCovariance -> ['[i][i]']
																			mdlSwaptionVols_ -> ['[i]', '[i]']
																			capletTotCovariance -> ['[i][i]']
																			mdlCapletVols_ -> ['[i]', '[i]', '[i]']
																			rateTimes -> ['[i]', '[i]']
																			mktSwaptionVols_ -> ['[i]']
																			usedCapletVols_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numberOfRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size k=0, kk=0  k<numberOfSteps_  ++k
																			{
																				loop info:   corrTimes[kk]<evolTimes[k]  ++kk
																				{
																					loop info: Size i=0  i<numberOfRates_  ++i
																					{
																						loop info: Size j=i  j<numberOfRates_  ++j
																						{
																						-----------------------------------------------
																						array table
																						ks -> ['[i]', '[j]']
																						rateTimes -> ['[i]', '[j]']
																						corrMatrix -> ['[i][j]']
																						covariance -> ['[i][j]']
																						-----------------------------------------------
																						}
 																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<numberOfRates_  ++i
																				{
																					loop info: Size j=i  j<numberOfRates_  ++j
																					{
																					-----------------------------------------------
																					array table
																					ks -> ['[i]', '[j]']
																					rateTimes -> ['[i]', '[j]']
																					corrMatrix -> ['[i][j]']
																					covariance -> ['[i][j]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<numberOfRates_  ++i
																				{
																					loop info: Size j=i+1  j<numberOfRates_  ++j
																					{
																					-----------------------------------------------
																					array table
																					covariance -> ['[j][i]', '[i][j]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			pseudoRoots_ -> ['[k]', '[k]', '[k]', '[k]', '[k]']
																			evolTimes -> ['[k]', '[k]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < numberBigRates  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < numberBigRates  ++i
																			{
																			-----------------------------------------------
																			array table
																			marketSwaptionVols -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < numberBigRates  ++i
																			{
																			-----------------------------------------------
																			array table
																			swaptionTotCovariance -> ['[i][i]']
																			modelSwaptionVols -> ['[i]', '[i]', '[i]', '[i]']
																			scalingFactors -> ['[i]']
																			marketSwaptionVols -> ['[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < numberBigRates  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size k=0  k<numberOfSteps_  ++k
																			{
																			-----------------------------------------------
																			array table
																			covariancePseudoRoots_ -> ['[k]', '[k]', '[k]', '[k]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<corrPseudo.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numberOfRates-1  ++i
																			{
																				loop info: Size j =0  j < i+2  ++j
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size k=0  k < i+1  k++
																				{
																					loop info: Size l=0  l < numberOfFactors  ++l
																					{
																					-----------------------------------------------
																					array table
																					corrPseudo -> ['[k][i][l]', '[k]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				correlations -> ['[k]']
																				-----------------------------------------------
																				}
																				loop info: Size k = i+2  k <invertedZedMatrix.columns()  ++k
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			rateTimes -> ['[i]']
																			capletVols -> ['[i]', '[i]']
																			invertedZedMatrix -> ['[i][i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size k=0  k<numberOfSteps  ++k
																			{
																				loop info: Size j=0  j<numberOfRates  ++j
																				{
																					loop info: Size i=0  i<numberOfFactors  ++i
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				newVols -> ['[j][k]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			corrPseudo -> ['[k]']
																			swapCovariancePseudoRoots -> ['[k]', '[k]', '[k]', '[k]', '[k]']
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<steps  ++j
																			{
																				loop info: Size k=0  k<numberOfRates_  ++k
																				{
																				-----------------------------------------------
																				array table
																				fixed -> ['[k]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			alive_ -> ['[j]']
																			numeraires -> ['[j]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numberOfRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=alive  i<numberOfRates_  i++
																			{
																			-----------------------------------------------
																			array table
																			fixedDrift -> ['[i]']
																			drifts1_ -> ['[i]']
																			forwards_ -> ['[i]']
																			displacements_ -> ['[i]']
																			logForwards_ -> ['[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<steps  ++j
																			{
																				loop info: Size k=0  k<numberOfRates_  ++k
																				{
																				-----------------------------------------------
																				array table
																				fixed -> ['[k]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			alive_ -> ['[j]']
																			numeraires -> ['[j]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numberOfRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Integer i=numberOfRates_-1  i>=alive  --i
																			{
																				loop info: Size j=i+1  j<numberOfRates_  ++j
																				{
																				-----------------------------------------------
																				array table
																				g_ -> ['[j]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			fixedDrift -> ['[i]']
																			rateTaus_ -> ['[i]', '[i]']
																			displacements_ -> ['[i]', '[i]']
																			g_ -> ['[i]']
																			drifts1_ -> ['[i]']
																			logForwards_ -> ['[i]', '[i]', '[i]']
																			forwards_ -> ['[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<steps  ++j
																			{
																				loop info: Size k=0  k<numberOfRates_  ++k
																				{
																				-----------------------------------------------
																				array table
																				variances -> ['[k]']
																				fixed -> ['[k]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			alive_ -> ['[j]']
																			numeraires -> ['[j]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numberOfRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < startIndexOfSwapRate_.size()  ++i
																			{
																				loop info: Size j=0  j < numberOfRates_  ++j
																				{
																					loop info: Size k=0  k < numberOfFactors_  ++k
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				covariances -> ['[j]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			startIndexOfSwapRate_ -> ['[i]']
																			endIndexOfSwapRate_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: unsigned long i=0  i < rateConstraints_.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=alive  i<numberOfRates_  i++
																			{
																			-----------------------------------------------
																			array table
																			fixedDrift -> ['[i]']
																			drifts1_ -> ['[i]']
																			logForwards_ -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=alive  i<numberOfRates_  i++
																			{
																			-----------------------------------------------
																			array table
																			logForwards_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size k=0  k < numberOfFactors_  k++
																			{
																			-----------------------------------------------
																			array table
																			brownians_ -> ['[k]', '[k]']
																			-----------------------------------------------
																			}
																			loop info: Size i=alive  i<numberOfRates_  i++
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<steps  ++j
																			{
																				loop info: Size k=0  k<numberOfRates_  ++k
																				{
																				-----------------------------------------------
																				array table
																				fixed -> ['[k]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			alive_ -> ['[j]']
																			numeraires -> ['[j]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numberOfRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: i=alive  i<numberOfRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			fixedDrift -> ['[i]']
																			swapRates_ -> ['[i]']
																			drifts1_ -> ['[i]']
																			logSwapRates_ -> ['[i]', '[i]', '[i]']
																			displacements_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: i=alive  i<numberOfRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			drifts2_ -> ['[i]']
																			swapRates_ -> ['[i]']
																			drifts1_ -> ['[i]']
																			logSwapRates_ -> ['[i]', '[i]']
																			displacements_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<steps  ++j
																			{
																				loop info: Size k=0  k<numberOfRates_  ++k
																				{
																				-----------------------------------------------
																				array table
																				fixed -> ['[k]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			alive_ -> ['[j]']
																			numeraires -> ['[j]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numberOfRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info:  i = numberOfRates_-2  i >= alive   --i 
																			{
																				loop info:  Size j = i+1  j < numberOfRates_   ++j 
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			fixedDrift -> ['[i]']
																			rateTaus_ -> ['[i]', '[i]']
																			displacements_ -> ['[i]', '[i]']
																			g_ -> ['[i]']
																			logForwards_ -> ['[i]', '[i]', '[i]']
																			forwards_ -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<steps  ++j
																			{
																				loop info: Size k=0  k<numberOfRates_  ++k
																				{
																				-----------------------------------------------
																				array table
																				fixed -> ['[k]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			alive_ -> ['[j]']
																			numeraires -> ['[j]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numberOfRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: i=alive  i<numberOfRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			fixedDrift -> ['[i]']
																			drifts1_ -> ['[i]']
																			forwards_ -> ['[i]']
																			displacements_ -> ['[i]']
																			logForwards_ -> ['[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: i=alive  i<numberOfRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			drifts2_ -> ['[i]']
																			drifts1_ -> ['[i]']
																			forwards_ -> ['[i]']
																			displacements_ -> ['[i]']
																			logForwards_ -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<steps  ++j
																			{
																				loop info: Size k=0  k<numberOfRates_  ++k
																				{
																				-----------------------------------------------
																				array table
																				fixed -> ['[k]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			alive_ -> ['[j]']
																			numeraires -> ['[j]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numberOfRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: i=alive  i<numberOfRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			fixedDrift -> ['[i]']
																			swapRates_ -> ['[i]']
																			drifts1_ -> ['[i]']
																			logSwapRates_ -> ['[i]', '[i]', '[i]']
																			displacements_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: i=alive  i<numberOfRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			drifts2_ -> ['[i]']
																			swapRates_ -> ['[i]']
																			drifts1_ -> ['[i]']
																			logSwapRates_ -> ['[i]', '[i]']
																			displacements_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<steps  ++j
																			{
																				loop info: Size k=0  k<numberOfRates_  ++k
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			alive_ -> ['[j]']
																			numeraires -> ['[j]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numberOfRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: i=alive  i<numberOfRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			drifts1_ -> ['[i]']
																			forwards_ -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: i=alive  i<numberOfRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			drifts2_ -> ['[i]']
																			drifts1_ -> ['[i]']
																			forwards_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<steps  ++j
																			{
																				loop info: Size k=0  k<numberOfRates_  ++k
																				{
																				-----------------------------------------------
																				array table
																				fixed -> ['[k]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			alive_ -> ['[j]']
																			numeraires -> ['[j]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numberOfRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info:  i = alive  i < numberOfRates_   ++i 
																			{
																			-----------------------------------------------
																			array table
																			fixedDrift -> ['[i]']
																			drifts1_ -> ['[i]']
																			forwards_ -> ['[i]']
																			displacements_ -> ['[i]']
																			logForwards_ -> ['[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info:  i = alive  i < numberOfRates_   ++i 
																			{
																			-----------------------------------------------
																			array table
																			forwards_ -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info:  i = alive  i < numberOfRates_   ++i 
																			{
																			-----------------------------------------------
																			array table
																			drifts2_ -> ['[i]']
																			drifts1_ -> ['[i]']
																			forwards_ -> ['[i]']
																			displacements_ -> ['[i]']
																			logForwards_ -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<steps  ++j
																			{
																				loop info: Size k=0  k<numberOfRates_  ++k
																				{
																				-----------------------------------------------
																				array table
																				fixed -> ['[k]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			alive_ -> ['[j]']
																			numeraires -> ['[j]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < volFactorsPerStep_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numberOfRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0, j=0, k=0  i < allBrownians_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			allBrownians_ -> ['[i]']
																			volBrownians_ -> ['[j]']
																			-----------------------------------------------
																			}
																			loop info: Size i=alive  i<numberOfRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			fixedDrift -> ['[i]']
																			drifts1_ -> ['[i]']
																			forwards_ -> ['[i]']
																			displacements_ -> ['[i]']
																			logForwards_ -> ['[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=alive  i<numberOfRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			drifts2_ -> ['[i]']
																			drifts1_ -> ['[i]']
																			forwards_ -> ['[i]']
																			displacements_ -> ['[i]']
																			logForwards_ -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info:   j < numberSubSteps_  ++j
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=1  i < evolutionTimes.size()  ++i
																			{
																				loop info: Size k=0  k < numberSubSteps_  ++k
																				{
																				-----------------------------------------------
																				array table
																				dt_ -> ['[j]']
																				eMinuskDt_ -> ['[j]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			evolutionTimes -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j < numberSubSteps_  ++j
																			{
																			-----------------------------------------------
																			array table
																			variates -> ['[j]']
																			-----------------------------------------------
																			}
																			loop info: Size k=0  k < numberSubSteps_  ++k
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size k = 0  k<fwdCorrMatrices.size()  ++k
																			{
																				loop info: Size i=0  i<numberOfRates_  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			fwdCorrMatrices -> ['[k]']
																			swapCorrMatrices_ -> ['[k]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nbRows  ++i
																			{
																				loop info: Size j=0  j<i  ++j
																					{
																					-----------------------------------------------
																					array table
																					rateTimes -> ['[j]', '[i]', '[j]']
																					correlations -> ['[i][j]', '[j][i]']
																					-----------------------------------------------
																					}
 																			-----------------------------------------------
																			array table
																			rateTimes -> ['[i]']
																			correlations -> ['[i][i]']
																			-----------------------------------------------
																			}
																			loop info: Size k=1  k<times_.size()  ++k
																			{
																			-----------------------------------------------
																			array table
																			correlations_ -> ['[k]']
																			times_ -> ['[k]']
																			-----------------------------------------------
																			}
																			loop info: Size k=0  k<correlations.size()  ++k
																			{
																				loop info: Size i=k  i<numberOfRates  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=k  i<numberOfRates  ++i
																				{
																					loop info: Size j=k  j<i  ++j
																					{
																					-----------------------------------------------
																					array table
																					correlations -> ['[k][i][j]', '[k][j][i]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<evolutionTimes.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			isExerciseTime_ -> ['[i]']
																			evolutionTimes -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: i=0  i<relevantTimes_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			isRebateTime_ -> ['[i]']
																			relevantTimes_ -> ['[i]']
																			isExerciseTime_ -> ['[i]', '[i]']
																			exerciseIndex_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: i=0  i<rebateTimes.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: i=0  i<controlTimes.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: i=0  i<basisValues_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<exerciseTimes.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			rateTimes -> ['[j]']
																			rateIndex_ -> ['[i]']
																			exerciseTimes -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<exerciseTimes.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			rateTimes -> ['[j]']
																			rateIndex_ -> ['[i]']
																			exerciseTimes -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: i=0  i<n  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: i=0  i<n  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: i=0  i<n  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: i=0  i<evolutionTimes.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			isRebateTime -> ['[i]']
																			isExerciseTime -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: i=0  i<collectedData.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: i=0  i<numberOfPaths  ++i
																			{
																				loop info: Size j=0  j<numberCashFlowsThisStep[0]  ++j
																						{
																						-----------------------------------------------
																						array table
																						cashFlowsGenerated -> ['[0][j]']
																						-----------------------------------------------
																						}
																				loop info: Size j = nextExercise  j < exercises  ++j
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			collectedData -> ['[0][i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0 i<isExerciseTime_.size() i++
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<exerciseTimes.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			rateTimes -> ['[j]']
																			rateIndex_ -> ['[i]']
																			exerciseTimes -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<exerciseTimes.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			rateTimes -> ['[j]']
																			rateIndex_ -> ['[i]']
																			exerciseTimes -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<N  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<lastSavedStep_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numberOfProducts_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<n  ++j
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<outerPaths  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size k=0  k<numberOfSteps_  ++k
																			{
																			-----------------------------------------------
																			array table
																			isExerciseTime_ -> ['[k]']
																			-----------------------------------------------
																			}
																			loop info: Size i=beginProduct  i<endProduct  ++i
																			{
																				loop info: Size j=0  j<numberCashFlowsThisStep_[i]  ++j
																				{
																				-----------------------------------------------
																				array table
																				cashflows -> ['[j]', '[j]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			cashFlowsGenerated_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<n  ++i
																			{
																			-----------------------------------------------
																			array table
																			relevanceRates -> ['[i]']
																			evolutionTimes -> ['[i]']
																			rateTimes_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<n  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: const_iterator i=components_.begin()  i!=components_.end()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: const_iterator i=components_.begin()  i!=components_.end()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: iterator i=components_.begin()  i!=components_.end()  ++i, ++n
																			{
																				loop info: Size j=0  j<i->product->numberOfProducts()  ++j
																					{
																						loop info: Size k=0  k<i->numberOfCashflows[j]  ++k
																						{
																						-----------------------------------------------
																						array table
																						cashflows -> ['[j][k]']
																						-----------------------------------------------
																						}
 																					-----------------------------------------------
																					array table
																					numberOfCashflows -> ['[j]']
																					-----------------------------------------------
																					}
																				loop info: Size j=0  j<i->product->numberOfProducts()  ++j
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			isInSubset_ -> ['[n]']
																			-----------------------------------------------
																			}
																			loop info: const_iterator i=components_.begin()  i!=components_.end()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: iterator i=components_.begin()  i!=components_.end()  ++i, ++n
																			{
																				loop info: Size j=0  j<i->product->numberOfProducts()  ++j
																					{
																						loop info: Size k=0  k<i->numberOfCashflows[j]  ++k
																						{
																						-----------------------------------------------
																						array table
																						cashflows -> ['[j][k]']
																						cashFlowsGenerated -> ['[0]']
																						-----------------------------------------------
																						}
 																					-----------------------------------------------
																					array table
																					numberOfCashflows -> ['[j]']
																					numberCashFlowsThisStep -> ['[0]']
																					-----------------------------------------------
																					}
 																			-----------------------------------------------
																			array table
																			isInSubset_ -> ['[n]']
																			-----------------------------------------------
																			}
																			loop info: iterator i=components_.begin()  i!=components_.end()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: i=components_.begin()  i!=components_.end()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: i=components_.begin()  i!=components_.end()  ++i
																			{
																				loop info: Size j=0  j<productTimes.size()  ++j
																				{
																				-----------------------------------------------
																				array table
																				timeIndices -> ['[j]']
																				productTimes -> ['[j]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numberCashFlowsThisStep.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < paymentTimesFloating_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=currentIndex_ i<lastIndex_ i++
																			{
																			-----------------------------------------------
																			array table
																			genCashFlows -> ['[i][0]', '[i][0]', '[i][1]', '[i][1]']
																			numberCashFlowsThisStep -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < cashFlowsGenerated_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < numberOfProducts_  ++i
																			{
																			-----------------------------------------------
																			array table
																			cashFlowsGenerated_ -> ['[i][j]', '[i][j]']
																			amount -> ['[0]']
																			cashFlowsGenerated -> ['[i][j]', '[i][j]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numberOfProducts_  ++i
																			{
																			-----------------------------------------------
																			array table
																			genCashFlows -> ['[i][0]', '[i][0]']
																			numberCashFlowsThisStep -> ['[i]']
																			amounts_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < swaptionPaymentTimes_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < numberCashFlowsThisStep.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: unsigned long i=0  i < numberPeriods  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0 i<=currentIndex_ i++
																			{
																			-----------------------------------------------
																			array table
																			genCashFlows -> ['[i][0]', '[i][0]', '[i][1]', '[i][1]']
																			numberCashFlowsThisStep -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=1  i <= numberRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size k=currentIndex_  k < numberRates_  ++k
																			{
																				loop info: Size l=k  l < numberRates_  ++l
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			rateTimes_ -> ['[k]', '[k]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < numberRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=1  i <= numberRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size k=currentIndex_  k < numberRates_  ++k
																			{
																			-----------------------------------------------
																			array table
																			forwards_ -> ['[k]', '[k]', '[k]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < numberRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=1  i <= numberRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < numberRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=1  i <= numberRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i <= currentIndex_  ++i
																			{
																			-----------------------------------------------
																			array table
																			accruals_ -> ['[i]']
																			amount -> ['[0]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < numberRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j < startsAndEnds_.size()  ++j
																			{
																			-----------------------------------------------
																			array table
																			startsAndEnds_ -> ['[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i <  innerCashFlowsGenerated_.size()  ++i
																			{
																				loop info: Size j=0  j < underlyingCaplets_.maxNumberOfCashFlowsPerProductPerStep()  ++j
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			innerCashFlowsGenerated_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size k=0  k < startsAndEnds_.size()  ++k
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j < numberRates_  ++j
																			{
																				loop info: Size k=0  k < startsAndEnds_.size()  ++k
																					{
																						loop info: Size l=0  l < innerCashFlowSizes_[j]  ++l
																							{
																							-----------------------------------------------
																							array table
																							-----------------------------------------------
																							}
 																					-----------------------------------------------
																					array table
																					startsAndEnds_ -> ['[k]', '[k]']
																					-----------------------------------------------
																					}
 																			-----------------------------------------------
																			array table
																			innerCashFlowSizes_ -> ['[j]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numberOfProducts_  ++i
																			{
																				loop info: Size k=1  k <= evolution_.numberOfRates()  ++k
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			amount -> ['[0]']
																			numberCashFlowsThisStep -> ['[i]']
																			cashFlowsGenerated -> ['[i][0]', '[i][0]']
																			amounts_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=1  i <= lastIndex_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < lastIndex_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<numberCashFlowsThisStep.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=1  i <= numberRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < numberRates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size indexOfTime=0 indexOfTime<lastIndex_ indexOfTime++
																			{
																				loop info: Size i=0 i<=indexOfTime i++
																				{
																				-----------------------------------------------
																				array table
																				genCashFlows -> ['[i]', '[i]', '[i]', '[i]']
																				numberCashFlowsThisStep -> ['[i]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<payoffs_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			accruals_ -> ['[i]']
																			genCashFlows -> ['[i][0]', '[i][0]']
																			numberCashFlowsThisStep -> ['[i]']
																			payoffs_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<strikes_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			accruals_ -> ['[i]']
																			genCashFlows -> ['[i][0]', '[i][0]']
																			strikes_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size indexOfTime=0 indexOfTime<lastIndex_ indexOfTime++
																			{
																				loop info: Size i=indexOfTime i<lastIndex_ i++
																				{
																				-----------------------------------------------
																				array table
																				genCashFlows -> ['[i]', '[i]', '[i]', '[i]']
																				numberCashFlowsThisStep -> ['[i]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size s=0  s < steps  ++s
																			{
																				loop info: Size f=0  f < factors  ++f
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j < allBumps_.size()  ++j
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < associatedVolStructure_->numberOfRates()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j < associatedVolStructure_->numberOfSteps()  ++j
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size k=0  k < allBumps_.size()  ++k
																			{
																				loop info: Size f=allBumps_[k].factorBegin()  f <  allBumps_[k].factorEnd()  ++f
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size s =0  s < associatedVolStructure_->numberOfSteps()  ++s
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < associatedVolStructure_->numberOfRates()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j < associatedVolStructure_->numberOfSteps()  ++j
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size k=0  k < allBumps_.size()  ++k
																			{
																				loop info: Size f=allBumps_[k].factorBegin()  f <  allBumps_[k].factorEnd()  ++f
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size k=0   k < bumps_.numberBumps()  ++k
																			{
																				loop info: Size i= bumps_.allBumps()[k].stepBegin()  i < bumps_.allBumps()[k].stepEnd()  ++i
																				{
																					loop info: Size f= bumps_.allBumps()[k].factorBegin()  f < bumps_.allBumps()[k].factorEnd()  ++f
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			derivatives_ -> ['[j][k]']
																			-----------------------------------------------
																			}
																			loop info: Size k=0   k < bumps_.numberBumps()  ++k
																			{
																				loop info: Size i= bumps_.allBumps()[k].stepBegin()  i < bumps_.allBumps()[k].stepEnd()  ++i
																				{
																					loop info: Size f= bumps_.allBumps()[k].factorBegin()  f < bumps_.allBumps()[k].factorEnd()  ++f
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size k=0  k < bumps_.numberBumps()  ++k
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i <swaptions_.size()+caps_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < theBumps.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0   i< numberSteps  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size instrument=0  instrument < projector.validVectors().size()  ++instrument
																			{
																				loop info: Size cluster =0  cluster< bumpClusters.size()  ++cluster
																					{
																						loop info: Size step = bumpClusters[cluster].stepBegin()  step <  bumpClusters[cluster].stepEnd()  ++step
																						{
																						-----------------------------------------------
																						array table
																						-----------------------------------------------
																						}
 																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < pseudoBumps.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			pseudoBumps -> ['[i]', '[i]', '[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i =0  i < numberBumps_  ++i
																			{
																				loop info: Size j =0  j < aliveIndex_  ++j
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size j=aliveIndex_  j < numberRates  ++j
																				{
																					loop info: Size k=0  k < factors_  ++k
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
																					loop info: Size k=0  k < factors_  ++k
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				drifts_ -> ['[j]']
																				displacements_ -> ['[j]', '[j]']
																				newRates -> ['[j]']
																				oldRates -> ['[j]']
																				bumpedRates_ -> ['[j]', '[j]', '[j]', '[j]', '[j]', '[j]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			driftsComputers_ -> ['[i]']
																			pseudoBumped_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < pseudoBumps.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			pseudoBumps -> ['[i]', '[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < numberRates  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j=aliveIndex_  j < numberRates  ++j
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size f=0  f < factors_  ++f
																			{
																				loop info: Size j= aliveIndex_+1  j < numberRates  ++j
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size f=0  f < factors_  ++f
																			{
																				loop info: Size k= aliveIndex_  k < j   ++k
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size k= j+1  k < numberRates   ++k
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			displacements_ -> ['[j]']
																			taus_ -> ['[j]', '[j]']
																			ratios_ -> ['[j]']
																			pseudoRoot_ -> ['[j][f]', '[j][f]']
																			e_ -> ['[j][f]']
																			gaussians -> ['[f]']
																			newRates -> ['[j]']
																			allDerivatives_ -> ['[j][j][f]']
																			-----------------------------------------------
																			}
																			loop info: Size i =0  i < numberBumps_  ++i
																			{
																				loop info:   j < aliveIndex_  ++j
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size k=aliveIndex_  k < numberRates  ++k
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j < B.size()  ++j
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j=aliveIndex_  j < numberRates  ++j
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size f=0  f < factors_  ++f
																			{
																				loop info: Size j= aliveIndex_+1  j < numberRates  ++j
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j < aliveIndex_  ++j
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size f=0  f < factors_  ++f
																			{
																				loop info: Size k= aliveIndex_  k < j   ++k
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size k= 0  k < aliveIndex_   ++k
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size k= j+1  k < numberRates   ++k
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			displacements_ -> ['[j]']
																			taus_ -> ['[j]', '[j]']
																			ratios_ -> ['[j]']
																			pseudoRoot_ -> ['[j][f]', '[j][f]']
																			e_ -> ['[j][f]']
																			gaussians -> ['[f]']
																			newRates -> ['[j]']
																			-----------------------------------------------
																			}
																			loop info: Size j=startIndex  j < endIndex  ++j
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size rate=startIndex  rate<endIndex  ++rate
																			{
																				loop info: Size f =0  f < factors  ++f
																				{
																					loop info: Size rate2 = startIndex  rate2<endIndex  ++rate2
																					{
																					-----------------------------------------------
																					array table
																					zed -> ['[0]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				zed -> ['[0]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info:  Size rate=startIndex  rate<endIndex  ++rate
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info:   index < inputModel->evolution().numberOfSteps()  ++index
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < annuities_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			expiries_ -> ['[i]']
																			currentRates_ -> ['[i]']
																			annuities_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < annuities_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			expiries_ -> ['[i]', '[i]']
																			currentRates_ -> ['[i]']
																			annuities_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size j = startIndex  j < endIndex  ++j
																			{
																			-----------------------------------------------
																			array table
																			totalCovariance -> ['[j][j]', '[j][j]']
																			-----------------------------------------------
																			}
																			loop info: Size step =0  step < inputModel->evolution().numberOfSteps()  ++step
																			{
																				loop info: Size f=0  f < factors  ++f
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size step =0  step < inputModel->evolution().numberOfSteps()  ++step
																			{
																				loop info: Size f=0  f < factors  ++f
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Date d = previousWednesday(date)  d<date  ++d
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<n  ++i
																			{
																			-----------------------------------------------
																			array table
																			dates -> ['[i]']
																			rates -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<assetNumber_  ++i
																			{
																			-----------------------------------------------
																			array table
																			tmp -> ['[i]']
																			path -> ['[i][t]']
																			-----------------------------------------------
																			}
																			loop info: j = 0  j < numAssets  j++
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<arguments_.fixingDates.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			arguments_.fixingDates -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<arguments_.fixingDates.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			arguments_.fixingDates -> ['[i]', '[0]', '[0]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=pastFixings+1  i<numberOfFixings  i++
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=1  i<n+1  i++
																			{
																			-----------------------------------------------
																			array table
																			path -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: i=0  i<arguments_.fixingDates.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			arguments_.fixingDates -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: i=pastFixings+1  i<numberOfFixings  i++
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i = 2   i < n  i++
																			{
																			-----------------------------------------------
																			array table
																			path -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 1  i < resetDates.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			resetDates -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 1  i < resetDates.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			resetDates -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: i=0  i<n-1  i++
																			{
																			-----------------------------------------------
																			array table
																			path -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: i=0  i<n-1  i++
																			{
																			-----------------------------------------------
																			array table
																			path -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<stoppingTimes_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			stoppingTimes_ -> ['[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<stoppingTimes_.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			stoppingTimes_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<values_.size()  j++
																			{
																			-----------------------------------------------
																			array table
																			grid -> ['[j]']
																			values_ -> ['[j]', '[j]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<arguments_.exercise->dates().size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: i=1  i < T  ++i
																			{
																			-----------------------------------------------
																			array table
																			m3ai -> ['[i]']
																			m1ai -> ['[i]']
																			m2ai -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: i = 0  i < T  ++i
																			{
																				loop info: j = 0  j < T-i-1  ++j
																				{
																					loop info: k = 0  k < T-i-j-2  ++k
																					{
																					-----------------------------------------------
																					array table
																					m1ai -> ['[k]', '[k]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				m1ai -> ['[j]', '[j]', '[j]', '[j]']
																				m2ai -> ['[j]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			m3ai -> ['[i]']
																			m1ai -> ['[i]']
																			m2ai -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j < states.size()  ++j
																			{
																			-----------------------------------------------
																			array table
																			states -> ['[j]']
																			path -> ['[j]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < cachedArgs2results_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			cachedArgs2results_ -> ['[i]', '[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < strikes_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			strikes_ -> ['[i]', '[i]']
																			cachedArgs2results_ -> ['[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < strikes_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			strikes_ -> ['[i]']
																			cachedArgs2results_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < cachedArgs2results_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			cachedArgs2results_ -> ['[i]', '[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < strikes_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			strikes_ -> ['[i]', '[i]']
																			cachedArgs2results_ -> ['[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: i=0  i<arguments_.cashFlow.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: i = 0  i < arguments_.cashFlow.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			arguments_.cashFlow -> ['[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i <timeGrid_.size()-1  ++i
																			{
																			-----------------------------------------------
																			array table
																			timeGrid_ -> ['[i]']
																			r_ -> ['[i]']
																			q_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=timeGrid_.size()-1  i > 0  --i
																			{
																			-----------------------------------------------
																			array table
																			timeGrid_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=1  i <= n  ++i
																			{
																			-----------------------------------------------
																			array table
																			timeGrid -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: i = 0  i < n-1  i++
																			{
																			-----------------------------------------------
																			array table
																			timeGrid -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: i = 0  i < n-1  i++
																			{
																			-----------------------------------------------
																			array table
																			timeGrid -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: i = 0  i < n-1  i++
																			{
																			-----------------------------------------------
																			array table
																			timeGrid -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: i = 0  i < n-1  i++
																			{
																			-----------------------------------------------
																			array table
																			timeGrid -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: i = 1  i < n  i++
																			{
																			-----------------------------------------------
																			array table
																			path -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: i = 1  i < n  i++
																			{
																			-----------------------------------------------
																			array table
																			path -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: i = 1  i < n  i++
																			{
																			-----------------------------------------------
																			array table
																			path -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: i = 1  i < n  i++
																			{
																			-----------------------------------------------
																			array table
																			path -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<stoppingTimes_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			stoppingTimes_ -> ['[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<stoppingTimes_.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			stoppingTimes_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<optvalues.size()  j++
																			{
																			-----------------------------------------------
																			array table
																			optvalues -> ['[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]']
																			grid -> ['[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]', '[j]']
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<optvalues.size()-1  ++j
																			{
																			-----------------------------------------------
																			array table
																			grid -> ['[j]', '[j]', '[j]', '[j]']
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<optvalues.size()-1  ++j
																			{
																			-----------------------------------------------
																			array table
																			grid -> ['[j]', '[j]', '[j]', '[j]']
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<optvalues.size()-1  ++j
																			{
																			-----------------------------------------------
																			array table
																			optvalues -> ['[j]', '[j]']
																			grid -> ['[j]', '[j]', '[j]', '[j]']
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<optvalues.size()-1  ++j
																			{
																			-----------------------------------------------
																			array table
																			optvalues -> ['[j]', '[j]']
																			grid -> ['[j]', '[j]', '[j]', '[j]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<optionlets  ++i
																			{
																			-----------------------------------------------
																			array table
																			arguments_.capRates -> ['[i]']
																			arguments_.floorRates -> ['[i]']
																			arguments_.forwards -> ['[i]']
																			stdDevs -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
																			arguments_.gearings -> ['[i]']
																			vegas -> ['[i]', '[i]', '[i]', '[i]']
																			values -> ['[i]', '[i]', '[i]', '[i]']
																			arguments_.endDates -> ['[i]']
																			arguments_.accrualTimes -> ['[i]']
																			arguments_.fixingDates -> ['[i]']
																			arguments_.nominals -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nPeriods  i++
																			{
																			-----------------------------------------------
																			array table
																			arguments_.floorRates -> ['[i]', '[i]']
																			arguments_.forwards -> ['[i]']
																			arguments_.startDates -> ['[i]']
																			arguments_.gearings -> ['[i]', '[i]', '[i]', '[i]']
																			arguments_.accrualTimes -> ['[i]']
																			arguments_.endDates -> ['[i]']
																			arguments_.fixingDates -> ['[i]']
																			arguments_.capRates -> ['[i]', '[i]']
																			arguments_.nominals -> ['[i]', '[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<optionlets  ++i
																			{
																			-----------------------------------------------
																			array table
																			arguments_.capRates -> ['[i]']
																			arguments_.floorRates -> ['[i]']
																			arguments_.forwards -> ['[i]']
																			stdDevs -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
																			arguments_.gearings -> ['[i]']
																			vegas -> ['[i]', '[i]', '[i]', '[i]']
																			values -> ['[i]', '[i]', '[i]', '[i]']
																			arguments_.endDates -> ['[i]']
																			arguments_.accrualTimes -> ['[i]']
																			arguments_.fixingDates -> ['[i]']
																			arguments_.nominals -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<startTimes_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<endTimes_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<startTimes_.size()  i++
																			{
																				loop info: Size j=0  j<values_.size()  j++
																						{
																						-----------------------------------------------
																						array table
																						-----------------------------------------------
																						}
																				loop info: Size j=0  j<values_.size()  j++
																						{
																						-----------------------------------------------
																						array table
																						-----------------------------------------------
																						}
 																			-----------------------------------------------
																			array table
																			arguments_.floorRates -> ['[i]']
																			endTimes_ -> ['[i]']
																			arguments_.gearings -> ['[i]']
																			arguments_.accrualTimes -> ['[i]']
																			arguments_.capRates -> ['[i]']
																			arguments_.nominals -> ['[i]']
																			startTimes_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<endTimes_.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			arguments_.floorRates -> ['[i]']
																			arguments_.forwards -> ['[i]']
																			endTimes_ -> ['[i]']
																			arguments_.gearings -> ['[i]']
																			arguments_.accrualTimes -> ['[i]']
																			arguments_.capRates -> ['[i]']
																			arguments_.nominals -> ['[i]']
																			startTimes_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<startTimes_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<endTimes_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<fixingTimes_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i<fixingTimes_.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			args_.gearings -> ['[i]']
																			args_.accrualTimes -> ['[i]']
																			endTimes_ -> ['[i]']
																			args_.nominals -> ['[i]']
																			fixingTimes_ -> ['[i]']
																			args_.capRates -> ['[i]']
																			args_.forwards -> ['[i]']
																			args_.floorRates -> ['[i]']
																			startTimes_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < arguments_.spreads.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < optionlets  ++i
																			{
																				loop info: Size j = 0  j < z.size()  j++
																							{
																							-----------------------------------------------
																							array table
																							arguments_.capRates -> ['[i]']
																							arguments_.accrualTimes -> ['[i]', '[i]']
																							-----------------------------------------------
																							}
																				loop info: Size j = 0  j < z.size() - 1  j++
																							{
																							-----------------------------------------------
																							array table
																							-----------------------------------------------
																							}
																				loop info: Size j = 0  j < z.size()  j++
																							{
																							-----------------------------------------------
																							array table
																							arguments_.floorRates -> ['[i]']
																							arguments_.accrualTimes -> ['[i]', '[i]']
																							-----------------------------------------------
																							}
																				loop info: Size j = 0  j < z.size() - 1  j++
																							{
																							-----------------------------------------------
																							array table
																							-----------------------------------------------
																							}
 																			-----------------------------------------------
																			array table
																			arguments_.floorRates -> ['[i]']
																			arguments_.forwards -> ['[i]', '[i]']
																			arguments_.indexes -> ['[i]']
																			arguments_.startDates -> ['[i]']
																			arguments_.gearings -> ['[i]']
																			arguments_.accrualTimes -> ['[i]', '[i]']
																			values -> ['[i]', '[i]', '[i]', '[i]', '[i]']
																			arguments_.endDates -> ['[i]']
																			arguments_.capRates -> ['[i]']
																			arguments_.fixingDates -> ['[i]']
																			arguments_.nominals -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<n  ++i
																			{
																			-----------------------------------------------
																			array table
																			results_.endDiscounts -> ['[i]', '[i]', '[i]']
																			arguments_.legs -> ['[i]', '[i]', '[i]', '[i]']
																			results_.legNPV -> ['[i]', '[i]', '[i]']
																			results_.startDiscounts -> ['[i]', '[i]', '[i]']
																			results_.legBPS -> ['[i]', '[i]']
																			arguments_.payer -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<fixedResetTimes_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<fixedPayTimes_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<floatingResetTimes_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<floatingPayTimes_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<fixedResetTimes_.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			fixedResetTimes_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<fixedPayTimes_.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			fixedPayTimes_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<floatingResetTimes_.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			floatingResetTimes_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<floatingPayTimes_.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			floatingPayTimes_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<floatingResetTimes_.size()  i++
																			{
																				loop info: Size j=0  j<values_.size()  j++
																					{
																					-----------------------------------------------
																					array table
																					values_ -> ['[j]', '[j]']
																					-----------------------------------------------
																					}
 																			-----------------------------------------------
																			array table
																			floatingPayTimes_ -> ['[i]']
																			arguments_.floatingSpreads -> ['[i]']
																			floatingResetTimes_ -> ['[i]']
																			arguments_.floatingAccrualTimes -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<fixedResetTimes_.size()  i++
																			{
																				loop info: Size j=0  j<values_.size()  j++
																					{
																					-----------------------------------------------
																					array table
																					values_ -> ['[j]', '[j]']
																					-----------------------------------------------
																					}
 																			-----------------------------------------------
																			array table
																			arguments_.fixedCoupons -> ['[i]']
																			fixedResetTimes_ -> ['[i]']
																			fixedPayTimes_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<fixedPayTimes_.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			arguments_.fixedCoupons -> ['[i]']
																			fixedResetTimes_ -> ['[i]']
																			fixedPayTimes_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<floatingPayTimes_.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			floatingPayTimes_ -> ['[i]']
																			arguments_.floatingCoupons -> ['[i]']
																			floatingResetTimes_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<size  i++
																			{
																			-----------------------------------------------
																			array table
																			amounts_ -> ['[i]']
																			times_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<fixedPayTimes.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<size  i++
																			{
																			-----------------------------------------------
																			array table
																			amounts -> ['[i]']
																			arguments_.fixedPayDates -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<exerciseTimes_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<arguments_.exercise->dates().size()  i++
																			{
																				loop info: Size j=0  j<arguments_.fixedPayDates.size()  j++
																				{
																				-----------------------------------------------
																				array table
																				arguments_.fixedResetDates -> ['[j]']
																				arguments_.fixedPayDates -> ['[j]', '[j]']
																				-----------------------------------------------
																				}
																				loop info: Size j=0  j<arguments_.floatingResetDates.size()  j++
																				{
																				-----------------------------------------------
																				array table
																				arguments_.floatingResetDates -> ['[j]', '[j]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			arguments_.fixedResetDates -> ['[j]', '[j]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<stoppingTimes.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < static_cast<Size>(idx - minIdxAlive + 2)  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size l = k1  l < arguments_.floatingCoupons.size()  l++
																			{
																			-----------------------------------------------
																			array table
																			arguments_.floatingFixingDates -> ['[l]']
																			arguments_.floatingPayDates -> ['[l]']
																			-----------------------------------------------
																			}
																			loop info: Size l = j1  l < arguments_.fixedCoupons.size()  l++
																			{
																			-----------------------------------------------
																			array table
																			arguments_.fixedPayDates -> ['[l]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < yg.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			yg -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < z.size() - 1  i++
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size m = 0  m < npvp0.size()  m++
																			{
																				loop info: Size i = 0  i < yg.size()  i++
																					{
																					-----------------------------------------------
																					array table
																					yg -> ['[i]']
																					-----------------------------------------------
																					}
																				loop info: Size i = 0  i < z.size() - 1  i++
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																			-----------------------------------------------
																			array table
																			npvp1 -> ['[m]']
																			npvp0 -> ['[m][k]']
																			-----------------------------------------------
																			}
																			loop info: Size l = j1  l < arguments_.fixedCoupons.size()  l++
																			{
																			-----------------------------------------------
																			array table
																			arguments_.fixedPayDates -> ['[l]']
																			arguments_.fixedCoupons -> ['[l]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < npvp0.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < npvp0.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			npvp1 -> ['[i][0]']
																			prob -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < exerciseDates.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			exerciseDates -> ['[i]', '[i]']
																			t2d -> ['[t]']
																			-----------------------------------------------
																			}
																			loop info: Size i = startIndex_  i < size  i++
																			{
																			-----------------------------------------------
																			array table
																			amounts_ -> ['[i]']
																			times_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i = startIndex  i < size  i++
																			{
																			-----------------------------------------------
																			array table
																			amounts -> ['[i]']
																			arguments_.fixedPayDates -> ['[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < exerciseDates.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			exerciseDates -> ['[i]', '[i]']
																			t2d -> ['[t]']
																			-----------------------------------------------
																			}
																			loop info: Size i = fixedIdx  i < arguments_.fixedResetDates.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			arguments_.fixedPayDates -> ['[i]', '[i]']
																			arguments_.fixedCoupons -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i = fixedIdx  i < arguments_.fixedResetDates.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			arguments_.fixedNominal -> ['[i]', '[i]', '[i]']
																			arguments_.fixedRate -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < static_cast<Size>(idx - minIdxAlive + 2)  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < yg.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			yg -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < z.size() - 1  i++
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size m = 0  m < npvp0.size()  m++
																			{
																				loop info: Size i = 0  i < yg.size()  i++
																					{
																					-----------------------------------------------
																					array table
																					yg -> ['[i]']
																					-----------------------------------------------
																					}
																				loop info: Size i = 0  i < z.size() - 1  i++
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																			-----------------------------------------------
																			array table
																			npvp1 -> ['[m]']
																			npvp0 -> ['[m][k]']
																			-----------------------------------------------
																			}
																			loop info: Size l = j1  l < arguments_.fixedCoupons.size()  l++
																			{
																			-----------------------------------------------
																			array table
																			arguments_.fixedPayDates -> ['[l]', '[l]']
																			arguments_.fixedCoupons -> ['[l]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < npvp0.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < npvp0.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			npvp1 -> ['[i][0]']
																			prob -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i = minIdxAlive  i < exercise->dates().size()  i++
																			{
																			-----------------------------------------------
																			array table
																			solution -> ['[1]', '[2]', '[2]', '[0]', '[0]', '[2]', '[2]', '[0]']
																			-----------------------------------------------
																			}
																			loop info: Size i = idx1  i < arguments_.leg1ResetDates.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			arguments_.nominal1 -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i = idx1  i < arguments_.leg1ResetDates.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			arguments_.nominal1 -> ['[i]']
																			arguments_.leg1AccrualTimes -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < noEx+1   ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size k = 0  k < (event0 > expiry ? npv0.size() : 1)  k++
																			{
																				loop info: Size i = 0  i < yg.size()  i++
																					{
																					-----------------------------------------------
																					array table
																					pa -> ['[i]']
																					yg -> ['[i]', '[i]']
																					-----------------------------------------------
																					}
																				loop info: Size i = 0  i < z.size() - 1  i++
																					{
																					-----------------------------------------------
																					array table
																					pa -> ['[i]']
																					-----------------------------------------------
																					}
																				loop info: Size m = 0  m < npvp0.size()  m++
																					{
																						loop info: Size i = 0  i < yg.size()  i++
																							{
																							-----------------------------------------------
																							array table
																							yg -> ['[i]']
																							-----------------------------------------------
																							}
																						loop info: Size i = 0  i < z.size() - 1  i++
																							{
																							-----------------------------------------------
																							array table
																							-----------------------------------------------
																							}
 																					-----------------------------------------------
																					array table
																					npvp1 -> ['[m]']
																					npvp0 -> ['[m][k]']
																					-----------------------------------------------
																					}
																				loop info: Size ii = exIdx  ii < noEx+1  ++ii
																								{
																								-----------------------------------------------
																								array table
																								-----------------------------------------------
																								}
 																			-----------------------------------------------
																			array table
																			arguments_.leg2Coupons -> ['[j]']
																			arguments_.leg1Gearings -> ['[j]']
																			arguments_.leg2FlooredRates -> ['[j]', '[j]']
																			arguments_.leg2Gearings -> ['[j]']
																			arguments_.leg1Coupons -> ['[j]']
																			arguments_.leg1AccrualTimes -> ['[j]']
																			arguments_.leg1CappedRates -> ['[j]', '[j]']
																			pa -> ['[0]', '[0]']
																			arguments_.leg2CappedRates -> ['[j]', '[j]']
																			npv0 -> ['[k]', '[k]', '[k]', '[k]']
																			arguments_.leg1Spreads -> ['[j]']
																			npv0a -> ['[k]', '[k]', '[k]', '[k]']
																			arguments_.leg2IsRedemptionFlow -> ['[j]']
																			arguments_.leg1IsRedemptionFlow -> ['[j]']
																			arguments_.nominal1 -> ['[j]']
																			arguments_.nominal2 -> ['[j]']
																			arguments_.leg2PayDates -> ['[j]', '[j]']
																			arguments_.leg2AccrualTimes -> ['[j]']
																			arguments_.leg2Spreads -> ['[j]']
																			arguments_.leg1FixingDates -> ['[j]', '[j]', '[j]', '[j]', '[j]']
																			arguments_.leg1PayDates -> ['[j]', '[j]']
																			arguments_.leg2FixingDates -> ['[j]', '[j]', '[j]', '[j]', '[j]']
																			arguments_.leg1FlooredRates -> ['[j]', '[j]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0 i<npvp0.size() ++i
																			{
																			-----------------------------------------------
																			array table
																			npvp1 -> ['[i]']
																			npvp0 -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < noEx+1  i++
																			{
																			-----------------------------------------------
																			array table
																			npvp1 -> ['[i][0]']
																			prob -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<optionlets  ++i
																			{
																			-----------------------------------------------
																			array table
																			arguments_.capRates -> ['[i]']
																			arguments_.floorRates -> ['[i]']
																			stdDevs -> ['[i]', '[i]', '[i]', '[i]']
																			forwards -> ['[i]', '[i]']
																			arguments_.gearings -> ['[i]']
																			arguments_.payDates -> ['[i]']
																			values -> ['[i]', '[i]', '[i]', '[i]']
																			arguments_.accrualTimes -> ['[i]']
																			arguments_.fixingDates -> ['[i]', '[i]']
																			arguments_.nominals -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<arguments_.leg.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			arguments_.leg -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<arguments_.leg.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			arguments_.leg -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: i = yoyLeg_.begin()  i != yoyLeg_.end()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: i = yoyLeg_.begin()  i != yoyLeg_.end()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=yoyLeg_.size()  i>0  --i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<n  ++i
																			{
																			-----------------------------------------------
																			array table
																			yoyLeg_ -> ['[i]']
																			spreads -> ['[i]']
																			accrualTimes -> ['[i]']
																			nominals -> ['[i]']
																			capRates_ -> ['[i]']
																			floorRates_ -> ['[i]']
																			capRates -> ['[i]', '[i]']
																			payDates -> ['[i]']
																			fixingDates -> ['[i]']
																			floorRates -> ['[i]', '[i]']
																			gearings -> ['[i]']
																			startDates -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < cashFlow.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			cashFlow -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: i = floatingLeg_.begin()  i != floatingLeg_.end()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: i = floatingLeg_.begin()  i != floatingLeg_.end()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=floatingLeg_.size()  i>0  --i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<n  ++i
																			{
																			-----------------------------------------------
																			array table
																			floatingLeg_ -> ['[i]']
																			spreads -> ['[i]']
																			forwards -> ['[i]', '[i]']
																			accrualTimes -> ['[i]']
																			nominals -> ['[i]']
																			capRates_ -> ['[i]']
																			capRates -> ['[i]', '[i]']
																			floorRates_ -> ['[i]']
																			endDates -> ['[i]', '[i]']
																			fixingDates -> ['[i]']
																			indexes -> ['[i]']
																			floorRates -> ['[i]', '[i]']
																			gearings -> ['[i]']
																			startDates -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < cf.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			cf -> ['[i]', '[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Leg::const_iterator i = legs_[1].begin()  i < legs_[1].end()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<fixedCoupons.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			fixedCoupons -> ['[i]', '[i]']
																			fixedResetDates -> ['[i]']
																			fixedPayDates -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<floatingCoupons.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			floatingResetDates -> ['[i]']
																			floatingSpreads -> ['[i]']
																			floatingFixingDates -> ['[i]']
																			floatingCoupons -> ['[i]', '[i]', '[i]']
																			floatingPayDates -> ['[i]']
																			floatingAccrualTimes -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=1  i<notionalSchedule_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			notionals_ -> ['[i]']
																			redemptions -> ['[i]']
																			notionalSchedule_ -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<cashflows_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			cashflows_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<cashflows.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < dates_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			seconds_ -> ['[i]', '[i]']
																			dates_ -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<dates().size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: i = cpiLeg.begin()  i < cpiLeg.end()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: i = floatingLeg.begin()  i < floatingLeg.end()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<resetDates.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			resetDates -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: i = yoyLeg.begin()  i < yoyLeg.end()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<fixedCoupons.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			fixedCoupons -> ['[i]', '[i]']
																			fixedResetDates -> ['[i]']
																			fixedPayDates -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<yoyCoupons.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			yoyResetDates -> ['[i]']
																			yoyPayDates -> ['[i]']
																			yoyFixingDates -> ['[i]']
																			yoyAccrualTimes -> ['[i]']
																			yoyCoupons -> ['[i]', '[i]', '[i]']
																			yoySpreads -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<2  ++j
																			{
																				loop info: Leg::iterator i = legs_[j].begin()  i!= legs_[j].end()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: const_iterator i=components_.begin()  i!=components_.end()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: const_iterator i=components_.begin()  i!=components_.end()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: i=legs_[1].begin()  i<legs_[1].end()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: i = bondLeg.begin()  i<bondLeg.end()-1 && (*i)->date()<=dealMaturity  ++i
																			{
																			-----------------------------------------------
																			array table
																			legs_ -> ['[0]']
																			-----------------------------------------------
																			}
																			loop info: i=legs_[0].begin()  i<legs_[0].end()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Leg::const_iterator i=legs_[1].begin()  i<legs_[1].end()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Leg::const_iterator i=bondLeg.begin()  i<bondLeg.end()  ++i
																			{
																			-----------------------------------------------
																			array table
																			legs_ -> ['[0]']
																			-----------------------------------------------
																			}
																			loop info: Leg::const_iterator i=legs_[0].begin()  i<legs_[0].end()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<fixedCoupons.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			fixedCoupons -> ['[i]', '[i]']
																			fixedResetDates -> ['[i]']
																			fixedPayDates -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<floatingCoupons.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			floatingResetDates -> ['[i]']
																			floatingSpreads -> ['[i]']
																			floatingFixingDates -> ['[i]']
																			floatingCoupons -> ['[i]']
																			floatingPayDates -> ['[i]']
																			floatingAccrualTimes -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<2  ++j
																			{
																				loop info: Leg::iterator i = legs_[j].begin()  i!= legs_[j].end()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<2  ++j
																			{
																				loop info: Leg::iterator i = legs_[j].begin()  i!= legs_[j].end()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < cashFlow.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			cashFlow -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < cappedRate1_.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			cappedRate1_ -> ['[i]', '[i]', '[i]', '[0]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < cappedRate2_.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			cappedRate2_ -> ['[i]', '[i]', '[i]', '[0]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < flooredRate1_.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			flooredRate1_ -> ['[i]', '[i]', '[i]', '[0]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < flooredRate2_.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			flooredRate2_ -> ['[i]', '[i]', '[i]', '[0]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < gearing1_.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < gearing2_.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < legs_[0].size() - 1  i++
																			{
																			-----------------------------------------------
																			array table
																			nominal1_ -> ['[i]', '[i]']
																			legs_ -> ['[0]', '[0]', '[0][i]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < legs_[1].size() - 1  i++
																			{
																			-----------------------------------------------
																			array table
																			nominal2_ -> ['[i]', '[i]']
																			legs_ -> ['[1]', '[1]', '[1][i]']
																			-----------------------------------------------
																			}
																			loop info: Leg::const_iterator i = legs_[0].begin()  i < legs_[0].end()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Leg::const_iterator i = legs_[1].begin()  i < legs_[1].end()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < leg1Coupons.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			leg1Spreads -> ['[i]', '[i]']
																			leg1IsRedemptionFlow -> ['[i]']
																			leg1Gearings -> ['[i]', '[i]']
																			leg1CappedRates -> ['[i]']
																			leg1PayDates -> ['[i]', '[i]']
																			leg1FixingDates -> ['[i]', '[i]']
																			leg1FlooredRates -> ['[i]']
																			leg1Coupons -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
																			leg1AccrualTimes -> ['[i]', '[i]']
																			leg1ResetDates -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < leg2Coupons.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			leg2Coupons -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
																			leg2CappedRates -> ['[i]']
																			leg2Spreads -> ['[i]', '[i]']
																			leg2FixingDates -> ['[i]', '[i]']
																			leg2AccrualTimes -> ['[i]', '[i]']
																			leg2Gearings -> ['[i]', '[i]']
																			leg2IsRedemptionFlow -> ['[i]']
																			leg2PayDates -> ['[i]', '[i]']
																			leg2FlooredRates -> ['[i]']
																			leg2ResetDates -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < legs_[0].size() - 1  i++
																			{
																			-----------------------------------------------
																			array table
																			fixedNominal_ -> ['[i]', '[i]']
																			legs_ -> ['[0]', '[0]', '[0][i]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < legs_[1].size() - 1  i++
																			{
																			-----------------------------------------------
																			array table
																			floatingNominal_ -> ['[i]', '[i]']
																			legs_ -> ['[1]', '[1]', '[1][i]']
																			-----------------------------------------------
																			}
																			loop info: Leg::const_iterator i = legs_[1].begin()  i < legs_[1].end()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < fixedCoupons.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			fixedCoupons -> ['[i]', '[i]', '[i]', '[i]']
																			fixedIsRedemptionFlow -> ['[i]']
																			fixedResetDates -> ['[i]', '[i]']
																			fixedPayDates -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < floatingCoupons.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			floatingResetDates -> ['[i]', '[i]']
																			floatingSpreads -> ['[i]', '[i]']
																			floatingFixingDates -> ['[i]', '[i]']
																			floatingCoupons -> ['[i]', '[i]', '[i]', '[i]', '[i]']
																			floatingIsRedemptionFlow -> ['[i]']
																			floatingPayDates -> ['[i]', '[i]']
																			floatingAccrualTimes -> ['[i]', '[i]']
																			floatingGearings -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Leg::iterator i = legs_[0].begin()  i!= legs_[0].end()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Leg::iterator i = legs_[1].begin()  i!= legs_[1].end()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<legs_.size()  ++j
																			{
																				loop info: Leg::iterator i = legs_[j].begin()  i!= legs_[j].end()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			payer_ -> ['[j]']
																			payer -> ['[j]']
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<legs_.size()  ++j
																			{
																				loop info: i = legs_[j].begin()  i!= legs_[j].end()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j=1  j<legs_.size()  ++j
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j=1  j<legs_.size()  ++j
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<k  ++i
																			{
																			-----------------------------------------------
																			array table
																			outstandings -> ['[i]']
																			btps -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<n_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<n_  ++i
																			{
																			-----------------------------------------------
																			array table
																			outstandings -> ['[i]']
																			quotes_ -> ['[i]']
																			weights_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nSwaps_  ++i
																			{
																			-----------------------------------------------
																			array table
																			swaps_ -> ['[i]']
																			swapLenghts_ -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<basket_->size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			quotes -> ['[i]']
																			durations_ -> ['[i]']
																			btps -> ['[i]', '[i]']
																			yields_ -> ['[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=1  i<nSwaps_  ++i
																			{
																			-----------------------------------------------
																			array table
																			swapBondYields_ -> ['[i]', '[i]', '[i]']
																			swaps_ -> ['[i]', '[i]']
																			swapRates_ -> ['[i]', '[i]']
																			swapBondDurations_ -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: i = cashflows_.begin()  i < cashflows_.end()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0 i<observationsNo_ i++
																			{
																			-----------------------------------------------
																			array table
																			observationDates_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<observationDates.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			initialValues_ -> ['[i]']
																			observationDates -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0 i<observationsNo_ i++
																			{
																			-----------------------------------------------
																			array table
																			observationTimes_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<n  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < swap_->fixedLeg().size()  i++
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i = 1  i < k_   ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<n  ++i
																			{
																			-----------------------------------------------
																			array table
																			fixedLeg -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<accruals_.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			accruals_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<accruals_.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			accruals_ -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<accruals_.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			accruals_ -> ['[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<n  ++i
																			{
																			-----------------------------------------------
																			array table
																			fixedLeg -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<accruals_.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			accruals_ -> ['[i]', '[i]']
																			shapedSwapPaymentTimes_ -> ['[i]', '[i]', '[i]']
																			swapPaymentDiscounts_ -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<accruals_.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			accruals_ -> ['[i]', '[i]', '[i]']
																			shapedSwapPaymentTimes_ -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
																			swapPaymentDiscounts_ -> ['[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<o_.accruals_.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			o_.accruals_ -> ['[i]']
																			o_.swapPaymentDiscounts_ -> ['[i]']
																			o_.shapedSwapPaymentTimes_ -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<accruals_.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			accruals_ -> ['[i]', '[i]']
																			shapedSwapPaymentTimes_ -> ['[i]']
																			swapPaymentDiscounts_ -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<n  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < dates.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < sbuckets.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: const_iterator j = begin()  j != end()  ++j
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<leg.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			leg -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nCashFlows  ++i
																			{
																			-----------------------------------------------
																			array table
																			pricers -> ['[i]']
																			leg -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<fixingDates.size() - 1  ++i
																			{
																			-----------------------------------------------
																			array table
																			fixingDates -> ['[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<fixings.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<n  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<n  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<leg.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			leg -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<leg.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			leg -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=leg.size()  i>0  --i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: i = leg.rbegin()  i<leg.rend()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: i = leg.begin()  i<leg.end()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info:   cf<leg.rend() && (*cf)->date()==paymentDate  ++cf
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info:   cf<leg.end() && (*cf)->date()==paymentDate  ++cf
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info:   first<last && (*first)->date()==paymentDate  ++first
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info:   cf<leg.end() && (*cf)->date()==paymentDate  ++cf
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info:   cf<leg.end() && (*cf)->date()==paymentDate  ++cf
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info:   cf<leg.end() && (*cf)->date()==paymentDate  ++cf
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info:   cf<leg.end() && (*cf)->date()==paymentDate  ++cf
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info:   cf<leg.end() && (*cf)->date()==paymentDate  ++cf
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info:   cf<leg.end() && (*cf)->date()==paymentDate  ++cf
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info:   cf<leg.end() && (*cf)->date()==paymentDate  ++cf
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info:   cf<leg.end() && (*cf)->date()==paymentDate  ++cf
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info:   cf<leg.end() && (*cf)->date()==paymentDate  ++cf
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info:   cf<leg.end() && (*cf)->date()==paymentDate  ++cf
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<leg.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			leg -> ['[i]', '[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<leg.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			leg -> ['[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<leg.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			leg -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<leg.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			leg -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<leg.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			leg -> ['[i]', '[i]', '[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<leg.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			leg -> ['[i]', '[i]', '[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < leg_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			leg_ -> ['[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < leg.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			leg -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<leg.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			leg -> ['[i]', '[i]', '[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<leg.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			leg -> ['[i]', '[i]', '[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<rates.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=2  i<schedule_.size()-1  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<n_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<n_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<n_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<n  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info:   
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info:   
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=1  i<dates_.size()-1  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=1  i<dates_.size()-1  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=1  i<dates_.size()-1  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=1  i<dates_.size()-1  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<n  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Date d = from  d < to  ++d
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Date d = to  d < from  ++d
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Date d = from  d <= to  ++d
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info:   
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Integer i=1  i<=12  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Integer m = Integer(d1.month())+1  m <= 12  ++m
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Integer m = 1  m<Integer(d2.month())  ++m
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: i=calendars_.begin()+1  i!=calendars_.end()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: i=calendars_.begin()  i!=calendars_.end()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: i=calendars_.begin()  i!=calendars_.end()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: i=calendars_.begin()  i!=calendars_.end()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: i=calendars_.begin()  i!=calendars_.end()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nJumps_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nJumps_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nJumps_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nJumps_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nJumps_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nJumps_  ++i
																			{
																			-----------------------------------------------
																			array table
																			jumps_ -> ['[i]', '[i]']
																			jumpTimes_ -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nJumps_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nJumps_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nJumps_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nJumps_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nJumps_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nJumps_ && jumpTimes_[i]<t  ++i
																			{
																			-----------------------------------------------
																			array table
																			jumps_ -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Time i=dt  i<t  i+=dt
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<bondHelpers_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			bondHelpers_ -> ['[i]', '[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<curve_->bondHelpers_.size()  ++i
																			{
																				loop info: Size k=0  k<cf.size()  ++k
																				{
																				-----------------------------------------------
																				array table
																				firstCashFlow_ -> ['[i]']
																				cf -> ['[k]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			bondHelpers_ -> ['[i]', '[i]']
																			weights_ -> ['[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<n  ++i
																			{
																				loop info: Size k=firstCashFlow_[i]  k<cf.size()  ++k
																				{
																				-----------------------------------------------
																				array table
																				cf -> ['[k]', '[k]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			bondHelpers_ -> ['[i]', '[i]']
																			weights_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<N-1  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<N-1  i++
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<size_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<size_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<size_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<size_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i = 1  i < nTest  i++
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<seasonalityFactors.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			seasonalityFactors_ -> ['[i]']
																			seasonalityFactors -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<volHandles_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<volHandles_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<volHandles_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			volHandles_ -> ['[i]', '[i]', '[i]']
																			strikes_ -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < moneynessGrid.size() - 1  i++
																			{
																			-----------------------------------------------
																			array table
																			moneynessGrid -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < tmp.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			tmp -> ['[i]', '[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 1  i < k_.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			k_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0 i<k_.size() ++i
																			{
																			-----------------------------------------------
																			array table
																			k_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i = leftIndex_  i < rightIndex_  i++
																			{
																			-----------------------------------------------
																			array table
																			c_ -> ['[i]', '[i]']
																			k_ -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<times_.size()   i++
																			{
																			-----------------------------------------------
																			array table
																			blackVols_ -> ['[i]', '[i]']
																			weights_ -> ['[i]', '[i]']
																			times_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<times_.size()   i++
																			{
																			-----------------------------------------------
																			array table
																			weights_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<t.size()   i++
																			{
																			-----------------------------------------------
																			array table
																			blackVols -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<times_.size()   i++
																			{
																			-----------------------------------------------
																			array table
																			blackVols_ -> ['[i]']
																			weights_ -> ['[i]']
																			times_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<times_.size()   i++
																			{
																			-----------------------------------------------
																			array table
																			blackVols_ -> ['[i]']
																			times_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<times_.size()   i++
																			{
																			-----------------------------------------------
																			array table
																			blackVols_ -> ['[i]']
																			results -> ['[i]']
																			weights_ -> ['[i]']
																			times_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: j=1  j<=blackVolCurve.size()  j++
																			{
																			-----------------------------------------------
																			array table
																			variances_ -> ['[j]', '[j]']
																			times_ -> ['[j]', '[j]', '[j]']
																			-----------------------------------------------
																			}
																			loop info: i=0  i<blackVolMatrix.rows()  i++
																			{
																			-----------------------------------------------
																			array table
																			variances_ -> ['[i][0]']
																			-----------------------------------------------
																			}
																			loop info: j=1  j<=blackVolMatrix.columns()  j++
																			{
																				loop info: i=0  i<blackVolMatrix.rows()  i++
																				{
																				-----------------------------------------------
																				array table
																				blackVolMatrix -> ['[i]', '[i]']
																				variances_ -> ['[i][j]']
																				times_ -> ['[j]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			times_ -> ['[j]', '[j]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nOptionTenors_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<vols_.rows()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nOptionTenors_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<vols_.rows()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nOptionTenors_  ++i
																			{
																				loop info: Size j=0  j<nStrikes_  ++j
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			volHandles_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nOptionTenors_  ++i
																			{
																				loop info: Size j=0  j<nStrikes_  ++j
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			volHandles_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=1  i<nOptionTenors_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j=1  j<nStrikes_  ++j
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nOptionTenors_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nOptionTenors_  ++i
																			{
																			-----------------------------------------------
																			array table
																			optionTenors_ -> ['[i]']
																			optionDates_ -> ['[i]', '[i]']
																			optionTimes_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nOptionTenors_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nOptionTenors_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nOptionTenors_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=1  i<nOptionTenors_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<volHandles_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nOptionTenors_  ++i
																			{
																			-----------------------------------------------
																			array table
																			optionTenors_ -> ['[i]']
																			optionDates_ -> ['[i]', '[i]']
																			optionTimes_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<vols_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0 i<optionletStrikes.size() i++
																			{
																			-----------------------------------------------
																			array table
																			optionletStrikes -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nInterpolations_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nInterpolations_  ++i
																			{
																			-----------------------------------------------
																			array table
																			optionletTimes -> ['[i]', '[i]']
																			strikeInterpolations_ -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
																			atmForward -> ['[i]']
																			isParameterFixed_ -> ['[0]', '[1]', '[2]', '[3]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nOptionletTenors_  ++i
																			{
																			-----------------------------------------------
																			array table
																			optionletAccrualPeriods_ -> ['[i]']
																			capFloorLengths_ -> ['[i]']
																			optionletPaymentDates_ -> ['[i]']
																			atmOptionletRate_ -> ['[i]']
																			optionletDates_ -> ['[i]', '[i]']
																			optionletTimes_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nOptionletTenors_  ++i
																			{
																			-----------------------------------------------
																			array table
																			atmOptionletRate_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nOptionletTenors_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<nStrikes_  ++j
																			{
																				loop info: Size i=0  i<nOptionletTenors_  ++i
																				{
																				-----------------------------------------------
																				array table
																				capFloors_ -> ['[i][j]', '[i][j]']
																				capFloorLengths_ -> ['[i]', '[i]']
																				volQuotes_ -> ['[i][j]', '[i][j]', '[i][j]']
																				strikes -> ['[j]', '[j]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			strikes -> ['[j]']
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<nStrikes_  ++j
																			{
																				loop info: Size i=0  i<nOptionletTenors_  ++i
																				{
																				-----------------------------------------------
																				array table
																				optionletDates_ -> ['[i]']
																				capFloorPrices_ -> ['[i][j]', '[i][j]', '[i][j]']
																				capFloorVols_ -> ['[i][j]', '[i][j]']
																				strikes -> ['[j]', '[j]', '[j]', '[j]']
																				optionletAccrualPeriods_ -> ['[i]']
																				capFloors_ -> ['[i][j]']
																				capFloorLengths_ -> ['[i]']
																				optionletStDevs_ -> ['[i][j]', '[i][j]', '[i][j]', '[i][j]', '[i][j]']
																				optionletPaymentDates_ -> ['[i]']
																				atmOptionletRate_ -> ['[i]', '[i]', '[i]']
																				optionletPrices_ -> ['[i][j]', '[i][j]', '[i][j]', '[i][j]']
																				optionletTimes_ -> ['[i]', '[i]', '[i]']
																				volQuotes_ -> ['[i][j]']
																				optionletVolatilities_ -> ['[i][j]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			strikes -> ['[j]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nOptionletDates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=1  i<nOptionletDates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j=1  j<nStrikes_  ++j
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nOptionletDates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nOptionletDates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nOptionletDates_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<optionletTimes_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			optionletVolatilities_ -> ['[i]']
																			optionletStrikes_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<nOptionExpiries_  ++j
																			{
																			-----------------------------------------------
																			array table
																			atmCapFloorStrikes_ -> ['[j]']
																			optionExpiriesTimes -> ['[j]']
																			atmCapFloorPrices_ -> ['[j]']
																			optionExpiriesTenors -> ['[j]']
																			caps_ -> ['[j]', '[j]', '[j]']
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<nOptionExpiries_  ++j
																			{
																				loop info: Size i=0  i<optionletVolatilities_.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				atmCapFloorStrikes_ -> ['[j]', '[j]', '[j]']
																				caps_ -> ['[j]']
																				spreadsVolImplied_ -> ['[j]']
																				optionletVolatilities_ -> ['[i]', '[i]']
																				optionletStrikes_ -> ['[i]', '[i]', '[i]', '[i]', '[i]']
																				optionletTimes_ -> ['[i]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<nOptionExpiries_  ++j
																			{
																			-----------------------------------------------
																			array table
																			atmCapFloorPrices_ -> ['[j]']
																			caps_ -> ['[j]']
																			result -> ['[j]']
																			-----------------------------------------------
																			}
																			loop info: Size i=1  i<nStrikes_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<volSpreads_.size()  i++
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nStrikes_  i++
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < nSwapTenors  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < nSwapTenors  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < nSwapTenors  ++i
																			{
																				loop info: Size j = 0  j < beta.size()  ++j
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			swapTenors -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < nSwapTenors  ++i
																			{
																				loop info: Size j = 0  j < beta.size()  ++j
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			swapTenors -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < nSwapTenors  ++i
																			{
																				loop info: Size j = 0  j < beta.size()  ++j
																				{
																				-----------------------------------------------
																				array table
																				beta -> ['[j]']
																				swapLengths -> ['[j]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			swapTenors -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < nSwapTenors  ++i
																			{
																				loop info: Size j = 0  j < beta.size()  ++j
																				{
																				-----------------------------------------------
																				array table
																				beta -> ['[j]']
																				swapLengths -> ['[j]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			swapTenors -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < nBeta  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < nBeta  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < nBeta  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < nBeta  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < nSwapTenors  ++i
																			{
																				loop info: Size j = 0  j < nSwapLengths  ++j
																				{
																				-----------------------------------------------
																				array table
																				guess -> ['[j][i]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < nSwapTenors  ++i
																			{
																				loop info: Size j = 0  j < nSwapLengths  ++j
																				{
																				-----------------------------------------------
																				array table
																				result -> ['[j][i]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j = 0  j < nSwapLengths  ++j
																			{
																			-----------------------------------------------
																			array table
																			result -> ['[j]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < nSwapTenors  ++i
																			{
																				loop info: Size j = 0  j < nSwapLengths  ++j
																				{
																				-----------------------------------------------
																				array table
																				guess -> ['[j][i]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < nSwapTenors  ++i
																			{
																				loop info: Size j = 0  j < nSwapLengths  ++j
																				{
																				-----------------------------------------------
																				array table
																				result -> ['[j][i]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j = 0  j < nSwapLengths  ++j
																			{
																			-----------------------------------------------
																			array table
																			result -> ['[j]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < nSwapTenors  ++i
																			{
																				loop info: Size j = 0  j < nParams  ++j
																				{
																				-----------------------------------------------
																				array table
																				guess -> ['[j][i]', '[j][i]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < nSwapTenors  ++i
																			{
																				loop info: Size j = 0  j < 3  ++j
																				{
																				-----------------------------------------------
																				array table
																				result -> ['[j][i]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j = 0  j < nSwapLengths  ++j
																			{
																			-----------------------------------------------
																			array table
																			result -> ['[j]']
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < nSwapTenors  ++i
																			{
																				loop info: Size j = 0  j < nParams  ++j
																				{
																				-----------------------------------------------
																				array table
																				guess -> ['[j][i]', '[j][i]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i = 0  i < nSwapTenors  ++i
																			{
																				loop info: Size j = 0  j < 3  ++j
																				{
																				-----------------------------------------------
																				array table
																				result -> ['[j][i]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j = 0  j < nSwapLengths  ++j
																			{
																			-----------------------------------------------
																			array table
																			result -> ['[j]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<vols.rows()  ++i
																			{
																				loop info: Size j=0  j<vols.columns()  ++j
																				{
																				-----------------------------------------------
																				array table
																				volHandles_ -> ['[i][j]']
																				shiftValues_ -> ['[i][j]']
																				vols -> ['[i][j]']
																				shifts -> ['[i][j]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			volHandles_ -> ['[i]']
																			shiftValues_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<vols.rows()  ++i
																			{
																				loop info: Size j=0  j<vols.columns()  ++j
																				{
																				-----------------------------------------------
																				array table
																				volHandles_ -> ['[i][j]']
																				shiftValues_ -> ['[i][j]']
																				vols -> ['[i][j]']
																				shifts -> ['[i][j]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			volHandles_ -> ['[i]']
																			shiftValues_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<vols.rows()  ++i
																			{
																				loop info: Size j=0  j<vols.columns()  ++j
																				{
																				-----------------------------------------------
																				array table
																				volHandles_ -> ['[i][j]']
																				shiftValues_ -> ['[i][j]']
																				vols -> ['[i][j]']
																				shifts -> ['[i][j]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			volHandles_ -> ['[i]']
																			shiftValues_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<volHandles_.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<volatilities_.rows()  ++i
																			{
																				loop info: Size j=0  j<volatilities_.columns()  ++j
																				{
																				-----------------------------------------------
																				array table
																				volHandles_ -> ['[i][j]']
																				shiftValues_ -> ['[i][j]']
																				volatilities_ -> ['[i][j]']
																				shifts_ -> ['[i][j]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nStrikes_  i++
																			{
																			-----------------------------------------------
																			array table
																			volSpreadsMatrix_ -> ['[i][j][k]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nStrikes_  i++
																			{
																			-----------------------------------------------
																			array table
																			volSpreadsMatrix_ -> ['[i]']
																			volSpreadsInterpolator_ -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nStrikes_  ++i
																			{
																			-----------------------------------------------
																			array table
																			volSpreadsInterpolator_ -> ['[i]']
																			strikeSpreads_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=1  i<nOptionTenors_  ++i
																			{
																			-----------------------------------------------
																			array table
																			optionDates_ -> ['[i]', '[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=1  i<nOptionTenors_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=1  i<nSwapTenors_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nOptionTenors_  ++i
																			{
																			-----------------------------------------------
																			array table
																			optionTenors_ -> ['[i]']
																			optionDates_ -> ['[i]', '[i]']
																			optionDatesAsReal_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nOptionTenors_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nSwapTenors_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<nSwapIndexes_  ++j
																			{
																				loop info: Size i=0  i<nExercise_  ++i
																				{
																				-----------------------------------------------
																				array table
																				bidAskSpreads_ -> ['[i]', '[i]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			swapTenors_ -> ['[j]']
																			pricers_ -> ['[j]']
																			swapIndexes_ -> ['[j]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nExercise_  ++i
																			{
																				loop info: Size j=0  j<nSwapIndexes_  ++j
																				{
																				-----------------------------------------------
																				array table
																				pricers_ -> ['[j]']
																				swapLengths_ -> ['[i]', '[i]']
																				spotSwaps_ -> ['[i][j]']
																				swapIndexes_ -> ['[j]', '[j]']
																				fwdSwaps_ -> ['[i][j]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<nSwapIndexes_  ++j
																			{
																				loop info: Size i=0  i<nExercise_  ++i
																				{
																				-----------------------------------------------
																				array table
																				mktSpreads_ -> ['[i][j]', '[i][j]', '[i][j]']
																				bidAskSpreads_ -> ['[i]', '[i]']
																				spotFloatLegBPS_ -> ['[i][j]', '[i][j]', '[i][j]']
																				fwdSwaps_ -> ['[i][j]']
																				mktBidSpreads_ -> ['[i][j]', '[i][j]']
																				mdlFwdCmsLegNPV_ -> ['[i][j]', '[i][j]', '[i][j]']
																				spotFloatLegNPV_ -> ['[i][j]', '[i][j]', '[i][j]']
																				mktFwdCmsLegNPV_ -> ['[i][j]', '[i][j]']
																				mdlSpotCmsLegNPV_ -> ['[i][j]', '[i][j]', '[i][j]', '[i][j]']
																				mdlSpreads_ -> ['[i][j]', '[i][j]']
																				errSpotCmsLegNPV_ -> ['[i][j]']
																				mktAskSpreads_ -> ['[i][j]', '[i][j]']
																				mktSpotCmsLegNPV_ -> ['[i][j]', '[i][j]', '[i][j]', '[i][j]']
																				errSpreads_ -> ['[i][j]']
																				spotSwaps_ -> ['[i][j]']
																				errFwdCmsLegNPV_ -> ['[i][j]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j = 0  j < nSwapIndexes_  ++j
																			{
																			-----------------------------------------------
																			array table
																			pricers_ -> ['[j]', '[j]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nExercise_  ++i
																			{
																				loop info: Size j=0  j<nSwapIndexes_  ++j
																				{
																				-----------------------------------------------
																				array table
																				var -> ['[i][j]', '[i][j]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<nExercise_  ++i
																			{
																				loop info: Size j=0  j<nSwapIndexes_  ++j
																				{
																				-----------------------------------------------
																				array table
																				var -> ['[i][j]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<nSwapIndexes_  ++j
																			{
																				loop info: Size i=0  i<nExercise_  ++i
																				{
																				-----------------------------------------------
																				array table
																				mktSpreads_ -> ['[i][j]']
																				mdlFwdCmsLegNPV_ -> ['[i][j]']
																				swapTenors_ -> ['[j]']
																				swapLengths_ -> ['[i]']
																				mktBidSpreads_ -> ['[i][j]', '[i][j]', '[i][j]']
																				errSpotCmsLegNPV_ -> ['[i][j]']
																				errSpreads_ -> ['[i][j]']
																				mktFwdCmsLegNPV_ -> ['[i][j]']
																				mdlSpotCmsLegNPV_ -> ['[i][j]']
																				mktAskSpreads_ -> ['[i][j]', '[i][j]', '[i][j]']
																				mktSpotCmsLegNPV_ -> ['[i][j]']
																				mdlSpreads_ -> ['[i][j]', '[i][j]', '[i][j]', '[i][j]', '[i][j]']
																				errFwdCmsLegNPV_ -> ['[i][j]']
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=1  i<subStrings.size()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size k=1  k < 30  ++k
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: m=1  m<=maxIteration  m++
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Integer n=1  n<=maxIteration  n++
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: i=1  i<=maxIteration  i++
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<knots.size()-1  ++i
																			{
																			-----------------------------------------------
																			array table
																			knots -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < m.rows()  ++i
																			{
																			-----------------------------------------------
																			array table
																			pert -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: i=1  i < n  ++i
																			{
																			-----------------------------------------------
																			array table
																			x_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: i=0  i<n  ++i
																			{
																			-----------------------------------------------
																			array table
																			w_ -> ['[i]']
																			ev -> ['[0][i]', '[0][i]']
																			x_ -> ['[i]']
																			-----------------------------------------------
																			}
																			loop info: k = 0  k < 5  k++
																			{
																			-----------------------------------------------
																			array table
																			savfun -> ['[k]']
																			w10 -> ['[k]']
																			w21a -> ['[k]', '[k]']
																			x1 -> ['[k]']
																			fv2 -> ['[k]']
																			fv1 -> ['[k]']
																			-----------------------------------------------
																			}
																			loop info: k = 0  k < 5  k++
																			{
																			-----------------------------------------------
																			array table
																			x2 -> ['[k]']
																			w21b -> ['[k]', '[k]']
																			fv4 -> ['[k]']
																			fv3 -> ['[k]']
																			-----------------------------------------------
																			}
																			loop info: k = 0  k < 5  k++
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: k = 0  k < 10  k++
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: k = 0  k < 11  k++
																			{
																			-----------------------------------------------
																			array table
																			x3 -> ['[k]']
																			w43b -> ['[k]']
																			-----------------------------------------------
																			}
																			loop info: k = 0  k < 21  k++
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: k = 0  k < 22  k++
																			{
																			-----------------------------------------------
																			array table
																			w87b -> ['[k]']
																			x4 -> ['[k]']
																			-----------------------------------------------
																			}
																			loop info: j = 1, j2 = 2  j < 4  j++, j2 += 2
																			{
																			-----------------------------------------------
																			array table
																			g7w -> ['[j]']
																			-----------------------------------------------
																			}
																			loop info: j2 = 1  j2 < 8  j2 += 2
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < n-1  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j < n-2  j+=2
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=1  i <= n_  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j<currentBasis_.size()  ++j
																			{
																				loop info: Size k=0  k<euclideanDimension_  ++k
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			currentBasis_ -> ['[j]']
																			-----------------------------------------------
																			}
																			loop info: Size l=0  l<euclideanDimension_  ++l
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i<basis.rows()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < v.columns()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size i=0  i < v.columns()  ++i
																			{
																			-----------------------------------------------
																			array table
																			-----------------------------------------------
																			}
																			loop info: Size j=0  j < numberVectors_  ++j
																			{
																				loop info: Size k=0  k< numberVectors_  ++k
																					{
																						loop info: Size m=0  m < dimension_  ++m
																						{
																						-----------------------------------------------
																						array table
																						-----------------------------------------------
																						}
																						loop info: Size l=0  l < k  ++l
																							{
																								loop info: Size n=0  n < dimension_  ++n
																									{
																									-----------------------------------------------
																									array table
																									-----------------------------------------------
																									}
 																							-----------------------------------------------
																							array table
																							validVectors_ -> ['[l]']
																							-----------------------------------------------
																							}
																						loop info: Size m=0  m < dimension_  ++m
																								{
																								-----------------------------------------------
																								array table
																								-----------------------------------------------
																								}
																						loop info: Size k=0  k< numberVectors_  ++k
																						{
																						-----------------------------------------------
																						array table
																						-----------------------------------------------
																						}
																						loop info: Size r=0  r < numberVectors_  ++r
																						{
																							loop info: Size s=0  s < dimension_  ++s
																							{
																							-----------------------------------------------
																							array table
																							-----------------------------------------------
																							}
 																						-----------------------------------------------
																						array table
																						-----------------------------------------------
																						}
																						loop info: Size t=0  t < dimension_  ++t
																							{
																							-----------------------------------------------
																							array table
																							-----------------------------------------------
																							}
 																					-----------------------------------------------
																					array table
																					validVectors_ -> ['[k]', '[k]', '[k]', '[j]', '[j]']
																					-----------------------------------------------
																					}
																				loop info: Size i=0  i < numberVectors_  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i=0  i < ev_.rows()  ++i
																				{
																				-----------------------------------------------
																				array table
																				ev_ -> ['[i][i]']
																				-----------------------------------------------
																				}
																				loop info: Size k=n-1  k >=1  --k
																				{
																					loop info: Size i=l+1  i <= k && !recoverUnderflow  ++i
																						{
																							loop info: Size j=0  j < ev_.rows()  ++j
																								{
																								-----------------------------------------------
																								array table
																								ev_ -> ['[j]', '[j]', '[j][i]', '[j][i]', '[j][i]']
																								-----------------------------------------------
																								}
 																						-----------------------------------------------
																						array table
																						d_ -> ['[i]']
																						-----------------------------------------------
																						}
 																				-----------------------------------------------
																				array table
																				d_ -> ['[l]', '[k]', '[k]', '[k]', '[k]', '[k]', '[k]', '[k]', '[k]']
																				e_ -> ['[k]', '[k]']
																				-----------------------------------------------
																				}
																				loop info: i=0  i<n  i++
																				{
																				-----------------------------------------------
																				array table
																				d_ -> ['[i]']
																				temp -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: i=0  i<n  i++
																				{
																					loop info: Size j=0  j<ev_.rows()  ++j
																					{
																					-----------------------------------------------
																					array table
																					second -> ['[j]']
																					temp -> ['[i]']
																					ev_ -> ['[j][i]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				d_ -> ['[i]']
																				second -> ['[0]']
																				temp -> ['[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<size  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<size  ++i
																				{
																					loop info: Size j=0  j<pseudoCols  ++j
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
																					loop info: Size j=0  j<pseudoCols  ++j
																						{
																						-----------------------------------------------
																						array table
																						-----------------------------------------------
																						}
 																				-----------------------------------------------
																				array table
																				matrix -> ['[i][i]']
																				-----------------------------------------------
																				}
																				loop info: i=0  i<size_  i++
																				{
																					loop info: k=0  k<size_  k++
																					{
																						loop info: j=0  j<=k  j++
																							{
																							-----------------------------------------------
																							array table
																							currentRoot_ -> ['[i][k]', '[i][k]']
																							-----------------------------------------------
																							}
 																					-----------------------------------------------
																					array table
																					currentRoot_ -> ['[i][k]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i=0  i<size_  i++
																				{
																					loop info: k=0  k<size_  k++
																					{
																						loop info: j=0  j<=k  j++
																						{
																						-----------------------------------------------
																						array table
																						currentRoot_ -> ['[i][k]', '[i][k]']
																						-----------------------------------------------
																						}
 																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i=0 i<size_ i++
																				{
																					loop info: j=0 j<size_ j++
																					{
																					-----------------------------------------------
																					array table
																					targetMatrix_ -> ['[i][j]']
																					targetVariance_ -> ['[i]', '[j]']
																					currentMatrix_ -> ['[i][j]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i=0  i<size  i++
																				{
																				-----------------------------------------------
																				array table
																				variance -> ['[i]']
																				targetMatrix -> ['[i][i]']
																				-----------------------------------------------
																				}
																				loop info: i=0  i<size  i++
																				{
																					loop info: j=0  j<size  j++
																					{
																					-----------------------------------------------
																					array table
																					approxMatrix -> ['[i][i]']
																					result -> ['[i][j]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i=0  i<size  i++
																				{
																					loop info: j=0  j<size  j++
																					{
																					-----------------------------------------------
																					array table
																					variance -> ['[i]']
																					result -> ['[i][j]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i=1  i<size  i++
																				{
																					loop info: j=0  j<i  j++
																					{
																						loop info: k=0  k<j  k++
																						{
																						-----------------------------------------------
																						array table
																						-----------------------------------------------
																						}
 																					-----------------------------------------------
																					array table
																					result -> ['[i][j]', '[i][i]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i=0  i<size  i++
																				{
																					loop info: k=0  k<size  k++
																					{
																						loop info: j=0  j<=k  j++
																							{
																							-----------------------------------------------
																							array table
																							result -> ['[i][k]', '[i][k]']
																							-----------------------------------------------
																							}
 																					-----------------------------------------------
																					array table
																					result -> ['[i][k]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i=0  i<size  i++
																				{
																					loop info: j=0  j<size-1  j++
																					{
																						loop info: k=0 k<j k++
																						{
																						-----------------------------------------------
																						array table
																						-----------------------------------------------
																						}
 																					-----------------------------------------------
																					array table
																					result -> ['[i][j]', '[i]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i=0  i<size  i++
																				{
																					loop info: k=0  k<size  k++
																					{
																						loop info: j=0  j<=k  j++
																						{
																						-----------------------------------------------
																						array table
																						result -> ['[i][k]', '[i][k]']
																						-----------------------------------------------
																						}
 																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i=0  i<size  i++
																				{
																					loop info: j=0  j<size  j++
																					{
																					-----------------------------------------------
																					array table
																					variance -> ['[i]']
																					result -> ['[i][j]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<rows  ++i
																				{
																					loop info: Size j=0  j<cols  ++j
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<size  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<size  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<maxIterations  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<size  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<size  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<size  ++i
																				{
																				-----------------------------------------------
																				array table
																				diagonal -> ['[i][i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<size  ++i
																				{
																				-----------------------------------------------
																				array table
																				diagonal -> ['[i][i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<size  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=1  components<enough && i<size  ++i
																				{
																				-----------------------------------------------
																				array table
																				eigenValues -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<retainedFactors  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i=0  i < maxIter_ && error >= relTol_  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i=0  i<S.rows()  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i=0  i<size  i++
																				{
																					loop info: j=i  j<size  j++
																					{
																						loop info: Integer k=0  k<=Integer(i)-1  k++
																						{
																						-----------------------------------------------
																						array table
																						result -> ['[i][k]', '[j][k]']
																						-----------------------------------------------
																						}
 																					-----------------------------------------------
																					array table
																					result -> ['[i][i]', '[i][i]', '[j][i]', '[i][i]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: k = 0  k < std::max(nct,nrt)  k++
																				{
																					loop info: i = k  i < m_  i++
																						{
																						-----------------------------------------------
																						array table
																						s_ -> ['[k]', '[k]']
																						-----------------------------------------------
																						}
																					loop info: i = k  i < m_  i++
																							{
																							-----------------------------------------------
																							array table
																							s_ -> ['[k]']
																							-----------------------------------------------
																							}
																					loop info: j = k+1  j < n_  j++
																					{
																						loop info: i = k  i < m_  i++
																							{
																							-----------------------------------------------
																							array table
																							-----------------------------------------------
																							}
																						loop info: i = k  i < m_  i++
																							{
																							-----------------------------------------------
																							array table
																							-----------------------------------------------
																							}
 																					-----------------------------------------------
																					array table
																					s_ -> ['[k]']
																					-----------------------------------------------
																					}
																					loop info: i = k  i < m_  i++
																						{
																						-----------------------------------------------
																						array table
																						U_ -> ['[i][k]']
																						-----------------------------------------------
																						}
																					loop info: i = k+1  i < n_  i++
																						{
																						-----------------------------------------------
																						array table
																						-----------------------------------------------
																						}
																					loop info: i = k+1  i < n_  i++
																							{
																							-----------------------------------------------
																							array table
																							-----------------------------------------------
																							}
																					loop info: i = k+1  i < m_  i++
																							{
																							-----------------------------------------------
																							array table
																							work -> ['[i]']
																							-----------------------------------------------
																							}
																					loop info: i = k+1  i < m_  i++
																								{
																								-----------------------------------------------
																								array table
																								work -> ['[i]']
																								-----------------------------------------------
																								}
																					loop info: j = k+1  j < n_  j++
																							{
																								loop info: i = k+1  i < m_  i++
																								{
																								-----------------------------------------------
																								array table
																								work -> ['[i]']
																								-----------------------------------------------
																								}
 																							-----------------------------------------------
																							array table
																							-----------------------------------------------
																							}
																					loop info: i = k+1  i < n_  i++
																						{
																						-----------------------------------------------
																						array table
																						V_ -> ['[i][k]']
																						-----------------------------------------------
																						}
 																				-----------------------------------------------
																				array table
																				s_ -> ['[k]', '[k]', '[k]', '[k]', '[k]', '[k]']
																				-----------------------------------------------
																				}
																				loop info: j = nct  j < n_  j++
																				{
																					loop info: i = 0  i < m_  i++
																					{
																					-----------------------------------------------
																					array table
																					U_ -> ['[i][j]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				U_ -> ['[j][j]']
																				-----------------------------------------------
																				}
																				loop info: k = nct-1  k >= 0  --k
																				{
																					loop info: j = k+1  j < n_  ++j
																						{
																							loop info: i = k  i < m_  i++
																							{
																							-----------------------------------------------
																							array table
																							U_ -> ['[i][k]', '[i][j]']
																							-----------------------------------------------
																							}
																							loop info: i = k  i < m_  i++
																							{
																							-----------------------------------------------
																							array table
																							U_ -> ['[i][j]', '[i][k]']
																							-----------------------------------------------
																							}
 																						-----------------------------------------------
																						array table
																						U_ -> ['[k][k]']
																						-----------------------------------------------
																						}
																					loop info: i = 0  i < k-1  i++
																						{
																						-----------------------------------------------
																						array table
																						U_ -> ['[i][k]']
																						-----------------------------------------------
																						}
																					loop info: i = 0  i < m_  i++
																						{
																						-----------------------------------------------
																						array table
																						U_ -> ['[i][k]']
																						-----------------------------------------------
																						}
 																				-----------------------------------------------
																				array table
																				U_ -> ['[i][k]', '[i][k]', '[k][k]', '[k][k]', '[k][k]']
																				s_ -> ['[k]']
																				-----------------------------------------------
																				}
																				loop info: k = n_-1  k >= 0  --k
																				{
																					loop info: j = k+1  j < n_  ++j
																						{
																							loop info: i = k+1  i < n_  i++
																							{
																							-----------------------------------------------
																							array table
																							V_ -> ['[i][k]', '[i][j]']
																							-----------------------------------------------
																							}
																							loop info: i = k+1  i < n_  i++
																							{
																							-----------------------------------------------
																							array table
																							V_ -> ['[i][j]', '[i][k]']
																							-----------------------------------------------
																							}
 																						-----------------------------------------------
																						array table
																						-----------------------------------------------
																						}
																					loop info: i = 0  i < n_  i++
																					{
																					-----------------------------------------------
																					array table
																					V_ -> ['[i][k]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				V_ -> ['[k][k]']
																				-----------------------------------------------
																				}
																				loop info: k = p-2  k >= -1  --k
																				{
																				-----------------------------------------------
																				array table
																				s_ -> ['[k]']
																				-----------------------------------------------
																				}
																				loop info: ks = p-1  ks >= k  --ks
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: j = p-2  j >= k  --j
																				{
																					loop info: i = 0  i < n_  i++
																					{
																					-----------------------------------------------
																					array table
																					V_ -> ['[i][j]', '[i]', '[i]', '[i][j]', '[i]', '[i][j]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				s_ -> ['[j]', '[j]', '[j]']
																				-----------------------------------------------
																				}
																				loop info: j = k  j < p  j++
																				{
																					loop info: i = 0  i < m_  i++
																					{
																					-----------------------------------------------
																					array table
																					U_ -> ['[i][j]', '[i]', '[i]', '[i][j]', '[i]', '[i][j]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				s_ -> ['[j]', '[j]', '[j]']
																				-----------------------------------------------
																				}
																				loop info: j = k  j < p-1  j++
																				{
																					loop info: i = 0  i < n_  i++
																					{
																					-----------------------------------------------
																					array table
																					V_ -> ['[i][j]', '[i]', '[i]', '[i][j]', '[i]', '[i][j]']
																					-----------------------------------------------
																					}
																					loop info: i = 0  i < m_  i++
																						{
																						-----------------------------------------------
																						array table
																						U_ -> ['[i][j]', '[i]', '[i]', '[i][j]', '[i]', '[i][j]']
																						-----------------------------------------------
																						}
 																				-----------------------------------------------
																				array table
																				s_ -> ['[j]', '[j]', '[j]']
																				-----------------------------------------------
																				}
																				loop info: i = 0  i <= pp  i++
																				{
																				-----------------------------------------------
																				array table
																				V_ -> ['[i][k]', '[i][k]']
																				-----------------------------------------------
																				}
																				loop info: i = 0  i < n_  i++
																				{
																				-----------------------------------------------
																				array table
																				V_ -> ['[i][k]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: i = 0  i < m_  i++
																				{
																				-----------------------------------------------
																				array table
																				U_ -> ['[i][k]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i = 0  i < Size(n_)  i++
																				{
																					loop info: Size j = 0  j < Size(n_)  j++
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				s_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i = 0  i < s_.size()  i++
																				{
																				-----------------------------------------------
																				array table
																				s_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<numericalRank  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size q=0  q<size  q++
																				{
																				-----------------------------------------------
																				array table
																				diagonal_ -> ['[q]']
																				eigenVectors_ -> ['[q][q]']
																				-----------------------------------------------
																				}
																				loop info: Size a=0  a<size-1  a++
																				{
																					loop info: Size b=a+1  b<size  b++
																					{
																					-----------------------------------------------
																					array table
																					ss -> ['[a][b]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: j=0  j<size-1  j++
																				{
																					loop info: k=j+1  k<size  k++
																					{
																						loop info: l=0  l+1<=j  l++
																							{
																							-----------------------------------------------
																							array table
																							-----------------------------------------------
																							}
																						loop info: l=k+1  l<size  l++
																							{
																							-----------------------------------------------
																							array table
																							-----------------------------------------------
																							}
 																					-----------------------------------------------
																					array table
																					ss -> ['[j][k]', '[j][k]', '[j][k]', '[j][k]', '[j][k]', '[j][k]', '[j][k]']
																					diagonal_ -> ['[j]', '[k]', '[k]', '[j]', '[j]', '[k]']
																					tmpAccumulate -> ['[j]', '[k]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: k=0  k<size  k++
																				{
																				-----------------------------------------------
																				array table
																				tmpAccumulate -> ['[k]', '[k]']
																				tmpDiag -> ['[k]', '[k]']
																				diagonal_ -> ['[k]']
																				-----------------------------------------------
																				}
																				loop info: col=0  col<size  col++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: col=0  col<size  col++
																				{
																					loop info: row=0  row<size  row++
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				second -> ['[0]']
																				-----------------------------------------------
																				}
																				loop info: Size j=1  j<matrixSize  ++j
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=1  i<m.rows()  ++i
																				{
																					loop info: Size j=0  j<bound  ++j
																					{
																					-----------------------------------------------
																					array table
																					angles -> ['[k]', '[k]']
																					-----------------------------------------------
																					}
																					loop info: Size j=bound+1  j<m.rows()  ++j
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<m.rows()  ++i
																				{
																					loop info: Size j=0  j<i  ++j
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
																					loop info: Size j=i+1  j<m.rows()  ++j
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i = 0  i < x.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i = 0  i < x.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<m.rows()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<target_.rows()  ++i
																				{
																					loop info: Size j=0  j<i  ++j
																					{
																					-----------------------------------------------
																					array table
																					differences -> ['[i][j]']
																					result -> ['[k]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: SparseMatrix::size_type i=0  i < L_.size1()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Integer ii=0  ii<n  ++ii
																				{
																					loop info: Integer k=0  k<n  ++k
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
																					loop info: Integer i=0  i<n  ++i
																					{
																					-----------------------------------------------
																					array table
																					levii -> ['[i]']
																					-----------------------------------------------
																					}
																					loop info: Integer k=jj+1  k<n  ++k
																						{
																						-----------------------------------------------
																						array table
																						levii -> ['[k]']
																						-----------------------------------------------
																						}
																					loop info:   iter != end  ++iter
																							{
																							-----------------------------------------------
																							array table
																							-----------------------------------------------
																							}
																					loop info: Size k=0  k<nonZeros.size()  ++k
																							{
																							-----------------------------------------------
																							array table
																							levii -> ['[j]', '[j]', '[j]', '[j]']
																							nonZeros -> ['[k]']
																							nonZeroEntries -> ['[k]', '[k]']
																							-----------------------------------------------
																							}
																					loop info: Size i=0  i<w.size()  ++i
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
																					loop info: Size i=0  i<levii.size()  ++i
																					{
																					-----------------------------------------------
																					array table
																					levii -> ['[i]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				leviiNonZeroEntries -> ['[k]']
																				wNonZeros -> ['[k]']
																				wNonZeroEntries -> ['[k]', '[k]']
																				nonZeroEntries -> ['[0]']
																				-----------------------------------------------
																				}
																				loop info: Integer i=1  i<=n-1  ++i
																				{
																				-----------------------------------------------
																				array table
																				lBands_ -> ['[j]', '[j]']
																				-----------------------------------------------
																				}
																				loop info: Integer i=n-2  i>=0  --i
																				{
																					loop info: Size j=0  j<uBands_.size() && i+uBands_[j] <= n-1  ++j
																					{
																					-----------------------------------------------
																					array table
																					uBands_ -> ['[j]', '[j]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < n  ++i
																				{
																				-----------------------------------------------
																				array table
																				rdiag -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size k=0  k < m  ++k
																				{
																					loop info: Size j=0  j < std::min(n, m)  ++j
																					{
																						loop info: Size i=j  i<m  ++i
																							{
																							-----------------------------------------------
																							array table
																							mT -> ['[j][i]']
																							-----------------------------------------------
																							}
 																					-----------------------------------------------
																					array table
																					mT -> ['[j][j]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < n  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<size  ++i
																				{
																					loop info: Size j=0  j<i  ++j
																					{
																					-----------------------------------------------
																					array table
																					correlationMatrix_ -> ['[i][j]', '[j][i]']
																					stdDevs_ -> ['[i]', '[j]']
																					cov -> ['[i][j]', '[j][i]', '[i][j]', '[j][i]', '[i][j]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				correlationMatrix_ -> ['[i][i]']
																				variances_ -> ['[i]']
																				stdDevs_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size iRow=0  iRow<mtrx.rows()  iRow++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size iCol=0  iCol<n  iCol++
																				{
																					loop info: Size iRow=0  iRow<n  iRow++
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size iCol=0  iCol<n  iCol++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size iCol=0  iCol<n  iCol++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<breaks_.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				breaks_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<breaks_.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				counts_ -> ['[i]']
																				breaks_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<bins_  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: it=samples_.begin()  it!=samples_.end()  ++it
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i=0  i<N  i++
																				{
																					loop info: Size k=0  k<dimension_  k++
																					{
																					-----------------------------------------------
																					array table
																					stats_ -> ['[k]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i=0  i<N  i++
																				{
																					loop info: Size j=0  j<N  j++
																					{
																						loop info: Size k=0  k<dimension_  k++
																						{
																						-----------------------------------------------
																						array table
																						stats_ -> ['[k]', '[k]']
																						-----------------------------------------------
																						}
 																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: j=0 j<KK j++
																				{
																				-----------------------------------------------
																				array table
																				ul -> ['[j]']
																				-----------------------------------------------
																				}
																				loop info:  j<KK+KK-1 j++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: j=KK-1 j>0 --j
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: j=KK+KK-2 j>=KK --j
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: j=KK j>0 --j
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: j=0 j<LL j++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info:  j<KK j++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: j=0 j<KK j++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info:  j<n j++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i=0 i<LL i++,j++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info:  i<KK i++,j++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: mti=1  mti<N  mti++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info:   k  k--
																				{
																				-----------------------------------------------
																				array table
																				mt -> ['[i]', '[i]', '[i]', '[0]']
																				seeds -> ['[j]']
																				-----------------------------------------------
																				}
																				loop info: k=N-1  k  k--
																				{
																				-----------------------------------------------
																				array table
																				mt -> ['[i]', '[i]', '[i]', '[0]']
																				-----------------------------------------------
																				}
																				loop info: kk=0 kk<N-M kk++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info:  kk<N-1 kk++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int i2=mbit_-2  i2>=0  --i2
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int ii=0  ii<(int)mbit_  ii++
																				{
																					loop info: int j1=base_+1  j1<2*(int)base_-1  j1++ 
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: j=0  j<base_   j++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: k=0  k<mbit_  k++
																				{
																				-----------------------------------------------
																				array table
																				pascal3D -> ['[k][0][k]', '[k][1][0]', '[k][1][k]']
																				-----------------------------------------------
																				}
																				loop info: k=2  k<mbit_   k++
																				{
																					loop info: i=1  i<k   i++
																					{
																					-----------------------------------------------
																					array table
																					pascal3D -> ['[k][1][i]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: j=2  j<dimensionality_  j++
																				{
																					loop info: long int kk=mbit_-1  kk>=0   --kk
																					{
																						loop info: long int ii=0  ii<=kk  ii++
																						{
																						-----------------------------------------------
																						array table
																						-----------------------------------------------
																						}
 																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<dimensionality_   i++
																				{
																					loop info: Size j=0  j<=bit   j++
																					{
																					-----------------------------------------------
																					array table
																					powBase_ -> ['[j]']
																					integerSequence_ -> ['[i]']
																					gray_ -> ['[i][j]', '[i][j]', '[i][j]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size j=0  j < dimensionality_  ++j
																				{
																				-----------------------------------------------
																				array table
																				z_ -> ['[j]']
																				sequence_.value -> ['[j]']
																				-----------------------------------------------
																				}
																				loop info:   k<std::min<Size>(dimensionality_,altDegree)  k++,index++
																				{
																				-----------------------------------------------
																				array table
																				degree -> ['[k]']
																				ppmt -> ['[k]', '[k]', '[k]']
																				-----------------------------------------------
																				}
																				loop info:   k<dimensionality_  k++,index++
																				{
																				-----------------------------------------------
																				array table
																				degree -> ['[k]']
																				ppmt -> ['[k]', '[k]', '[k]']
																				-----------------------------------------------
																				}
																				loop info: j=0  j<bits_  j++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: k=1  k<maxTabulated  k++
																				{
																					loop info: Size l=1  l<=degree[k]  l++
																					{
																					-----------------------------------------------
																					array table
																					directionIntegers_ -> ['[k]', '[k]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: k=1  k<std::min(dimensionality_, maxTabulated)  k++
																				{
																				-----------------------------------------------
																				array table
																				directionIntegers_ -> ['[k][j]', '[k][j]']
																				-----------------------------------------------
																				}
																				loop info: k=1  k<std::min(dimensionality_, maxTabulated)  k++
																				{
																				-----------------------------------------------
																				array table
																				directionIntegers_ -> ['[k][j]', '[k][j]']
																				-----------------------------------------------
																				}
																				loop info: k=1  k<std::min(dimensionality_, maxTabulated)  k++
																				{
																				-----------------------------------------------
																				array table
																				directionIntegers_ -> ['[k][j]', '[k][j]']
																				-----------------------------------------------
																				}
																				loop info: k=1  k<std::min(dimensionality_, maxTabulated)  k++
																				{
																				-----------------------------------------------
																				array table
																				directionIntegers_ -> ['[k][j]', '[k][j]']
																				-----------------------------------------------
																				}
																				loop info: k=1  k<std::min(dimensionality_, maxTabulated)  k++
																				{
																				-----------------------------------------------
																				array table
																				directionIntegers_ -> ['[k][j]', '[k][j]']
																				-----------------------------------------------
																				}
																				loop info: k=1  k<std::min(dimensionality_, maxTabulated)  k++
																				{
																				-----------------------------------------------
																				array table
																				directionIntegers_ -> ['[k][j]', '[k][j]']
																				-----------------------------------------------
																				}
																				loop info: k=1  k<std::min(dimensionality_, maxTabulated)  k++
																				{
																				-----------------------------------------------
																				array table
																				directionIntegers_ -> ['[k][j]', '[k][j]']
																				-----------------------------------------------
																				}
																				loop info: k=1  k<std::min(dimensionality_, maxTabulated)  k++
																				{
																				-----------------------------------------------
																				array table
																				directionIntegers_ -> ['[k][j]', '[k][j]']
																				-----------------------------------------------
																				}
																				loop info: k=1  k<std::min(dimensionality_, maxTabulated)  k++
																				{
																				-----------------------------------------------
																				array table
																				directionIntegers_ -> ['[k][j]', '[k][j]']
																				-----------------------------------------------
																				}
																				loop info: k=maxTabulated  k<dimensionality_  k++
																				{
																					loop info: Size l=1  l<=degree[k]  l++
																					{
																					-----------------------------------------------
																					array table
																					directionIntegers_ -> ['[k]', '[k]', '[k]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: k=1  k<dimensionality_  k++
																				{
																					loop info: int l=gk  l<bits_  l++
																					{
																						loop info: Size j=1  j<gk  j++
																						{
																						-----------------------------------------------
																						array table
																						directionIntegers_ -> ['[k]']
																						ppmt -> ['[k]']
																						-----------------------------------------------
																						}
 																					-----------------------------------------------
																					array table
																					directionIntegers_ -> ['[k]', '[k]', '[k]', '[k][l]']
																					ppmt -> ['[k]', '[k]', '[k]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				degree -> ['[k]']
																				-----------------------------------------------
																				}
																				loop info: k=0  k<std::min(32UL,dimensionality_)  k++
																				{
																					loop info: j=0  j<10  j++
																					{
																					-----------------------------------------------
																					array table
																					directionIntegers_ -> ['[k][j]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				degree -> ['[k]']
																				ppmt -> ['[k]']
																				-----------------------------------------------
																				}
																				loop info: k=0  k<dimensionality_  k++
																				{
																				-----------------------------------------------
																				array table
																				directionIntegers_ -> ['[k][0]']
																				integerSequence_ -> ['[k]']
																				-----------------------------------------------
																				}
																				loop info: Size k=0  k<dimensionality_  k++
																				{
																					loop info: Size index=0  index<ops  index++
																					{
																					-----------------------------------------------
																					array table
																					directionIntegers_ -> ['[k]']
																					integerSequence_ -> ['[k]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				integerSequence_ -> ['[k]']
																				-----------------------------------------------
																				}
																				loop info: Size k=0  k<dimensionality_  k++
																				{
																				-----------------------------------------------
																				array table
																				directionIntegers_ -> ['[k][j]']
																				integerSequence_ -> ['[k]']
																				-----------------------------------------------
																				}
																				loop info: int j=bufferSize+7  j>=0  j--
																				{
																				-----------------------------------------------
																				array table
																				buffer -> ['[j]']
																				-----------------------------------------------
																				}
																				loop info: unsigned long i=0  i<skip   i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<dimensionality_  ++i
																				{
																				-----------------------------------------------
																				array table
																				sequence_.value -> ['[i]', '[i]', '[i]']
																				randomShift_ -> ['[i]']
																				randomStart_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < steps_  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info:  i=0  i<n  i++ 
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info:  j=0  j<n  j++ 
																				{
																					loop info:  i=0  i<m  i++ 
																					{
																					-----------------------------------------------
																					array table
																					fvec -> ['[i]']
																					wa -> ['[i]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info:  j=0  j<n  j++ 
																				{
																				-----------------------------------------------
																				array table
																				acnorm -> ['[j]', '[j]']
																				wa -> ['[j]']
																				rdiag -> ['[j]', '[j]']
																				ipvt -> ['[j]']
																				-----------------------------------------------
																				}
																				loop info:  j=0  j<minmn  j++ 
																				{
																					loop info:  k=j  k<n  k++ 
																					{
																					-----------------------------------------------
																					array table
																					rdiag -> ['[k]']
																					-----------------------------------------------
																					}
																					loop info:  i=0  i<m  i++ 
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
																					loop info:  i=j  i<m  i++ 
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
																					loop info:  k=jp1  k<n  k++ 
																						{
																							loop info:  i=j  i<m  i++ 
																							{
																							-----------------------------------------------
																							array table
																							-----------------------------------------------
																							}
																							loop info:  i=j  i<m  i++ 
																							{
																							-----------------------------------------------
																							array table
																							-----------------------------------------------
																							}
 																						-----------------------------------------------
																						array table
																						wa -> ['[k]', '[k]']
																						rdiag -> ['[k]', '[k]', '[k]', '[k]', '[k]', '[k]']
																						-----------------------------------------------
																						}
 																				-----------------------------------------------
																				array table
																				wa -> ['[j]']
																				rdiag -> ['[j]', '[j]']
																				ipvt -> ['[j]', '[j]']
																				-----------------------------------------------
																				}
																				loop info:  j=0  j<n  j++ 
																				{
																					loop info:  i=j  i<n  i++ 
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				qtb -> ['[j]']
																				wa -> ['[j]']
																				-----------------------------------------------
																				}
																				loop info:  j=0  j<n  j++ 
																				{
																					loop info:  k=j  k<n  k++ 
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
																					loop info:  k=j  k<n  k++ 
																					{
																						loop info:  i=kp1  i<n  i++ 
																							{
																							-----------------------------------------------
																							array table
																							sdiag -> ['[i]', '[i]', '[i]']
																							-----------------------------------------------
																							}
 																					-----------------------------------------------
																					array table
																					sdiag -> ['[k]', '[k]', '[k]', '[k]', '[k]']
																					wa -> ['[k]', '[k]', '[k]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				diag -> ['[l]', '[l]']
																				sdiag -> ['[j]', '[j]']
																				ipvt -> ['[j]']
																				-----------------------------------------------
																				}
																				loop info:  j=0  j<n  j++ 
																				{
																				-----------------------------------------------
																				array table
																				sdiag -> ['[j]']
																				wa -> ['[j]']
																				-----------------------------------------------
																				}
																				loop info:  k=0  k<nsing  k++ 
																				{
																					loop info:  i=jp1  i<nsing  i++ 
																						{
																						-----------------------------------------------
																						array table
																						wa -> ['[i]']
																						-----------------------------------------------
																						}
 																				-----------------------------------------------
																				array table
																				sdiag -> ['[j]']
																				wa -> ['[j]', '[j]']
																				-----------------------------------------------
																				}
																				loop info:  j=0  j<n  j++ 
																				{
																				-----------------------------------------------
																				array table
																				ipvt -> ['[j]']
																				wa -> ['[j]']
																				-----------------------------------------------
																				}
																				loop info:  j=0  j<n  j++ 
																				{
																				-----------------------------------------------
																				array table
																				qtb -> ['[j]']
																				wa1 -> ['[j]', '[j]']
																				-----------------------------------------------
																				}
																				loop info:  k=0  k<nsing  k++ 
																				{
																					loop info:  i=0  i<=jm1  i++ 
																						{
																						-----------------------------------------------
																						array table
																						wa1 -> ['[i]']
																						-----------------------------------------------
																						}
 																				-----------------------------------------------
																				array table
																				wa1 -> ['[j]', '[j]', '[j]']
																				-----------------------------------------------
																				}
																				loop info:  j=0  j<n  j++ 
																				{
																				-----------------------------------------------
																				array table
																				ipvt -> ['[j]']
																				wa1 -> ['[j]']
																				-----------------------------------------------
																				}
																				loop info:  j=0  j<n  j++ 
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info:  j=0  j<n  j++ 
																				{
																				-----------------------------------------------
																				array table
																				diag -> ['[l]']
																				ipvt -> ['[j]']
																				wa1 -> ['[j]']
																				wa2 -> ['[l]']
																				-----------------------------------------------
																				}
																				loop info:  j=0  j<n  j++ 
																				{
																					loop info:  i=0  i<=jm1  i++ 
																						{
																						-----------------------------------------------
																						array table
																						wa1 -> ['[i]']
																						-----------------------------------------------
																						}
 																				-----------------------------------------------
																				array table
																				wa1 -> ['[j]', '[j]']
																				-----------------------------------------------
																				}
																				loop info:  j=0  j<n  j++ 
																				{
																					loop info:  i=0  i<=j  i++ 
																					{
																					-----------------------------------------------
																					array table
																					qtb -> ['[i]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				diag -> ['[l]']
																				ipvt -> ['[j]']
																				wa1 -> ['[j]']
																				-----------------------------------------------
																				}
																				loop info:  j=0  j<n  j++ 
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info:  j=0  j<n  j++ 
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info:  j=0  j<n  j++ 
																				{
																				-----------------------------------------------
																				array table
																				diag -> ['[l]']
																				ipvt -> ['[j]']
																				wa1 -> ['[j]']
																				wa2 -> ['[l]']
																				-----------------------------------------------
																				}
																				loop info:  j=0  j<n  j++ 
																				{
																					loop info:  i=jp1  i<n  i++ 
																						{
																						-----------------------------------------------
																						array table
																						wa1 -> ['[i]']
																						-----------------------------------------------
																						}
 																				-----------------------------------------------
																				array table
																				sdiag -> ['[j]']
																				wa1 -> ['[j]', '[j]', '[j]']
																				-----------------------------------------------
																				}
																				loop info:  j=0  j<n  j++ 
																				{
																				-----------------------------------------------
																				array table
																				diag -> ['[j]']
																				-----------------------------------------------
																				}
																				loop info:  j=0  j<n  j++ 
																				{
																				-----------------------------------------------
																				array table
																				diag -> ['[j]', '[j]']
																				wa2 -> ['[j]', '[j]']
																				-----------------------------------------------
																				}
																				loop info:  j=0  j<n  j++ 
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info:  i=0  i<m  i++ 
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info:  j=0  j<n  j++ 
																				{
																					loop info:  i=j  i<m  i++ 
																						{
																						-----------------------------------------------
																						array table
																						wa4 -> ['[i]']
																						-----------------------------------------------
																						}
																					loop info:  i=j  i<m  i++ 
																						{
																						-----------------------------------------------
																						array table
																						wa4 -> ['[i]']
																						-----------------------------------------------
																						}
 																				-----------------------------------------------
																				array table
																				qtf -> ['[j]']
																				wa4 -> ['[j]']
																				wa1 -> ['[j]']
																				-----------------------------------------------
																				}
																				loop info:  j=0  j<n  j++ 
																				{
																					loop info:  i=0  i<=j  i++ 
																						{
																						-----------------------------------------------
																						array table
																						qtf -> ['[i]']
																						-----------------------------------------------
																						}
 																				-----------------------------------------------
																				array table
																				ipvt -> ['[j]']
																				wa2 -> ['[l]', '[l]']
																				-----------------------------------------------
																				}
																				loop info:  j=0  j<n  j++ 
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info:  j=0  j<n  j++ 
																				{
																				-----------------------------------------------
																				array table
																				diag -> ['[j]']
																				wa3 -> ['[j]']
																				wa2 -> ['[j]']
																				wa1 -> ['[j]', '[j]', '[j]', '[j]']
																				-----------------------------------------------
																				}
																				loop info:  j=0  j<n  j++ 
																				{
																					loop info:  i=0  i<=j  i++ 
																					{
																					-----------------------------------------------
																					array table
																					wa3 -> ['[i]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				wa3 -> ['[j]']
																				ipvt -> ['[j]']
																				wa1 -> ['[l]']
																				-----------------------------------------------
																				}
																				loop info:  j=0  j<n  j++ 
																				{
																				-----------------------------------------------
																				array table
																				diag -> ['[j]']
																				wa2 -> ['[j]', '[j]']
																				-----------------------------------------------
																				}
																				loop info:  i=0  i<m  i++ 
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i = 0  i < fixParameters_.size()  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size j = 0  j < actualParameters_.size()  j++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size j = 0  j < fixParameters_.size()  j++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size j = 0  j < y.size()  j++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<vertices.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<vertices.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				vertices -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: i=0  i<n  i++
																				{
																				-----------------------------------------------
																				array table
																				direction -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: i=0  i<=n  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i=0  i<=n  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i=1 i<=n  i++
																				{
																				-----------------------------------------------
																				array table
																				values_ -> ['[i]', '[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<=n  i++
																				{
																				-----------------------------------------------
																				array table
																				vertices_ -> ['[i]', '[i]', '[i]', '[i]', '[i]']
																				values_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size popIter = 0  popIter < population.size()  popIter++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size popIter = 0  popIter < population.size()  popIter++
																				{
																					loop info: Size jitterIter = 0  jitterIter < jitter.size()  jitterIter++
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size popIter = 0  popIter < population.size()  popIter++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size fwIter = 0  fwIter < FWeight.size()  fwIter++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size popIter = 0  popIter < population.size()  popIter++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size popIter = 0  popIter < population.size()  popIter++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size popIter = 0  popIter < population.size()  popIter++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size popIter = 0  popIter < population.size()  popIter++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size popIter = 0  popIter < population.size()  popIter++
																				{
																					loop info: Size memIter = 0  memIter < population[popIter].values.size()  memIter++
																						{
																						-----------------------------------------------
																						array table
																						-----------------------------------------------
																						}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size cmIter = 0  cmIter < crossoverMask.size()  cmIter++
																				{
																					loop info: Size memIter = 0  memIter < crossoverMask[cmIter].size()  memIter++
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size coIter = 0 coIter< currGenCrossover_.size()  coIter++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size coIter = 0 coIter < currGenSizeWeights_.size()  coIter++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size coIter = 0 coIter < currGenCrossover_.size()  coIter++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size j = 1  j < population.size()  ++j
																				{
																					loop info: Size i = 0  i < p.currentValue().size()  ++i
																					{
																					-----------------------------------------------
																					array table
																					upperBound_ -> ['[i]']
																					population -> ['[j]']
																					values -> ['[i]']
																					lowerBound_ -> ['[i]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				population -> ['[j]', '[j]']
																				-----------------------------------------------
																				}
																				loop info: Size i = 0  i < P.currentValue().size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i = 0  i < P.currentValue().size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i = 0  i < P.currentValue().size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				diffGradient -> ['[i]', '[i]', '[i]']
																				diffGradientWithHessianApplied -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i = 0  i < P.currentValue().size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i = 0  i < P.currentValue().size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				diffGradientWithHessianApplied -> ['[i]', '[j]']
																				diffGradient -> ['[i]', '[j]']
																				inverseHessian_ -> ['[i][j]', '[i][j]', '[i][j]']
																				-----------------------------------------------
																				}
																				loop info: Size i = 0  i < P.currentValue().size()  ++i
																				{
																					loop info: Size j = 0  j < P.currentValue().size()  ++j
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				direction -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size n=1  n<=100  n++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size n=1  n<=100  n++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Natural j = 3  j <= n / 2  ++j
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Natural j = 3  j <= n / 2  ++j
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Natural j = 2  j <= (n - 1) / 2  ++j
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Natural j = 2  j <= (n - 1) / 2  ++j
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<5  i++
																				{
																					loop info: Size j=0 j<5  j++
																					{
																					-----------------------------------------------
																					array table
																					x_ -> ['[i]', '[j]']
																					y_ -> ['[i]', '[j]', '[i]', '[j]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info:   
																				{
																					loop info:   
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<nTimeSteps  i++
																				{
																					loop info: Integer j=jMin  j<=jMax  j++
																					{
																					-----------------------------------------------
																					array table
																					dx_ -> ['[i]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				timeGrid -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<order_  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=1  i<b_.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<v.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<dim  ++i
																				{
																					loop info: Size j=0  j<v.size()  ++j
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<=order  ++i
																				{
																				-----------------------------------------------
																				array table
																				ret -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=1  i<=order  ++i
																				{
																					loop info: Size j=0  j<tuples.size()  ++j
																					{
																						loop info: Size k=0  k<dim  ++k
																						{
																						-----------------------------------------------
																						array table
																						-----------------------------------------------
																						}
 																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=steps-1  i!=0  --i
																				{
																					loop info: j=0  j<exerciseData.size()  ++j
																					{
																					-----------------------------------------------
																					array table
																					exerciseData -> ['[j]', '[j]', '[j]', '[j]', '[j]']
																					-----------------------------------------------
																					}
																					loop info: Size k=0  k<N  ++k
																					{
																						loop info: Size l=0  l<=k  ++l
																						{
																						-----------------------------------------------
																						array table
																						-----------------------------------------------
																						}
 																					-----------------------------------------------
																					array table
																					means -> ['[k]', '[N]']
																					target -> ['[k]']
																					covariance -> ['[k][N]']
																					-----------------------------------------------
																					}
																					loop info: j=0  j<exerciseData.size()  ++j
																					{
																					-----------------------------------------------
																					array table
																					exerciseData -> ['[j]', '[j]', '[j]', '[j]', '[j]', '[j]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				simulationData -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size j=0  j<estimatedData.size()  ++j
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<simulationData_.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				simulationData_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<simulationData_.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				simulationData_ -> ['[i]', '[i]', '[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=steps-1  i!=0  --i
																				{
																					loop info: Size j=0  j<previousData.size()  ++j
																					{
																					-----------------------------------------------
																					array table
																					exerciseData -> ['[j]', '[j]', '[j]', '[j]']
																					previousData -> ['[j]', '[j]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				simulationData -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<initialData.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<size_  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<size_  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=1  i<size_  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size j=0, i=1  i<size_  ++i
																				{
																				-----------------------------------------------
																				array table
																				map -> ['[j]', '[k]', '[l]']
																				rightIndex_ -> ['[i]']
																				t_ -> ['[k]', '[l]', '[k]', '[l]', '[k]', '[l]', '[k]', '[l]', '[k]', '[k]', '[l]', '[k]', '[l]', '[k]', '[l]', '[k]', '[l]', '[k]']
																				bridgeIndex_ -> ['[i]']
																				rightWeight_ -> ['[i]', '[i]']
																				leftWeight_ -> ['[i]', '[i]']
																				leftIndex_ -> ['[i]']
																				stdDev_ -> ['[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: Size j=1  j<=n_-2  j++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size j=1  j<=n_-1  ++j
																				{
																				-----------------------------------------------
																				array table
																				diagonal_ -> ['[j]']
																				rhs -> ['[j]']
																				temp_ -> ['[j]', '[j]']
																				result -> ['[j]']
																				-----------------------------------------------
																				}
																				loop info: Size j=n_-2  j>0  --j
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size sorIteration=0  err>tol   ++sorIteration
																				{
																					loop info: i=1  i<n_-1   ++i
																					{
																					-----------------------------------------------
																					array table
																					diagonal_ -> ['[i]', '[i]']
																					rhs -> ['[i]']
																					upperDiagonal_ -> ['[i]']
																					result -> ['[i]', '[i]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				diagonal_ -> ['[0]', '[0]', '[i]', '[i]']
																				rhs -> ['[0]', '[i]']
																				upperDiagonal_ -> ['[0]']
																				result -> ['[1]', '[0]', '[0]', '[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < layout->dim().size()  ++i
																				{
																					loop info: Size j=0  j < layout->dim()[i]  ++j
																					{
																					-----------------------------------------------
																					array table
																					boundaries -> ['[i]']
																					locations_ -> ['[i][j]']
																					dx_ -> ['[i]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				dx_ -> ['[i]']
																				boundaries -> ['[i]', '[i]']
																				locations_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=1  i < size-1  ++i
																				{
																				-----------------------------------------------
																				array table
																				locations_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=1  i < size-1  ++i
																				{
																				-----------------------------------------------
																				array table
																				locations_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < size-1  ++i
																				{
																				-----------------------------------------------
																				array table
																				locations_ -> ['[i]']
																				dplus_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < dim.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				dim -> ['[i]']
																				meshers -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < mesher.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				mesher -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < locations_.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				dminus_ -> ['[i]']
																				dplus_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < locations_.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				dminus_ -> ['[i]']
																				dplus_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size l=1  l<=tAvgSteps  ++l
																				{
																					loop info: Size i=1  i < size  ++i
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < size  ++i
																				{
																					loop info: Size j=b  j < e  ++j
																					{
																					-----------------------------------------------
																					array table
																					vGrid -> ['[i]']
																					pGrid -> ['[i]']
																					tp -> ['[j]', '[j]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < size  ++i
																				{
																				-----------------------------------------------
																				array table
																				vGrid -> ['[i]']
																				pGrid -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=1  i<vGrid.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				vGrid -> ['[i]', '[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < size-1  ++i
																				{
																				-----------------------------------------------
																				array table
																				vGrid -> ['[i]']
																				dplus_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < steps  ++i
																				{
																				-----------------------------------------------
																				array table
																				locations_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < steps-1  ++i
																				{
																				-----------------------------------------------
																				array table
																				locations_ -> ['[i]']
																				dplus_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size l=1  l<=tAvgSteps  ++l
																				{
																					loop info: Size i=1  i < size-1  ++i
																					{
																					-----------------------------------------------
																					array table
																					locations_ -> ['[i]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				locations_ -> ['[0]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < size-1  ++i
																				{
																				-----------------------------------------------
																				array table
																				locations_ -> ['[i]']
																				dplus_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: FdmLinearOpIterator iter = layout->begin()  iter!=endIter  ++iter
																				{
																				-----------------------------------------------
																				array table
																				a00_ -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
																				a01_ -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
																				a10_ -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
																				a11_ -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
																				a20_ -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
																				a12_ -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
																				a22_ -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
																				a02_ -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
																				a21_ -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: FdmLinearOpIterator iter = layout->begin()  iter!=endIter  ++iter
																				{
																				-----------------------------------------------
																				array table
																				lower_ -> ['[i]', '[i]']
																				diag_ -> ['[i]', '[i]']
																				upper_ -> ['[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < f.rows()  ++i
																				{
																				-----------------------------------------------
																				array table
																				interpl -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: FdmLinearOpIterator iter=layout->begin()  iter!=endIter  ++iter
																				{
																				-----------------------------------------------
																				array table
																				interpl -> ['[j]']
																				-----------------------------------------------
																				}
																				loop info: FdmLinearOpIterator iter = layout->begin()  iter!=endIter  ++iter
																				{
																				-----------------------------------------------
																				array table
																				lower_ -> ['[i]', '[i]', '[i]']
																				diag_ -> ['[i]', '[i]', '[i]']
																				upper_ -> ['[i]', '[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: FdmLinearOpIterator iter = layout->begin()  iter!=endIter  ++iter
																				{
																				-----------------------------------------------
																				array table
																				i22_ -> ['[i]']
																				i02_ -> ['[i]']
																				i21_ -> ['[i]']
																				i00_ -> ['[i]']
																				i01_ -> ['[i]']
																				i10_ -> ['[i]']
																				i20_ -> ['[i]']
																				i12_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < retVal.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				a20 -> ['[i]']
																				a21 -> ['[i]']
																				a22 -> ['[i]']
																				a11 -> ['[i]']
																				a10 -> ['[i]']
																				a12 -> ['[i]']
																				a02 -> ['[i]']
																				i21 -> ['[i]']
																				a00 -> ['[i]']
																				a01 -> ['[i]']
																				i10 -> ['[i]']
																				i12 -> ['[i]']
																				i02 -> ['[i]']
																				i20 -> ['[i]']
																				i00 -> ['[i]']
																				i01 -> ['[i]']
																				retVal -> ['[i]']
																				i22 -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < index->size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				a00_ -> ['[i]']
																				i22_ -> ['[i]']
																				i02_ -> ['[i]']
																				a01_ -> ['[i]']
																				i21_ -> ['[i]']
																				i00_ -> ['[i]']
																				a10_ -> ['[i]']
																				i01_ -> ['[i]']
																				a11_ -> ['[i]']
																				a21_ -> ['[i]']
																				i10_ -> ['[i]']
																				a20_ -> ['[i]']
																				a12_ -> ['[i]']
																				a22_ -> ['[i]']
																				a02_ -> ['[i]']
																				i20_ -> ['[i]']
																				i12_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < size  ++i
																				{
																				-----------------------------------------------
																				array table
																				a00_ -> ['[i]']
																				retVal.a11_ -> ['[i]']
																				a01_ -> ['[i]']
																				retVal.a10_ -> ['[i]']
																				a10_ -> ['[i]']
																				retVal.a22_ -> ['[i]']
																				retVal.a01_ -> ['[i]']
																				retVal.a21_ -> ['[i]']
																				a11_ -> ['[i]']
																				retVal.a00_ -> ['[i]']
																				a22_ -> ['[i]']
																				a20_ -> ['[i]']
																				retVal.a02_ -> ['[i]']
																				a21_ -> ['[i]']
																				a12_ -> ['[i]']
																				retVal.a12_ -> ['[i]']
																				a02_ -> ['[i]']
																				retVal.a20_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: FdmLinearOpIterator iter = layout->begin()  iter!=endIter  ++iter
																				{
																				-----------------------------------------------
																				array table
																				i0_ -> ['[i]']
																				i2_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < size  ++i
																				{
																				-----------------------------------------------
																				array table
																				upper -> ['[i]']
																				lower -> ['[i]']
																				y_lower -> ['[i]']
																				y_diag -> ['[i]']
																				diag -> ['[i]']
																				y_upper -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < size  ++i
																				{
																				-----------------------------------------------
																				array table
																				upper -> ['[i]']
																				lower -> ['[i]']
																				y_lower -> ['[i]']
																				y_diag -> ['[i]']
																				diag -> ['[i]']
																				y_upper -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < size  ++i
																				{
																				-----------------------------------------------
																				array table
																				upper -> ['[i]']
																				lower -> ['[i]']
																				y_lower -> ['[i]']
																				y_diag -> ['[i]']
																				diag -> ['[i]']
																				x_upper -> ['[i]']
																				y_upper -> ['[i]']
																				x_lower -> ['[i]']
																				x_diag -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < size  ++i
																				{
																				-----------------------------------------------
																				array table
																				upper -> ['[i]']
																				lower -> ['[i]']
																				y_lower -> ['[i]']
																				y_diag -> ['[i]']
																				diag -> ['[i]']
																				x_upper -> ['[i]']
																				y_upper -> ['[i]']
																				x_lower -> ['[i]']
																				x_diag -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < size  ++i
																				{
																				-----------------------------------------------
																				array table
																				retVal.lower_ -> ['[i]']
																				m.diag_ -> ['[i]']
																				lower_ -> ['[i]']
																				m.lower_ -> ['[i]']
																				retVal.diag_ -> ['[i]']
																				upper_ -> ['[i]']
																				m.upper_ -> ['[i]']
																				diag_ -> ['[i]']
																				retVal.upper_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < size  ++i
																				{
																				-----------------------------------------------
																				array table
																				retVal.lower_ -> ['[i]']
																				lower_ -> ['[i]']
																				retVal.diag_ -> ['[i]']
																				upper_ -> ['[i]']
																				diag_ -> ['[i]']
																				retVal.upper_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < size  ++i
																				{
																				-----------------------------------------------
																				array table
																				retVal.lower_ -> ['[i]']
																				lower_ -> ['[i]']
																				retVal.diag_ -> ['[i]']
																				upper_ -> ['[i]']
																				diag_ -> ['[i]']
																				retVal.upper_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < index->size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				i0ptr -> ['[i]']
																				i2ptr -> ['[i]']
																				lptr -> ['[i]']
																				dptr -> ['[i]']
																				retVal -> ['[i]']
																				uptr -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < n  ++i
																				{
																				-----------------------------------------------
																				array table
																				upper_ -> ['[i]']
																				i2_ -> ['[i]']
																				lower_ -> ['[i]']
																				i0_ -> ['[i]']
																				diag_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size j=1  j<=layout->size()-1  j++
																				{
																				-----------------------------------------------
																				array table
																				reverseIndex_ -> ['[j]']
																				tmp -> ['[j]', '[j]']
																				-----------------------------------------------
																				}
																				loop info: Size j=layout->size()-2  j>0  --j
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < z_.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				resultValues_ -> ['[i]', '[i]']
																				interpolation_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < z_.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				zArray -> ['[i]']
																				interpolation_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < z_.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				thetaValues -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < z_.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				zArray -> ['[i]']
																				thetaValues -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < retVal.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				retVal -> ['[i]']
																				equityVol -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < x.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i = 0  i < x_.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				x_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size k=0  k<x_.size()  ++k
																				{
																				-----------------------------------------------
																				array table
																				x_ -> ['[0]', '[k]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<mesher_->layout()->dim().size()  ++i
																				{
																					loop info: Size j=0  j<mesher_->layout()->dim()[i]  ++j
																						{
																							loop info: Size k=0  k<x_.size()  ++k
																							{
																							-----------------------------------------------
																							array table
																							tmp -> ['[k]']
																							-----------------------------------------------
																							}
																							loop info: Size k=0  k<x_.size()  ++k
																							{
																							-----------------------------------------------
																							array table
																							x_ -> ['[0]', '[k]']
																							-----------------------------------------------
																							}
 																						-----------------------------------------------
																						array table
																						-----------------------------------------------
																						}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < x.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < map_->size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < map_->size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < map_->size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < map_->size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < map_->size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < map_->size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < map_->size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < dims  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i = 0  i < x_.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				x_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i = 0  i < a_.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				a_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<x_.size()  ++i
																				{
																					loop info: Size j=0  j<a_.size()  ++j
																					{
																					-----------------------------------------------
																					array table
																					tmp -> ['[j]']
																					-----------------------------------------------
																					}
																					loop info: Size j=0  j<a_.size()  ++j
																					{
																					-----------------------------------------------
																					array table
																					x_ -> ['[i]']
																					a_ -> ['[j]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: const_iterator iter=l_.begin()  iter != l_.end()  ++iter
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: const_iterator iter = l_.begin()  iter != l_.end()  ++iter
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: const_iterator iter = l_.begin()  iter != l_.end()  ++iter
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < l_.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				l_ -> ['[i]']
																				vsize_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < l_.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				l_ -> ['[i]']
																				vsize_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size j=0  j < l_.size()  ++j
																				{
																					loop info: Size i=0  i < pCov.rows()  ++i
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				l_ -> ['[j]']
																				vsize_ -> ['[j]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < size()  ++i
																				{
																					loop info: Size j=0  j < size()  ++j
																					{
																					-----------------------------------------------
																					array table
																					crossModelCovar -> ['[i][j]']
																					volatility -> ['[i]', '[j]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < l_.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				l_ -> ['[i]']
																				vsize_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < cov.rows()  ++i
																				{
																					loop info: Size j=i  j < cov.columns()  ++j
																					{
																					-----------------------------------------------
																					array table
																					sqrtDiag -> ['[i]', '[j]']
																					cov -> ['[i][j]', '[j][i]', '[i][j]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size j = 0  j < l_.size()  ++j
																				{
																					loop info: Size i=0  i < stdDev.rows()  ++i
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
																					loop info: Size i=0  i < s.size()  ++i
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
																					loop info: Size i=0  i < stdDev.rows()  ++i
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				l_ -> ['[j]']
																				vfactors_ -> ['[j]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < cov.rows()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: const_iterator iter = l_.begin()  iter != l_.end()  ++iter
																				{
																				-----------------------------------------------
																				array table
																				vsize_ -> ['[i]', '[i]', '[i]']
																				vfactors_ -> ['[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<processes_.size()  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				processes_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				x0 -> ['[i]']
																				processes_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < ((int)times.size()) - 1  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i = 0  i < vols.size()  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size k = i  k < j  k++
																				{
																				-----------------------------------------------
																				array table
																				vols_ -> ['[k]', '[k]', '[k]', '[k]']
																				times_ -> ['[k]', '[k]']
																				-----------------------------------------------
																				}
																				loop info: Integer i=m-1  i >= 0  --i
																				{
																				-----------------------------------------------
																				array table
																				nominator -> ['[i]']
																				denominator -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < ((int)times.size()) - 1  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < (int)reversions_.size()  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int i = lowerIndex(w)  i <= upperIndex(t) - 1  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int k = lowerIndex(w)  k <= upperIndex(t) - 1  k++
																				{
																					loop info: int l = 0  l <= k - 1  l++
																					{
																						loop info: int i = k + 1  i <= upperIndex(t) - 1  i++
																						{
																						-----------------------------------------------
																						array table
																						-----------------------------------------------
																						}
																						loop info: int j = l + 1  j <= k - 1  j++
																						{
																						-----------------------------------------------
																						array table
																						-----------------------------------------------
																						}
 																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
																					loop info: int i = k + 1  i <= upperIndex(t) - 1  i++
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int k = lowerIndex(w)  k <= upperIndex(t) - 1  k++
																				{
																					loop info: int l = k + 1  l <= upperIndex(T) - 1  l++
																					{
																						loop info: int i = k + 1  i <= upperIndex(t) - 1  i++
																						{
																						-----------------------------------------------
																						array table
																						-----------------------------------------------
																						}
																						loop info: int j = k + 1  j <= l - 1  j++
																						{
																						-----------------------------------------------
																						array table
																						-----------------------------------------------
																						}
 																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
																					loop info: int i = k + 1  i <= upperIndex(t) - 1  i++
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int k = lowerIndex(w)  k <= upperIndex(t) - 1  k++
																				{
																					loop info: int i = k + 1  i <= upperIndex(t) - 1  i++
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i <= upperIndex(t) - 1  i++
																				{
																					loop info: int j = i + 1  j <= upperIndex(t) - 1  j++
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int i = lowerIndex(t)  i <= upperIndex(w) - 1  i++
																				{
																					loop info: int j = lowerIndex(t)  j <= i - 1  j++
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<size_  ++i
																				{
																					loop info: Size j=0  j<=i ++j
																					{
																						loop info: Size k=0  k < 64  ++k
																						{
																						-----------------------------------------------
																						array table
																						tmp -> ['[i][j]']
																						-----------------------------------------------
																						}
 																					-----------------------------------------------
																					array table
																					tmp -> ['[j][i]', '[i][j]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<size_  ++i
																				{
																				-----------------------------------------------
																				array table
																				tmp -> ['[i]']
																				fixingTimes_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i <size_  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<size_  ++i
																				{
																				-----------------------------------------------
																				array table
																				tmp -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i = 0  i < size_  ++i
																				{
																				-----------------------------------------------
																				array table
																				accrualEndTimes_ -> ['[i]']
																				fixingDates_ -> ['[i]']
																				accrualPeriod_ -> ['[i]']
																				initialValues_ -> ['[i]']
																				flows -> ['[i]']
																				fixingTimes_ -> ['[i]']
																				accrualStartTimes_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size k=m  k<size_  ++k
																				{
																				-----------------------------------------------
																				array table
																				accrualPeriod_ -> ['[k]', '[k]']
																				m1 -> ['[k]']
																				covariance -> ['[k][k]']
																				-----------------------------------------------
																				}
																				loop info: Size k=0  k<size_  ++k
																				{
																				-----------------------------------------------
																				array table
																				tmp -> ['[k]']
																				x0 -> ['[k]']
																				dx -> ['[k]']
																				-----------------------------------------------
																				}
																				loop info: Size k=m  k<size_  ++k
																				{
																				-----------------------------------------------
																				array table
																				accrualPeriod_ -> ['[k]']
																				x0 -> ['[k]', '[k]']
																				m1 -> ['[k]']
																				covariance -> ['[k][k]', '[k][k]']
																				m2 -> ['[k]']
																				-----------------------------------------------
																				}
																				loop info: Size i = 1  i < size_  ++i
																				{
																				-----------------------------------------------
																				array table
																				discountFactors -> ['[i]']
																				accrualPeriod_ -> ['[i]']
																				rates -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<size_  ++i
																				{
																				-----------------------------------------------
																				array table
																				vol -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<size_  ++i
																				{
																					loop info: Size j=0  j<size_  ++j
																					{
																					-----------------------------------------------
																					array table
																					tmp -> ['[i][j]']
																					correlation -> ['[i][j]']
																					volatility -> ['[i]', '[j]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size k=0  k<64  ++k
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i = 1  i < startTimes_.size()  i++
																				{
																				-----------------------------------------------
																				array table
																				startTimes_ -> ['[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=ti  i<size_  ++i
																				{
																				-----------------------------------------------
																				array table
																				tmp -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<size_  ++i
																				{
																					loop info: Size j=i  j<size_  ++j
																					{
																					-----------------------------------------------
																					array table
																					corrMatrix_ -> ['[i][j]', '[j][i]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < process->size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				accrualPeriod_ -> ['[i]', '[i]']
																				f_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size k=alpha+1  k<=beta  ++k
																				{
																					loop info: Size j=alpha+1  j<=k  ++j
																					{
																					-----------------------------------------------
																					array table
																					f_ -> ['[j]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				accrualPeriod_ -> ['[k]']
																				-----------------------------------------------
																				}
																				loop info: Size i=alpha+1  i<=beta  ++i
																				{
																					loop info: Size j=alpha+1  j<=i  ++j
																					{
																					-----------------------------------------------
																					array table
																					f_ -> ['[j]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				accrualPeriod_ -> ['[i]']
																				omega -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=alpha+1  i <=beta  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < size  ++i
																				{
																				-----------------------------------------------
																				array table
																				lengths -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size k=0  k < size  ++k
																				{
																					loop info: Size i=alpha+1  i <= k+size  ++i
																					{
																						loop info: Size j=i  j <= k+size  ++j
																						{
																						-----------------------------------------------
																						array table
																						-----------------------------------------------
																						}
 																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
																					loop info: Size l=1  l <= size  ++l
																					{
																						loop info: Size i=alpha+1  i <= beta  ++i
																						{
																							loop info: Size j=alpha+1  j <= beta  ++j
																							{
																							-----------------------------------------------
																							array table
																							-----------------------------------------------
																							}
 																						-----------------------------------------------
																						array table
																						-----------------------------------------------
																						}
 																					-----------------------------------------------
																					array table
																					volatilities -> ['[k]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<size_  ++i
																				{
																					loop info: Size j=i  j<size_  ++j
																					{
																					-----------------------------------------------
																					array table
																					corrMatrix_ -> ['[i][j]', '[j][i]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < size_-1  ++i
																				{
																				-----------------------------------------------
																				array table
																				sqrtCorr -> ['[i]']
																				tmpSqrtCorr -> ['[i]', '[i]', '[i]', '[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i = 1  i < size_  ++i
																				{
																					loop info: Size j = 1  j < i  ++j
																					{
																					-----------------------------------------------
																					array table
																					fixingTimes -> ['[j]']
																					-----------------------------------------------
																					}
																					loop info: Size q=0  q<factors_  ++q
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				fixingDates -> ['[i]', '[0]', '[i]']
																				fixingTimes -> ['[1]', '[0]']
																				-----------------------------------------------
																				}
																				loop info: Size k=m  k<size_  ++k
																				{
																					loop info: Size q=0  q<factors_  ++q
																					{
																					-----------------------------------------------
																					array table
																					tmp -> ['[k][q]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size k=m  k<size_  ++k
																				{
																					loop info: Size i=m  i<size_  ++i
																					{
																					-----------------------------------------------
																					array table
																					tmp -> ['[k][i]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<last  ++i
																				{
																					loop info: Size k=i  k<size_-1  ++k
																					{
																						loop info: Size l=i  l<size_-1  ++l
																						{
																						-----------------------------------------------
																						array table
																						-----------------------------------------------
																						}
 																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				fixingTimes_ -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i< numberOfCallDates  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size step = 0  step < n-1  step++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i=12  i>=1  i--
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i=52  i>=2  i-=2
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i=52  i>=1  i--
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i< numberRates-1  i=i+1
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < numberRates  ++i
																				{
																				-----------------------------------------------
																				array table
																				swaptions -> ['[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < rateTimes.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < paymentTimes.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < means.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < 4  ++i
																				{
																					loop info: Size i=0  i < numberRates  ++i, ++r
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
																					loop info:   r < values.size()  ++r
																					{
																					-----------------------------------------------
																					array table
																					errors -> ['[r]']
																					values -> ['[r]', '[r]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size s=0  s < isExerciseTime.size()  ++s
																				{
																				-----------------------------------------------
																				array table
																				isExerciseTime -> ['[s]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < rateTimes.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < paymentTimes.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < means.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i < 4  ++i
																				{
																					loop info: Size i=0  i < numberRates  ++i, ++r
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
																					loop info:   r < values.size()  ++r
																					{
																					-----------------------------------------------
																					array table
																					errors -> ['[r]']
																					values -> ['[r]', '[r]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size s=0  s < isExerciseTime.size()  ++s
																				{
																				-----------------------------------------------
																				array table
																				isExerciseTime -> ['[s]']
																				-----------------------------------------------
																				}
																				loop info: Size i=5  i < 10  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<LENGTH(callLength)  i++
																				{
																				-----------------------------------------------
																				array table
																				callPrices -> ['[i]']
																				callLength -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size j=0  j<LENGTH(putLength)  j++
																				{
																				-----------------------------------------------
																				array table
																				putLength -> ['[j]']
																				putPrices -> ['[j]']
																				-----------------------------------------------
																				}
																				loop info: Date d = today + 6*Months  d < exerciseDate  d += 6*Months
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size j = 0  j < basket.size()  ++j
																				{
																				-----------------------------------------------
																				array table
																				basket -> ['[j]']
																				-----------------------------------------------
																				}
																				loop info: Size j = 0  j < basket.size()  ++j
																				{
																				-----------------------------------------------
																				array table
																				basket -> ['[j]', '[j]', '[j]', '[j]', '[j]', '[j]']
																				volatility -> ['[j]']
																				-----------------------------------------------
																				}
																				loop info: Size i = 1  i < 10  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i = 0  i < basket.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i = 0  i < basket.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i = 0  i < fixedSchedule.size() - 1  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i = 0  i < basket.size()  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i = 0  i < basket.size()  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i = 0  i < basket.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i = 0  i < basket.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Integer i=1  i<=4  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<4  i++
																				{
																				-----------------------------------------------
																				array table
																				tenors -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<4  i++
																				{
																				-----------------------------------------------
																				array table
																				tenors -> ['[i]']
																				quoted_spreads -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<hr_curve_data.size()  i++
																				{
																				-----------------------------------------------
																				array table
																				hr_curve_data -> ['[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<arg.size()  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<dimension  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i=0  i<LENGTH(monthsToStart)  i++
																				{
																				-----------------------------------------------
																				array table
																				monthsToStart -> ['[i]', '[i]', '[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: i=0  i<LENGTH(monthsToStart)  i++
																				{
																				-----------------------------------------------
																				array table
																				monthsToStart -> ['[i]', '[i]', '[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<hazardRates.size()  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<hazardRates.size()  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<hazardRates.size()  i++
																				{
																				-----------------------------------------------
																				array table
																				defTS -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<hazardRates.size()  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size numEvts=0  numEvts <=theBskt->size()  numEvts++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size numEvts=0  numEvts <=theBskt->size()  numEvts++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size numEvts=0  numEvts <=theBskt->size()  numEvts++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size numEvts=0  numEvts <=theBskt->size()  numEvts++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size iName1=0  iName1 <theBskt->size()  iName1++
																				{
																					loop info: Size iName2=0  iName2 <theBskt->size()  iName2++
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size iName1=0  iName1 <theBskt->size()  iName1++
																				{
																					loop info: Size iName2=0  iName2 <theBskt->size()  iName2++
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size iName1=0  iName1 <theBskt->size()  iName1++
																				{
																					loop info: Size iName2=0  iName2 <theBskt->size()  iName2++
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size iName1=0  iName1 <theBskt->size()  iName1++
																				{
																					loop info: Size iName2=0  iName2 <theBskt->size()  iName2++
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size numEvts=0  numEvts <=theBskt->size()  numEvts++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size iName1=0  iName1 <theBskt->size()  iName1++
																				{
																					loop info: Size iName2=0  iName2 <theBskt->size()  iName2++
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size iName1=0  iName1 <theBskt->size()  iName1++
																				{
																					loop info: Size iName2=0  iName2 <theBskt->size()  iName2++
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size iName1=0  iName1 <theBskt->size()  iName1++
																				{
																					loop info: Size iName2=0  iName2 <theBskt->size()  iName2++
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size iName1=0  iName1 <theBskt->size()  iName1++
																				{
																					loop info: Size iName2=0  iName2 <theBskt->size()  iName2++
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<hazardRates.size()  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<hazardRates.size()  i++
																				{
																				-----------------------------------------------
																				array table
																				hazardRates -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<hazardRates.size()  i++
																				{
																				-----------------------------------------------
																				array table
																				defTS -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<hazardRates.size()  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<numRows  i++
																				{
																				-----------------------------------------------
																				array table
																				swapLenghts -> ['[j]']
																				helpers -> ['[i]', '[i]']
																				swaptionVols -> ['[k]', '[k]']
																				-----------------------------------------------
																				}
																				loop info: i=0  i<numRows  i++
																				{
																				-----------------------------------------------
																				array table
																				swaptionMaturities -> ['[i]']
																				swapLenghts -> ['[j]']
																				swaptionVols -> ['[k]']
																				-----------------------------------------------
																				}
																				loop info: i=0  i<swaptions.size()  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i=0  i<swaptions.size()  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i=0  i<swaptions.size()  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i=0  i<swaptions.size()  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i=0  i<leg.size()  i++
																				{
																				-----------------------------------------------
																				array table
																				leg -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<numberOfBonds  i++
																				{
																				-----------------------------------------------
																				array table
																				marketQuotes -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<numberOfBonds  i++
																				{
																				-----------------------------------------------
																				array table
																				quote -> ['[i]']
																				quoteHandle -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<numberOfBonds  i++
																				{
																				-----------------------------------------------
																				array table
																				couponRates -> ['[i]']
																				maturities -> ['[i]']
																				quoteHandle -> ['[i]', '[i]']
																				issueDates -> ['[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<numberOfBonds  i++
																				{
																				-----------------------------------------------
																				array table
																				bondsHelpers -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=1  i<dates.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				dates -> ['[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<numberOfBonds  i++
																				{
																				-----------------------------------------------
																				array table
																				cleanPrice -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<numberOfBonds  i++
																				{
																				-----------------------------------------------
																				array table
																				cleanPrice -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<numberOfBonds  i++
																				{
																				-----------------------------------------------
																				array table
																				quote -> ['[i]']
																				quoteHandle -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size j=0  j<LENGTH(lengths)  j++
																				{
																				-----------------------------------------------
																				array table
																				lengths -> ['[j]']
																				quoteHandle -> ['[j]', '[j]']
																				coupons -> ['[j]', '[j]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i< LENGTH(knots)  i++
																				{
																				-----------------------------------------------
																				array table
																				knots -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<instrumentsA.size()  i++
																				{
																					loop info: Size j=0  j<cfSize-1  j++
																					{
																					-----------------------------------------------
																					array table
																					cfs -> ['[j]', '[j]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				instrumentsA -> ['[i]', '[i]']
																				coupons -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<instrumentsA.size()  i++
																				{
																					loop info: Size j=0  j<cfSize-1  j++
																					{
																					-----------------------------------------------
																					array table
																					cfs -> ['[j]', '[j]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				instrumentsA -> ['[i]', '[i]']
																				coupons -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<instrumentsA.size()  i++
																				{
																					loop info: Size j=0  j<cfSize-1  j++
																					{
																					-----------------------------------------------
																					array table
																					cfs -> ['[j]', '[j]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				instrumentsA -> ['[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: Size k=0  k<LENGTH(lengths)-1  k++
																				{
																				-----------------------------------------------
																				array table
																				instrumentsA -> ['[k]', '[k]']
																				-----------------------------------------------
																				}
																				loop info: Size i=0  i<instrumentsA.size()  i++
																				{
																					loop info: Size j=0  j<cfSize-1  j++
																					{
																					-----------------------------------------------
																					array table
																					cfs -> ['[j]', '[j]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				instrumentsA -> ['[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: i = 0  i<count  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: size_t i=0  i<symbols.size()-1  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info:   yearOffset < size  ++yearOffset
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info:   monthoffset < size  ++monthoffset
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info:   it != processorMap_.end()  ++it
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i=objectList.begin()  i!=objectList.end()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i=valueObjects.begin()  i!=valueObjects.end()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i=valueObjects.begin()  i!=valueObjects.end()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info:   iter != relationObs.end()   iter++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i = objectIDs.begin()  i != objectIDs.end()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i=objectMap_.begin()  i!=objectMap_.end()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i=objectMap_.begin()  i!=objectMap_.end()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i=objectMap_.begin()  i!=objectMap_.end()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i = objectList.begin()  i != objectList.end()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i = objectList.begin()  i != objectList.end()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info:   it != relationObs.end()  ++it
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i = group->list().begin()  i != group->list().end()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i = objectList.begin()  i != objectList.end()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i = objectList.begin()  i != objectList.end()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: unsigned int i = 0  i < vecTime.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: unsigned int i = 0  i < vecTime.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: unsigned int i = 0  i < relationIDs.size()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i = errorMessageMap_.begin()  i != errorMessageMap_.end()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int numValidRows=xMulti.val.array.rows  numValidRows  --numValidRows
																				{
																					loop info: int i=0  i<xMulti.val.array.columns  ++i
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int numValidCols=xMulti.val.array.columns  numValidCols  --numValidCols
																				{
																					loop info: int i=0  i<xMulti.val.array.rows  ++i
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int i=0  i<numValidRows  ++i
																				{
																					loop info: int j=0  j<numValidCols  ++j
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int i=0  i<xRet.val.array.columns * xRet.val.array.rows  ++i
																				{
																				-----------------------------------------------
																				array table
																				xRet.val.array.lparray -> ['[i]', '[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: int j=0  j<xMulti.val.array.columns  ++j
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int i=0  i<xMulti.val.array.rows  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int i=0  i<xMulti->val.array.rows  ++i
																				{
																					loop info: int j=0  j<numCols  ++j
																						{
																						-----------------------------------------------
																						array table
																						-----------------------------------------------
																						}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int i=0  i<xRet.val.array.columns * xRet.val.array.rows  ++i
																				{
																				-----------------------------------------------
																				array table
																				xRet.val.array.lparray -> ['[i]', '[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: int i=0  i<xMulti.val.array.rows  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int j=0  j<xMulti.val.array.columns  ++j
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int i=0  i<xMulti->val.array.rows  ++i
																				{
																					loop info: int j=0  j<xMulti->val.array.columns  ++j
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int i=0  i<xRet.val.array.columns * xRet.val.array.rows  ++i
																				{
																				-----------------------------------------------
																				array table
																				xRet.val.array.lparray -> ['[i]', '[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: int i=0  i<sizeInput  i++
																				{
																				-----------------------------------------------
																				array table
																				flagsCpp -> ['[i]']
																				val.array.lparray -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: int i=0  i<xMulti->val.array.rows * xMulti->val.array.columns  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int i=0  i<size  ++i
																				{
																				-----------------------------------------------
																				array table
																				val.array.lparray -> ['[i]', '[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: unsigned char i=1  i<=xValue->val.str[0]  i++
																				{
																				-----------------------------------------------
																				array table
																				val.str -> ['[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: i = 0  testlist[i] != NULL  i++
																				{
																				-----------------------------------------------
																				array table
																				testlist -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: dptr = suite->head  dptr  dptr = dptr->next
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i = 1  i < argc  i++
																				{
																				-----------------------------------------------
																				array table
																				argv -> ['[i]', '[i]', '[i]', '[i]', '[i][0]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: i = 1  i < argc  i++
																				{
																				-----------------------------------------------
																				array table
																				argv -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: sub_suite* head = suite->head  head != NULL  head = next
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < 3  i++
																				{
																				-----------------------------------------------
																				array table
																				bundles -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: size_t i = 0  i < LEN  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < 100  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: size_t i = 0  i < LEN  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < BUFSIZE  i++
																				{
																				-----------------------------------------------
																				array table
																				contents2 -> ['[i]', '[i]']
																				contents1 -> ['[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < endScan  i++
																				{
																				-----------------------------------------------
																				array table
																				expected -> ['[i]', '[i]']
																				actual -> ['[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: size_t i = 0  i < out.limit()  i++
																				{
																				-----------------------------------------------
																				array table
																				utf8_greet -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < package->getRepetitions()  i++
																				{
																					loop info: size_t i = 0  i < out.limit() && pass  i++
																							{
																							-----------------------------------------------
																							array table
																							expected -> ['[i]']
																							-----------------------------------------------
																							}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < THREAD_COUNT  i++
																				{
																				-----------------------------------------------
																				array table
																				threads -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < THREAD_COUNT  i++
																				{
																				-----------------------------------------------
																				array table
																				threads -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < MAX  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int bufSize = 1  bufSize <= 128  bufSize *= 2
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i = -(size + 10)  i < (size + 10)  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i = 0  i < MAX  i++
																				{
																					loop info: int j = limit  j >= 0  j--
																					{
																					-----------------------------------------------
																					array table
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int isize = 1  isize <= 128  isize *= 2
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < numberOfAdds  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int j = 0  j < len  j++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < 25  i++
																				{
																				-----------------------------------------------
																				array table
																				msg -> ['[8]', '[9]']
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < 25  i++
																				{
																				-----------------------------------------------
																				array table
																				msg -> ['[8]', '[9]']
																				-----------------------------------------------
																				}
																				loop info: size_t i = 0  i < files.size()  i++
																				{
																				-----------------------------------------------
																				array table
																				files -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < 25  i++
																				{
																				-----------------------------------------------
																				array table
																				msg -> ['[8]', '[7]', '[8]']
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < 25  i++
																				{
																				-----------------------------------------------
																				array table
																				msg -> ['[8]', '[7]', '[8]']
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < 4  i++
																				{
																				-----------------------------------------------
																				array table
																				filenames -> ['[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < 5  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < 4  i++
																				{
																				-----------------------------------------------
																				array table
																				filenames -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < 4  i++
																				{
																				-----------------------------------------------
																				array table
																				filenames -> ['[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i <= 2  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int i = 3  i <= 4  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < 4  i++
																				{
																				-----------------------------------------------
																				array table
																				filenames -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < 4  i++
																				{
																				-----------------------------------------------
																				array table
																				filenames -> ['[i]', '[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < 5  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < 3  i++
																				{
																				-----------------------------------------------
																				array table
																				filenames -> ['[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i <= 2  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int i = 3  i <= 4  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < 4  i++
																				{
																				-----------------------------------------------
																				array table
																				filenames -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < 3  i++
																				{
																				-----------------------------------------------
																				array table
																				filenames -> ['[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < 5  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < 4  i++
																				{
																				-----------------------------------------------
																				array table
																				filenames -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < 3  i++
																				{
																				-----------------------------------------------
																				array table
																				filenames -> ['[i]', '[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < 5  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < 25  i++
																				{
																				-----------------------------------------------
																				array table
																				msg -> ['[8]', '[7]', '[8]']
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < 25  i++
																				{
																				-----------------------------------------------
																				array table
																				msg -> ['[8]', '[7]', '[8]']
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < 25  i++
																				{
																				-----------------------------------------------
																				array table
																				msg -> ['[8]', '[7]', '[8]']
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < 50  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < 50  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int x = 0  x < length  x++
																				{
																				-----------------------------------------------
																				array table
																				levelArray -> ['[x]', '[x]']
																				-----------------------------------------------
																				}
																				loop info: int x = 0  x < length  x++
																				{
																				-----------------------------------------------
																				array table
																				levelArray -> ['[x]', '[x]']
																				-----------------------------------------------
																				}
																				loop info: int x = 0  x < length  x++
																				{
																					loop info: int y = length - 1  y >= 0  y--
																					{
																					-----------------------------------------------
																					array table
																					levelArray -> ['[y]', '[x]', '[y]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				levelArray -> ['[x]']
																				-----------------------------------------------
																				}
																				loop info: int x = 0  x < length  x++
																				{
																					loop info: int y = length - 1  y >= 0  y--
																					{
																					-----------------------------------------------
																					array table
																					levelArray -> ['[y]', '[x]', '[y]']
																					-----------------------------------------------
																					}
 																				-----------------------------------------------
																				array table
																				levelArray -> ['[x]']
																				-----------------------------------------------
																				}
																				loop info: size_t i = 0  i < datePattern.length()  i++
																				{
																				-----------------------------------------------
																				array table
																				datePattern -> ['[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: log4cxx::spi::FilterPtr f = headFilter  f != NULL  f = f->getNext(
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: log4cxx::spi::FilterPtr f = headFilter  f != NULL  f = f->getNext(
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: LogString::size_type i = count  i > 0  i--
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: AppenderList::iterator it=appenders.begin()  it!=appenders.end()  ++it
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: const Logger * l = this  l != 0  l=l->parent
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: LoggerPtr l(const_cast<Logger*>(this))  l != 0  l = l->parent
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int i = 0  names[i] != 0  i++
																				{
																				-----------------------------------------------
																				array table
																				names -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: it = names.begin()  it != names.end()  it++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: char* c = src  *c != 0  c++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < fields  i++
																				{
																				-----------------------------------------------
																				array table
																				request -> ['[i]']
																				result -> ['[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: int i = 0  i < len  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: it = mdcCopy->begin()  it != mdcCopy->end()  it++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: MDC::Map::const_iterator it = m.begin()  it != m.end()  it++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: it = properties->begin()  it != properties->end()  it++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: it = properties->begin()  it != properties->end()  it++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info:   i < in.limit() && ((unsigned int) *p) < 0x80  i++, p++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info:   valueIter != values.end()  valueIter++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info:   valueIter != values.end()  valueIter++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info:   valueIter != values.end()  valueIter++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info:  size_t i = hours.length()  i-- > 0  
																				{
																				-----------------------------------------------
																				array table
																				hours -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info:  size_t j = min.length()  j-- > 0  
																				{
																				-----------------------------------------------
																				array table
																				min -> ['[j]']
																				-----------------------------------------------
																				}
																				loop info:  iter++  iter != fmt.end()  iter++ 
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info:  PatternTokenList::iterator iter = pattern.begin()  iter != pattern.end()  iter++ 
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info:  PatternTokenList::iterator iter = pattern.begin()  iter != pattern.end()  iter++ 
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info:  PatternTokenList::iterator iter = pattern.begin()  iter != pattern.end()  iter++ 
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info:  PatternTokenList::const_iterator iter = pattern.begin()  iter != pattern.end()  iter++ 
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i = 0  i < loopLen  i++
																				{
																				-----------------------------------------------
																				array table
																				temp -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: int i = lowIndex  i <= highIndex  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int i = converterId.length()  i > 0  i--
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: LogString::size_type i = 0  i < formatted.length()  i++
																				{
																				-----------------------------------------------
																				array table
																				plusMagic -> ['[i]']
																				formatted -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: it = clonedList.begin()  it != itEnd  it++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: it = clonedList.begin()  it != itEnd  it++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: it = loggers->begin()  it != itEnd  it++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: it = loggers1.begin()  it != itEnd  it++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: it = loggers1.begin()  it != itEnd  it++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: it = loggers1.begin()  it != itEnd  it++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: it = pn.begin()  it != itEnd  it++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: it = appenderList.begin()  it != itEnd  it++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: it = appenderList.begin()  it != itEnd  it++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: it = appenderList.begin()  it != itEnd  it++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: i = buffer.begin()  i != buffer.end()  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: size_t i = 0  i < loggers.size()  i++
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int i = 1  i < argc  i++
																				{
																				-----------------------------------------------
																				array table
																				argv -> ['[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]', '[i]']
																				-----------------------------------------------
																				}
																				loop info: int i=0  i<size  ++i
																				{
																				-----------------------------------------------
																				array table
																				val.array.lparray -> ['[i]']
																				-----------------------------------------------
																				}
																				loop info: unsigned int i=0  i<m.rows()  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
																				loop info: int i=0  i<fpVector.rows  ++i
																				{
																				-----------------------------------------------
																				array table
																				-----------------------------------------------
																				}
 																			-----------------------------------------------
																			array table
																			validVectors_ -> ['[j]']
																			-----------------------------------------------
																			}
 																		-----------------------------------------------
																		array table
																		taus -> ['[j]']
																		V_ -> ['[i]', '[i]', '[i]']
																		-----------------------------------------------
																		}
 																	-----------------------------------------------
																	array table
																	-----------------------------------------------
																	}
 															-----------------------------------------------
															array table
															-----------------------------------------------
															}
 														-----------------------------------------------
														array table
														totalCashFlowsThisIndex_ -> ['[j]', '[j]']
														deflatorAndDerivatives_ -> ['[0]', '[i]']
														V_ -> ['[j]']
														-----------------------------------------------
														}
 												-----------------------------------------------
												array table
												cashFlowsGenerated_ -> ['[j]']
												deflatorAndDerivatives_ -> ['[0]', '[0]']
												numberCashFlowsThisIndex_ -> ['[j]']
												amount -> ['[0]']
												totalCashFlowsThisIndex_ -> ['[j]']
												numerairesHeld_ -> ['[j]']
												-----------------------------------------------
												}
 										-----------------------------------------------
										array table
										-----------------------------------------------
										}
 									-----------------------------------------------
									array table
									-----------------------------------------------
									}
 								-----------------------------------------------
								array table
								-----------------------------------------------
								}
 							-----------------------------------------------
							array table
							testedFactors -> ['[m]']
							marketModels -> ['[j]']
							theBumps -> ['[0]', '[0]']
							-----------------------------------------------
							}
 						-----------------------------------------------
						array table
						-----------------------------------------------
						}
 					-----------------------------------------------
					array table
					testedFactors -> ['[m]']
					marketModels -> ['[j]']
					theBumps -> ['[0]', '[0]']
					-----------------------------------------------
					}
 				-----------------------------------------------
				array table
				-----------------------------------------------
				}
 			-----------------------------------------------
			array table
			testedFactors -> ['[m]']
			marketModels -> ['[j]']
			-----------------------------------------------
			}
 		-----------------------------------------------
		array table
		-----------------------------------------------
		}
 	-----------------------------------------------
	array table
	testedFactors -> ['[m]']
	marketModels -> ['[j]']
	theBumps -> ['[0]', '[0]']
	-----------------------------------------------
	}
 -----------------------------------------------
array table
-----------------------------------------------
}

